object Form1: TForm1
  Left = 549
  Top = 309
  Caption = #33258#32472#26631#39064#26639#21644#28378#21160#26465
  ClientHeight = 557
  ClientWidth = 874
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clBlack
  Font.Height = -14
  Font.Name = 'Tahoma'
  Font.Style = []
  OldCreateOrder = False
  Position = poDesigned
  OnCreate = FormCreate
  OnDestroy = FormDestroy
  DesignSize = (
    874
    557)
  PixelsPerInch = 96
  TextHeight = 17
  object FsImage1: TFsImage
    Left = 168
    Top = 160
    Width = 4
    Height = 100
    Picture = npdRightBorder
    AutoSize = True
    Visible = False
  end
  object PageControl1: TPageControl
    Left = 8
    Top = 8
    Width = 858
    Height = 541
    ActivePage = TabSheet1
    Anchors = [akLeft, akTop, akRight, akBottom]
    TabOrder = 0
    object TabSheet1: TTabSheet
      Caption = 'Memo'
      DesignSize = (
        850
        509)
      object FsButton3: TFsCoverButton
        Left = 111
        Top = 0
        Width = 85
        Height = 80
        Layout = blPictureTop
        Caption = #20998#38144#21830
        Font.Charset = DEFAULT_CHARSET
        Font.Color = clWhite
        Font.Height = -13
        Font.Name = #26032#23435#20307
        Font.Style = []
        AllowDown = True
        Down = False
        Group = 1
        Picture.Data = {
          0B54504E474772617068696336240000424D3624000000000000360000002800
          0000300000003000000001002000000000000024000000000000000000000000
          000000000000FFFFFF00FFFFFF00000000000000000100000002000000040000
          0006000000080000000800000008000000080000000700000007000000070000
          0007000000070000000700000007000000070000000700000007000000070000
          0007000000070000000700000007000000070000000700000007000000070000
          0007000000070000000700000007000000070000000700000007000000070000
          0007000000070000000700000007000000060000000500000003000000010000
          000000000000FFFFFF00FFFFFF000000000000000002000000050000000A0000
          000E000000100000001000000010000000100000000F0000000F0000000F0000
          000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000
          000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000
          000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000
          000F0000000F0000000F0000000F0000000E0000000C00000008000000050000
          000200000000FFFFFF00FFFFFF00000000010000000400000009000000100000
          0014000000160000001600000016000000160000001600000016000000160000
          0016000000160000001600000016000000160000001600000016000000160000
          0016000000160000001600000016000000160000001600000016000000160000
          0016000000160000001600000016000000160000001600000016000000160000
          001600000016000000160000001500000015000000130000000F000000090000
          000400000001FFFFFF00FFFFFF000000000200000006A2751965A36D0EC5A770
          0DECA7710CF4A36E0CCDA36D0CCCA36C0CCCA26B0BCCA26B0BCCA26B0BCCA26B
          0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A
          0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A
          0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A0BCCA16A
          0BCCA16A0BCCA47011CD9F6D10B195660F7C49320727000000140000000E0000
          000700000002FFFFFF00FFFFFF000000000300000008E1C839FAE5CB3BFFE7CC
          3CFFE7CC3BFFE7CC3BFFE7CC3CFFE7CC3CFFE7CC3BFFE7CC3CFFE6CB3BFFE7CE
          3CFFE6CB3BFFE7CD3CFFE7CC3CFFE7CB3BFFE7CE3CFFE7CC3CFFE6CB3BFFE7CE
          3CFFE7CC3CFFE7CC3CFFE7CE3CFFE7CC3CFFE7CC3CFFE7CE3CFFE7CC3CFFE7CC
          3CFFE7CE3CFFE7CC3CFFE7CE3CFFE7CE3CFFE7CC3CFFE7CE3CFFE7CC3CFFE7CC
          3CFFE7CE3CFFE7CC3CFFE5CC3BFDE1BF37FFBF8E17FF66490F30000000110000
          000800000003FFFFFF00FFFFFF0000000003EAD044F9E9CD3EFFE8CC3DFFE8CD
          3CFFE8CD3CFFE8CD3CFFE7CD3DFFE7CC3CFFE8CD3CFFE7CD3DFFE8CD3CFFE7CF
          3CFFE7CD3CFFE8CE3CFFE7CE3DFFE7CE3DFFE7CE3DFFE8CC3CFFE7CC3CFFE8CF
          3DFFE7CC3CFFE7CC3DFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC
          3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC3CFFE7CC
          3CFFE7CC3CFFE7CC3CFFE8CD3DFFE8CD3EFFE1BF37FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003ECD047FFECCE43FFEDCF41FFEACE
          3EFFE8CD3CFFE8CC3CFFE8CC3DFFE8CD3DFFE8CC3CFFE8CD3DFFE8CD3DFFE8CD
          3DFFE8CD3DFFE8CD3DFFE7CD3DFFE7CD3DFFE8CD3CFFE8CE3DFFE8CE3DFFE8CD
          3EFFE8CD3EFFE8CD3EFFE9CD3EFFE9CD3EFFE9CD3EFFE9CD3EFFE9CD3EFFE9CD
          3EFFE9CD3EFFE9CD3EFFE9CD3EFFE8CD3EFFE8CD3DFFE9CD3DFFE8CD3DFFE8CD
          3DFFE8CE3DFFE8CD3DFFE9CD3EFFE8CF3DFFEACD40FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F0D450FDEED045FFEECF45FFEDCF
          44FFE9CD3EFFE8CD3DFFE8CD3DFFE9CD3DFFE8CD3CFFE8CD3DFFE8CD3EFFE8CD
          3DFFEACD3FFFEACD3FFFEACD3FFFEACD3FFFE9CC3FFFE9CD3EFFE9CC3EFFE9CC
          3EFFE9CD40FFEBCF40FFEACD41FFEACD3FFFEACD40FFEACF40FFEACD40FFEACD
          40FFEACF40FFEACD40FFE9CE40FFEBCF41FFEACE3FFFEACD3EFFEBCE41FFEACD
          41FFEBCE42FFE9CE40FFEACD42FFE8CF3DFFEACD40FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F1D958F1EECF45FFEFD047FFEED0
          45FFEDCF44FFEDCE44FFEECE44FFEDCE44FFEBCF41FFEDCE44FFEDCF43FFECCF
          43FFEBCE41FFECCE41FFECCF43FFEBCF43FFECCE43FFEBCE42FFEBCD42FFECCF
          42FFECCE43FFEDCE42FFEBCE42FFEACD41FFEBCD40FFEACF40FFEACD40FFEACD
          40FFEBCF41FFECCD44FFEDCE46FFEECE46FFEDCE44FFECCF44FFEECE44FFECCF
          46FFEECF47FFEDCE46FFEFCF48FFEFCE48FFECCE42FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F4DC5FFFF1D048FFF0D048FFF0D0
          47FFEFD047FFF0CF48FFEFCF48FFF0CF48FFEFD047FFEFCF48FFF0D048FFEFD0
          47FFEED047FFEFCF47FFEFCF48FFEFCE46FFEECF46FFEECE46FFEFCE47FFEFCE
          47FFEFCE48FFEFCE48FFEFCE48FFEFCE48FFEFCE48FFEFCE48FFEFCE48FFEFCE
          48FFEFCE48FFEFCE48FFEFCE48FFEFCF48FFEFCE48FFEFCE48FFEFCF48FFF0CF
          48FFEFCF49FFEFCF48FFEFD048FFF0CF48FFEDCE48FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F4DD66FFF1D148FFF1D048FFF2D0
          48FFF1D048FFF0CF48FFF0D048FFF2D049FFF2CF4AFFF1CF49FFF2D049FFF1D0
          49FFF0CF49FFF0CF49FFF1D049FFF1D049FFF0CF49FFF0CF49FFF0CF49FFF0CF
          48FFF0CF49FFF0CD48FFF0CF48FFF0CF49FFF0CD48FFF1D049FFF0CF49FFF0CF
          49FFF0CF48FFF0CF49FFF0CD48FFF0CF48FFF0CF49FFF0CF48FFF0CF49FFF0CF
          49FFF0CF48FFF0CF48FFEFD048FFF0CF48FFEDCE48FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F6E169FFF3D24AFFF4D34AFFF2D1
          49FFF3D24AFFF1D149FFF1D049FFF3D04AFFF2D04AFFF1CF4AFFF2D049FFF1D0
          49FFF0CF49FFF0CF49FFF1D049FFF1D049FFF0CF49FFF0CF49FFF1CF49FFF0CF
          48FFF0CF49FFF0CD48FFF0CF48FFF0CF49FFF0CE48FFF1D048FFF0CF49FFF0CF
          48FFF0CF49FFF0CF49FFF0CD48FFF0CF48FFF0CF49FFF0CF48FFF0CF49FFF0CF
          49FFEFCF49FFF0CF49FFF0CF49FFF0CF49FFEECD48FFC49119FF000000110000
          000900000003FFFFFF00FFFFFF0000000003F8DF6CFFF4D34AFFF3D34AFFF3D3
          4AFFF5D34AFFF4D24BFFF3D24BFFF5D24AFFF3D24AFFF3D14AFFF3D04AFFF2D0
          49FFF2D049FFF2D14AFFF0D048FFF1D049FFF1CF48FFF1CF48FFF0CF49FFEFCF
          49FFF0CF49FFEFCF48FFEFCF49FFEFCF49FFEFCF49FFEFCF48FFEFCF48FFEFCF
          49FFEFCF49FFEFCF49FFEFCF49FFEFCF49FFF0CF49FFEFCF49FFF0CF49FFF0CF
          49FFF0CF48FFF0CF49FFF0CF49FFF0CF49FFF0CF49FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FAE36EFFF6D44BFFF6D44AFFF6D4
          4AFFF6D44AFFF6D44CFFF5D34AFFF6D44BFFF5D34AFFF5D34BFFF4D44BFFF4D0
          4AFFF2D14AFFF3D04AFFF3D14AFFF2D04AFFF2D14AFFF2D14BFFF0D35AFFF3E2
          93FFF5E8A3FFF5E7A2FFF3E190FFEFD663FFEECF47FFEFCF46FFF0CF48FFF0D0
          48FFF0CF4AFFF0CF49FFF0CF48FFF0CF49FFF0CF49FFF0CF48FFF0CF49FFF0CF
          49FFF0CF48FFF0CF49FFF0CF49FFF0CF49FFF0CF49FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FBE773FFF8D64AFFF7D64AFFFAD7
          4BFFF8D64BFFF8D54BFFF7D64BFFF7D54BFFF6D44BFFF5D54BFFF6D44AFFF5D4
          4AFFF4D34AFFF4D14BFFF4D14AFFF2D24DFFF4E7A5FFFDF8E5FFFDFCF2FFFBF6
          E0FFFBF4CFFFFBF4CFFFFBF6DEFFFDFCF0FFFBF6E1FFF4E7A3FFEFD14BFFF0CF
          48FFF0CF48FFF0CE48FFF0CF48FFF0CE48FFEFCF48FFEFCF48FFEFCE48FFF0CF
          48FFEFCF49FFEFCE48FFF0CF48FFEFCE48FFEFCF48FFC08F18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FCE976FDFAD84CFFF8D94AFFF7D7
          4BFFFAD74BFFF9D84BFFF9D74CFFF8D74BFFF8D64BFFF7D54BFFF8D64AFFF6D4
          4BFFF6D44CFFF5D44AFFF3D657FFFCF9E4FFFDF9EEFFF7E083FFF3D452FFF4D3
          4DFFF3D34DFFF4D34AFFF3D34AFFF2D250FFF7E392FFFDFAEFFFFCF9E4FFF0D7
          64FFF0CF48FFF0CF48FFF0CF49FFF0CF48FFF0CF48FFF0CF48FFF0CF49FFF0CF
          49FFF0CF49FFEFCF48FFF0CF49FFF0CF49FFEFCF49FFC08E18FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFED7BFEFCDA4CFFFCD94CFFFADA
          4BFFFAD94CFFF9D94CFFF9D84CFFFAD94BFFF9D84BFFF8D74BFFF9D64CFFF8D7
          4BFFF8D64BFFF4DB71FFFFFFF9FFFDEFBDFFF2D24DFFF3D449FFF4D44AFFF5D5
          4AFFF5D54BFFF4D44AFFF4D44AFFF4D34AFFF3D34AFFF2D24BFFFAEFC5FFFDFC
          F7FFF1D462FFF0CF49FFF0CF48FFF0CF48FFF0CF49FFF0CF48FFF0CF49FFEFCF
          49FFF0CF48FFEFCF49FFF0CF48FFEFCF49FFF0CF48FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFF07EFEFDDA4DFFFEDD4DFFFDDC
          4DFFFDDD4EFFFCDB4CFFFCDB4BFFFCDB4DFFFDDB4CFFFAD84DFFFAD94CFFFAD8
          4CFFF7D952FFFFFFF7FFFAEAA8FFF5D449FFF5D64AFFF6D64AFFF6D74AFFF5D5
          4AFFF5D74AFFF6D74AFFF5D64AFFF5D64AFFF5D54AFFF4D44AFFF2D34AFFF8E9
          B0FFFDFDF3FFF0D254FFEFCF48FFF0CF48FFEFCF49FFF0CE49FFF1D049FFF1CF
          49FFF1CF48FFF0CF49FFF1CF48FFEFCE48FFEFCF48FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFF685FEFFDD4DFFFFDD4DFFFDDE
          4DFFFEDD4EFFFEDD4DFFFDDD4CFFFEDC4EFFFDDC4CFFFBDB4EFFFBDA4CFFFADA
          4FFFFFF8D4FFFFF9D4FFF4D54EFFF6D94BFFF8D84CFFF8D94CFFF7D94BFFF8D9
          4CFFF8D94CFFF8D84CFFF7D84BFFF7D84BFFF6D64BFFF6D64AFFF4D54AFFF3D3
          4CFFFDF6D5FFF9F3D3FFEFCF49FFEFCF49FFEFCF49FFEFCF49FFF0D049FFF2CF
          48FFF2D048FFF2D049FFF1CF48FFF0CF48FFF0CF48FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFA89FEFFE04EFFFFDE4DFFFFDF
          4DFFFFE14EFFFEDF4EFFFEDE4EFFFFDD4EFFFEDE4CFFFDDD4EFFFCDB4EFFFADF
          70FFFFFFFAFFF9E076FFF8D64CFFF8DC4DFFF9DC4DFFF9DC4EFFF9DD4DFFF8DC
          4BFFFADB4CFFF9DB4CFFF8DA4CFFF7DA4CFFF7D74BFFF6D64BFFF5D54BFFF4D4
          4AFFF5DB6DFFFEFDF7FFF3DA70FFF0CF49FFF0CF49FFF1CF49FFF2D049FFF2D1
          49FFF3D149FFF2D149FFF2D048FFF0CF49FFEFCD48FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFD8EFEFFE04EFFFFE14FFFFFE0
          4FFFFFE24EFFFFE14EFFFEDF4EFFFFDF4DFFFEDE4DFFFFDC4EFFFEDB4DFFFEF9
          C4FFFFFDDCFFF9D854FFF9DC4CFFFAE04DFFFBE04EFFFADF4FFFFAE04DFFFBDD
          4DFFF9DD4DFFF9DC4CFFF8DB4CFFF8DB4CFFF8D84CFFF6D74AFFF5D64AFFF3D3
          49FFF4D44FFFFCF4D0FFFAF1C4FFF0CF47FFF0CF49FFF1D049FFF2D049FFF3D3
          48FFF3D249FFF4D149FFF2D049FFF0CF48FFF0CD46FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFF92FFFFE350FFFFE250FFFFE2
          4FFFFFE451FFFFE350FFFFE14FFFFFE04EFFFFDD4EFFFFDF4EFFFDDD52FFFFFD
          EFFFFFF7BFFFFADD4BFFFBE04DFFFCE24EFFFCE14FFFFBE14FFFFCE14EFFFBDF
          4DFFFBDE4EFFF9DE4DFFF9DD4DFFF9DC4CFFFADA4CFFF7D84BFFF6D64AFFF5D3
          49FFF3D145FFF9EAA4FFFFFCECFFF1D458FFF0CF48FFF0CF49FFF4D248FFF4D2
          49FFF4D34AFFF3D24AFFF4D149FFF1D049FFF0CE48FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFF99FFFFE550FFFFE450FFFFE6
          51FFFFE451FFFFE450FFFFE34FFFFFE14FFFFFDF4EFFFFDC49FFFAD965FFFFFF
          EBFFFCE89BFFFBDD46FFFCE34FFFFCE34FFFFCE350FFFBE24EFFFBE14FFFFCE2
          4EFFFCE14EFFFBDF4DFFFADF4DFFFBDD4CFFFADD4CFFF8D94CFFF7D74BFFF6D5
          4AFFF4D03FFFF4DF8CFFFEFDF6FFF4DC7EFFF0D047FFF2D049FFF4D24AFFF4D3
          49FFF4D34AFFF4D34AFFF3D249FFF2D249FFF1D048FFBF8E17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFF9EFFFFE751FFFFE952FFFFE7
          51FFFFE550FFFFE551FFFFE64FFFFFE34FFFFFE351FFFAD543FFDEB335FFFFFD
          E6FFEACC7CFFEDC737FFFDE44FFFFDE550FFFDE550FFFCE44FFFFCE34FFFFCE4
          4FFFFCE34FFFFCE24EFFFAE04DFFFADE4CFFFADD4DFFFADB4CFFF8D94BFFF6D7
          4BFFE8C337FFD1AC3CFFF3E9C9FFDDC061FFECC83EFFF5D249FFF6D34AFFF5D4
          4AFFF5D44AFFF5D44AFFF4D34AFFF3D249FFF2D047FFC29017FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFA3FFFFEA52FFFFEA52FFFFE8
          51FFFFE751FFFFE851FFFFE751FFFFE650FFFFE450FFF5CE3FFFD09E1BFFCE99
          19FFCE9B1BFFE0B82EFFFDE44FFFFEE750FFFDE650FFFCE550FFFCE44FFFFCE4
          50FFFDE54FFFFDE34FFFFBE14EFFFBDF4EFFFBDE4EFFFADD4CFFFADB4CFFF9D7
          4BFFDBB932FFC39318FFC79929FFC49720FFE4C039FFF5D24AFFF8D54AFFF7D5
          4BFFF7D449FFF6D54BFFF5D44AFFF4D34AFFF3D149FFC08F17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFA9FFFFEE53FFFFEC52FFFFEA
          51FFFFEA52FFFFEA52FFFFEA52FFFFE951FFFFE952FFFAD343FFD5A51EFFD09A
          19FFD19E1AFFE7BE32FFFEE550FFFEE951FFFEE851FFFDE751FFFDE74FFFFDE4
          50FFFDE551FFFDE34FFFFCE34FFFFDE04FFFFCE04EFFFBDE4EFFFBDC4DFFFBDA
          4DFFDDBB33FFC49418FFC39117FFC59519FFE9C43DFFF8D54AFFF9D54AFFF8D7
          4AFFF7D549FFF8D54BFFF6D44AFFF5D34AFFF3D34AFFC28F17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFB0FFFFED52FFFFED53FFFFEC
          53FFFFEC54FFFFE953FFFFEB53FFFFEB53FFFFEB52FFFFE14AFFEFC838FFDDB5
          28FFE4C030FFFDD845FFFEE651FFFEE851FFFEE851FFFDE751FFFDE750FFFDE6
          50FFFDE450FFFCE54FFFFDE44FFFFEE34FFFFDE24FFFFDDF4FFFFCDE4DFFFCDC
          4DFFF0CB42FFD4AE28FFCAA01FFFD7AE2BFFF3CF46FFF8D64BFFFAD84BFFF9D7
          4BFFF8D54CFFF8D54BFFF6D54BFFF6D44AFFF6D44AFFC08F17FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFB4FFFFEF53FFFFEF53FFFFEE
          54FFFFEC53FFFFEC54FFFFEC53FFFFEB54FFFFEE53FFFFED54FFFFEC53FFFFEB
          52FFFFEB52FFFFEB52FFFFEA52FFFEE951FFFEE851FFFEE850FFFDE851FFFEE7
          51FFFDE750FFFDE650FFFDE650FFFEE450FFFEE34FFFFFE14FFFFEE14FFFFFE1
          4FFFFFE04FFFFEDE4EFFFDDB4DFFFDDB4CFFFCDB4CFFFCD94CFFFBDA4CFFFBD8
          4CFFF9D74CFFFAD64BFFF8D64BFFF8D44AFFF7D54BFFC49217FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBAFFFFF053FFFFF055FFFFF0
          54FFFFEE54FFFFEE54FFFFED54FFFFED54FFFFEE54FFFFED54FFFFEC53FFFFEC
          52FFFFEB52FFFFEB52FFFFEB51FFFEE951FFFEE951FFFEE951FFFEE851FFFEE7
          51FFFDE851FFFEE650FFFEE650FFFEE650FFFEE64FFFFFE350FFFFE24FFFFFE0
          4FFFFFE04EFFFFDF4EFFFEDD4DFFFEDC4DFFFDDB4DFFFEDB4DFFFDDA4DFFFCDA
          4DFFFCD84CFFFBD74BFFFAD64CFFF8D64BFFF7D64BFFC39117FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBAFFFFF555FFFFF055FFFFF0
          54FFFFEF54FFFFF055FFFFEF54FFFFEF54FFFFEF54FFFFEF54FFFFEF54FFFFEF
          54FFFFEC54FFFFEC52FFFFEB53FFFEEA53FFFFEA52FFFEEA52FFFEEA52FFFEEA
          52FFFEE951FFFEE951FFFEE750FFFEE650FFFEE550FFFEE450FFFFE24FFFFFE1
          4FFFFFE04FFFFFDF4EFFFFDF4EFFFFDD4EFFFFDC4DFFFEDC4DFFFDDC4DFFFDDB
          4DFFFDDB4CFFFADA4BFFFAD84CFFF8D64BFFFAD74CFFC49217FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBBFFFFF255FFFFF254FFFFF3
          55FFFFF255FFFFF255FFFFF055FFFFF354FFFFF253FFFFF253FFFFF153FFFFF0
          53FFFFF053FFFFEF54FFFFEE54FFFFEB53FFFFEB52FFFFEB52FFFEE952FFFEE8
          52FFFFE851FFFEE852FFFEE750FFFEE650FFFEE650FFFFE450FFFFE24FFFFFE1
          4EFFFFE24FFFFFE04DFFFFDE4CFFFFDE4CFFFFDF4DFFFFDC4CFFFFDD4DFFFDDC
          4DFFFCDA4DFFFCDB4CFFFAD94BFFFAD84CFFFBD74CFFC69317FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBBFFFFF355FFFFF455FFFFF4
          55FFFFF454FFFFF254FFFFF254FFFFF154FFFFF254FFFFF354FFFFF254FFFFF2
          53FFFFF153FFFFF052FFFFF053FFFFF054FFFFEE53FFFFEE53FFFFEC54FFFFEA
          51FFFFEB52FFFEE850FFFFE851FFFEE650FFFEE650FFFFE44FFFFFE34EFFFFE3
          4EFFFFE24DFFFFE14DFFFFDE4CFFFFDE4CFFFFDF4DFFFFDD4CFFFFDD4CFFFFDD
          4DFFFCDB4DFFFCDA4CFFFBD94CFFFBD84BFFFAD84CFFC79417FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBCFFE6BD3EFFE2B129FFE2B1
          29FFE2B129FFE3B22AFFD19D1BFFD19C1BFF9CFEE7FF8AFCD8FF85F9D5FF80F5
          D1FF94F8E5FFD7A01AFFD69E1AFFD69E1AFFD69E19FFD49E1AFF9CFFE7FF8BFD
          DAFF84F8D3FF7DF4CEFF96F9E5FFD49E1AFFD49E1AFFD49E1AFFD49E1AFFD49E
          1AFFA9FDEEFF8FF7DBFF71EAC5FF61E2BAFF75EFD1FFDEA81DFFDEA71DFFF9EA
          85FFFFFFABFFFFFFA9FFFFFFA8FFFBED8AFFD6AC2DFFC79418FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBBFFFFFFBBFFF1D977FFE1B0
          28FFE2B029FFE2B129FFD19D1BFFD09C1AFF8CFDDAFF74F8C4FF6FF3BEFF66EC
          B6FF83F2D5FFD69E1AFFD69E1AFFD69E1AFFD59D19FFD49C19FF8DFEDBFF77FB
          C7FF6CF1BBFF63E9B4FF83F2D6FFD49C19FFD49E1AFFD69F1BFFD9A11CFFDFA8
          1CFF9DFCE6FF7BF0CAFF58DCA9FF47D19AFF61E2B9FFDFA81DFFDEA81DFFF9EA
          87FFFFFFACFFFFFFA9FFE5C651FFCC981AFFCA9618FFCB9718FF000000110000
          000900000003FFFFFF00FFFFFF0000000003FFFFBBFFFFFFB9FFFFFFBAFFFFFF
          BCFFE5BA3CFFE2B028FFD29E1BFFD19C1AFF8BFCD9FF73F7C3FF6CF1BCFF64EA
          B5FF80F1D4FFD69E1AFFD69E1AFFD59D19FFD49C19FFD49C19FF8CFEDAFF75F9
          C5FF68EEB7FF5EE5AFFF81F1D5FFE1A81CFFE1A81CFFE1A81CFFE1A81CFFE0A8
          1CFF9DFCE6FF7CF0CBFF58DBAAFF47D19AFF61E2B9FFDFA81DFFDFA81DFFF9EA
          7EFFEAD364FFD19F20FFCE9918FFCE9918FFCD9818FFCC9718FF000000110000
          000900000003FFFFFF00FFFFFF0000000002FFFFB9FFFFFFBAFFFFFFBBFFFFFF
          BBFFFFFFB0FFDBB842FFCF9B1AFFCE9A19FF8BFCD9FF71F6C1FF69EFBAFF60E6
          B3FF7DEFD2FFD69E19FFD49C19FFD49D19FFD59E1AFFD7A01BFF8BFCD9FF74F8
          C4FF66EBB6FF5AE2ABFF7EF0D3FFE1A81CFFE1A81CFFE1A81CFFE1A81CFFE1A8
          1CFF9DFCE6FF7CF0CBFF58DBAAFF47D19AFF61E2B9FFDFA91DFFDFA81DFFEFCB
          45FFD19E1CFFCE9A19FFCE9A19FFCF9A19FFCF9A19FFCE9918FF0000000F0000
          000800000003FFFFFF00FFFFFF0000000002FFFFB8FFFFFFB9FFF4E994FFD3A6
          2CFFCE9A19FFCE9A19FFCE9A19FFCE9A19FF88FBD7FF6CF0BCFF64EAB5FF5AE1
          ADFF78EDCEFFD8A11CFFDFA81CFFE1A91CFFE1A91CFFE1A91CFF8BFCD9FF73F7
          C2FF63E8B3FF58DFA9FF7BEED2FFE1A81CFFE1A81CFFE1A81CFFE1A81CFFE1A8
          1CFF9DFCE6FF7EF2CDFF59DBAAFF47D19AFF61E2B9FFE1A91DFFE0A91DFFE2AC
          22FFEFC439FFE8BB33FFD19E1CFFCF9B19FFD09B19FFD19B19FF0000000C0000
          000600000002FFFFFF00FFFFFF0000000001EBD872FFD1A020FFCE9A19FDCE9A
          19FACE9A19FECE9A19FFCF9B1AFFD49E19FF82F6D2FF61E8B2FF5DE4AFFF53DA
          A5FF6DE8C5FFE1A91CFFE1A91CFFE1A91CFFE1A91CFFE1A91CFF8AFCD8FF70F4
          C1FF5FE5B0FF53DCA6FF78EDCFFFE1A91CFFE1A81CFFE1A91CFFE1A81CFFE1A8
          1CFF9CFCE5FF7FF2CEFF5ADCACFF47D19AFF61E2B9FFE1A91DFFE1A91DFFE1A9
          1DFFE1A91DFFE3AE23FDEFC339FFE6B631FFD4A01DFFD19C19FF000000060000
          000300000001FFFFFF00FFFFFF0000000000F1CD3DB5F1CC3BD3F1CC3BCFF1CC
          3BF1F1CC3BF5F1CC3BF6F2CC3BF8F1CC3CF87DF3CEFF5BE2ACFF54DCA6FF4AD3
          9CFF62E2BBFFF2CE3ED3F2CF3ED3F3CF3FD3F3CF40D3F3D041D388FBD7FF6FF3
          BFFF5BE2ADFF4FD8A2FF77ECCEFFEDC73AD3ECC538D3EAC236D4E9C036D4E8C0
          36D59BFCE5FF82F4D1FF62E1B2FF49D29BFF61E2B9FFE7C13FF6E7C13FFAE7C1
          3FFBE7C13FFCE7C13FFDE6C040FAE8C23FFCEEC943FEE8C23FFB000000020000
          000100000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0092FAE50066D8BD004ABFA20076EFC9FF56DEA8FF4BD49DFF45CF
          98FF5FE0B8FF4ABFA2004ABFA2004ABFA2004ABFA2004ABFA20087FBD6FF6CF1
          BCFF58E0AAFF4ED7A1FF75EBCDFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF009BFBE4FF87F8D6FF6CE7BCFF4DD4A0FF61E2B9FFFFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF008BF7E0004ABFA2004ABFA2006BE9BEFF4FD8A1FF45CF98FF46CF
          99FF63E3BCFF4ABFA2004ABFA2004ABFA2004ABFA2004ABFA20086F9D5FF69EE
          BAFF56DDA7FF4AD49DFF74EBCDFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF009BFBE5FF8BF9DAFF7AEFC9FF59DCABFF5CDEB3FFFFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF008DF9E2FF4ABEA10079F0CDFF5BE0AEFF48D29BFF46CF99FF52D7
          A8FF76EFD3BE4ABFA2004ABFA2004ABFA2004ABFA2004ABFA20084F8D4FF68ED
          B8FF52DAA4FF48D29BFF73EACCFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00A7FCEDBE95FCE1FF86F7D6FF6DE8BDFF56DAA9FF68E6C1FFFFFFFF007CF3
          D9FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF007BF1CFFF69EABCFF5FE4B1FF50D8A2FF48D19BFF52D7A8FF71EC
          CDBD7BF3D9007BF3D9004ABFA2004ABFA2004ABFA2004ABFA2007EF6CDFF66EB
          B6FF4FD7A1FF46D099FF66E2BFFFFFFFFF00FFFFFF00FFFFFF0090F8E502FFFF
          FF00FFFFFF00A8FDEDBD95FBE0FF80F3CEFF63E2B4FF52D8A6FF54D9A9FF68E6
          C1FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0075EFC8FF5CE3ADFF55DDA6FF4CD49FFF53D8A9FF71ECCDBD7BF3
          D9007BF3D9007CF3D9004ABFA2004ABFA200B2FEF3FF8DFBDBFF71F2C1FF63E9
          B4FF4DD7A0FF44CE97FF51D5A7FF7FF0DAFF8DF7E7BDFFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00A8FDEDBD93FBDEFF7BF0CAFF5EDFB0FF4BD39EFF61E2
          B9FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0074EEC8FF58E0AAFF4FD7A1FF4AD29DFF61E2BBBD7BF3D9007BF3
          D9007AF2D9007DF4DB009FFEEA004ABFA2004ABFA20097FCE3FF71F2C2FF61E7
          B2FF4BD49EFF46CF9AFF5DDDB5FF84F3DECFFFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF009FFDE7BD8AF8D9FF77EEC7FF5DDEAFFF66E4
          BDFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0073EDC6FF53DBA5FF49D39CFF47D09AFC5CDEB4FE7BF3D9007BF3
          D9007BF3D9007EF4DB00A0FEEB00A1FEEB004ABFA2004ABFA20090F8DEFF67E8
          B9FF4DD5A1FF5EDFB8FF85F3DECBFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF009CFCE5FE8EFBDCFC86F7D5FF77EDC6FF79EC
          CCFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0083F4DAFF66E5BEFA61E1BAFF5FE0B8FF66E5C0FF7BF3D9FF7EF4
          DB0083F5DD0077F1D70086F6DE00A5FFED004ABFA2004ABFA2004ABFA20087F4
          D8FF69E4C0FF86F3DEC9FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00ADFEF1FFA2FDE9FF9EFDE6FF9DFCE6FF99FAE3FA9EFA
          E8FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF0066DCC10077EFD5007BF3D9007BF3D9007BF3D9007CF3DA0082F5
          DD0082F1D90058CBB0004ABFA200A5FFED00BBFFF7004ABFA2004ABFA2004ABF
          A20094F9E9FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00}
        HoverCover = ndpCover
        DownCover = ndpCover
      end
      object FsButton2: TFsCoverButton
        Left = 206
        Top = 0
        Width = 85
        Height = 80
        Layout = blPictureTop
        Caption = #20379#36135#21830
        Font.Charset = DEFAULT_CHARSET
        Font.Color = clWhite
        Font.Height = -13
        Font.Name = #26032#23435#20307
        Font.Style = []
        AllowDown = True
        Down = False
        Group = 1
        Picture.Data = {
          0B54504E474772617068696336240000424D3624000000000000360000002800
          0000300000003000000001002000000000000024000000000000000000000000
          000000000000FFFFFF00000000000000000200000005000000080000000B0000
          000D0000000D0000000D0000000D0000000D0000000D0000000D0000000D0000
          000D0000000D0000000D0000000D0000000D0000000D0000000D0000000D0000
          000D0000000D0000000D0000000D0000000D0000000D0000000D0000000D0000
          000D0000000D0000000D0000000D0000000D0000000D0000000D0000000D0000
          000D0000000D0000000D0000000D0000000B0000000800000005000000020000
          0000FFFFFF00FFFFFF0000000001000000040000000B00000012000000170000
          0019000000190000001900000019000000190000001900000019000000190000
          0019000000190000001900000019000000190000001900000019000000190000
          0019000000190000001900000019000000190000001900000019000000190000
          0019000000190000001900000019000000190000001900000019000000190000
          001900000019000000190000001900000017000000120000000B000000040000
          0001FFFFFF00FFFFFF000000000200000008000000110000001A000000200000
          0022000000220000002200000022000000220000002200000022000000220000
          0022000000220000002200000022000000220000002200000022000000220000
          0022000000220000002200000022000000220000002200000022000000220000
          0022000000220000002200000022000000220000002200000022000000220000
          0022000000220000002200000022000000200000001A00000011000000080000
          0002FFFFFF00FFFFFF00000000030000000B00000017396A8CD03A627EFF3A62
          7EFF3A627EFF39627EFF39627DFF39617DFF39617DFF39617CFF38607BFF3860
          7AFF375F7AFF375E79FF365D78FF365D77FF365C76FF355B74FF345A73FF3459
          73FF335A72FF345971FF345871FF335871FF335870FF335870FF335871FF3358
          71FF345871FF345972FF345A73FF345A74FF355B75FF355C76FF365D77FF375D
          78FF375E79FF385F7AFF38607BFF38617CFF386A8CCE000000160000000B0000
          0003FFFFFF00FFFFFF00000000040000000C3C8ABB954194CAFF4195CAFF4195
          CAFF4195CAFF4096CCFF4096CCFF4095CCFF4095CCFF3F95CCFF4096CCFF4095
          CCFF4096CCFF4096CCFF3F95CCFF3F95CCFF4095CCFF3F95CCFF4095CCFF3F95
          CCFF3F95CCFF3F95CCFF4094CCFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF3A89BB930000000C0000
          0004FFFFFF00FFFFFF00000000040000000D4195CAFF4194CAFF4195CAFF4195
          CAFF4195CAFF4096CCFF4096CCFF4095CCFF4095CCFF3F95CCFF4096CCFF4095
          CCFF4096CCFF4096CCFF3F95CCFF3F95CCFF4095CCFF3F95CCFF4095CCFF3F95
          CCFF3F95CCFF3F95CCFF4094CCFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF3F95CCFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4195CAFF4194CAFF4195CAFF4195
          CAFF4195CAFF4096CCFF4096CCFF4095CCFF4095CCFF3F95CCFF4096CCFF4095
          CCFF4096CCFF4096CCFF3F95CCFF3F95CCFF4095CCFF3F95CCFF4095CCFF3F95
          CCFF3F95CCFF3F95CCFF4094CCFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094
          CAFF4094CAFF4094CAFF4094CAFF4094CAFF4094CAFF3F95CCFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4194C9FF4194C9FF4194C9FF4194
          C9FF4194C9FF388BBFFF3C8ABBFF3D8BBCFF3D8BBCFF3C89BCFF3E8BBEFF3C8A
          BCFF3C8ABDFF3D8ABCFF3A88BBFF3C89BCFF3D8ABDFF3B89BCFF3C89BCFF3C89
          BCFF3C89BCFF3C8ABDFF378AC0FF4093C9FF4093C9FF4093C9FF4093C9FF4193
          C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093
          C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093C9FF4093C9FF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4295CAFF4295CAFF4295CAFF4295
          CAFF4295CAFFE7E1DDFFE9E2DDFFE8E2DDFFE6E0DDFFE8E2DDFFE8E2DDFFE6E0
          DDFFE8E2DDFFE8E2DDFFE6E0DDFFE8E2DDFFE8E2DDFFE8E2DDFFE8E2DDFFE6E0
          DDFFE8E2DDFFE6E0DDFFE6E0DDFF4194CAFF4194CAFF4194CAFF4194CAFF4194
          CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194
          CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194CAFF4194CAFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4496CBFF4496CBFF4496CBFF4396
          CAFF4496CBFFECE4DEFFECE4DEFF858280FFF5EDE8FF9B9896FF33302FFFF5ED
          E8FF73716FFF7E7B79FFF5EDE8FF8C8987FF7B7876FFAEABA9FF908D8BFFF5ED
          E8FF54514FFFF5EDE8FFF5EDE8FF4295CAFF4295CAFF4295CAFF4295CAFF4295
          CAFF4395CAFF4295CAFF4295CAFF4295CAFF4295CAFF4295CAFF4395CAFF4295
          CAFF4295CAFF4295CAFF4295CAFF4295CAFF4295CAFF4295CAFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4496CCFF4496CCFF4396CBFF4496
          CCFF4496CCFFE2DEDBFFE2DEDBFF6D6D6DFFEFEAE6FF838383FF151515FFEFEA
          E6FF575757FF5D5D5DFFEFEAE6FF757575FF606060FF979797FF767676FFEFEA
          E6FF333333FFEFEAE6FFEFEAE6FF4295CBFF4295CBFF4396CBFF4295CBFF4295
          CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295
          CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295CBFF4295CBFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4597CDFF4597CDFF4598CDFF4597
          CDFF4597CDFFE6E2DFFFE6E2DFFF747474FFF3EEEBFF8A8A8AFF1E1E1EFFF3EE
          EBFF5F5F5FFF666666FFF3EEEBFF7C7C7CFF676767FF9F9F9FFF7F7F7FFFF3EE
          EBFF3D3D3DFFF3EEEBFFF3EEEBFF4497CCFF4497CCFF4396CCFF4396CCFF4396
          CCFF4396CCFF4496CCFF4396CCFF4396CCFF4396CCFF4396CCFF4396CCFF4496
          CCFF4396CCFF4396CCFF4396CCFF4396CCFF4396CCFF4396CCFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4799CDFF4699CDFF4799CDFF4799
          CDFF4699CDFFE9E5E2FFE9E5E2FF787878FFF6F1EEFF8D8D8DFF212121FFF6F1
          EEFF626262FF696969FFF6F1EEFF7F7F7FFF6B6B6BFFA1A1A1FF828282FFF6F1
          EEFF404040FFF6F1EEFFF6F1EEFF4598CCFF4497CCFF4597CCFF4497CCFF4497
          CCFF4497CCFF4597CCFF4497CCFF4497CCFF4497CCFF4597CCFF4497CCFF4497
          CCFF4497CCFF4497CCFF4497CCFF4497CCFF4497CCFF4497CCFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4799CEFF4799CEFF4699CEFF4799
          CEFF4699CEFFEBE8E6FFEBE7E5FF777777FFF9F4F1FF8D8D8DFF1F1F1FFFF9F4
          F1FF616161FF676767FFF9F4F1FF7F7F7FFF6A6A6AFFA2A2A2FF818181FFF9F4
          F1FF3E3E3EFFF9F4F1FFF9F4F1FF4597CDFF4598CDFF4597CDFF4598CDFF4597
          CDFF4497CDFF4497CDFF4497CDFF4497CDFF4597CDFF4497CDFF4597CDFF4497
          CDFF4497CDFF4497CDFF4497CDFF4497CDFF4497CDFF4497CDFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D489ACEFF489ACEFF489ACEFF489A
          CEFF489ACEFFF7F1EEFFF7F1EEFF949494FFFFFCF8FFA8A8A7FF464645FFFFFC
          F8FF828281FF8D8C8CFFFFFCF8FF9A9A99FF8B8A8AFFBBBABAFF9E9E9EFFFFFC
          F8FF646363FFFFFCF8FFFFFCF8FF4699CDFF4699CDFF4699CDFF4698CDFF4698
          CDFF4598CDFF4698CDFF4698CDFF4698CDFF4598CDFF4698CDFF4598CDFF4598
          CDFF4598CDFF4598CDFF4598CDFF4598CDFF4598CDFF4598CDFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4A9BCFFF4A9BCFFF4A9CCFFF499B
          CFFF499BCFFFFDFCFBFFFDFCFBFFFDFCFCFFFDFCFBFFFDFCFBFFFEFDFDFFFFFE
          FDFFFCFCFBFFFDFCFBFFFEFDFDFFFDFCFCFFFDFCFCFFFFFEFEFFFDFCFBFFFDFC
          FCFFFDFCFBFFFEFDFDFFFEFDFDFF479ACEFF479ACEFF479ACEFF479ACEFF479A
          CEFF479ACEFF4799CEFF4799CEFF4799CEFF479ACEFF4699CEFF4699CEFF4699
          CEFF4699CEFF4699CEFF4699CEFF4699CEFF4699CEFF4699CEFF0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4A9CD1FF4C9ED1FF4C9ED1FF4B9D
          D1FF4C9ED1FF4B9DD1FF4C9ED1FF4B9DD1FF4B9DD1FF4B9DD1FF4B9DD1FF4A9D
          D1FF4B9DD1FF4B9DD1FF4A9DD1FF4A9CD1FF4A9DD1FF4A9DD1FF4A9CD1FF4A9C
          D1FF4A9CD1FF4A9CD1FF499CD0FF499CD1FF499CD0FF499CD0FF499CD0FF499C
          D0FF499CD0FF499CD0FF4799CFFF479ACFFF4799CFFF4799CFFF4699CFFF4699
          CFFF4699CFFF4699CFFF4699CFFF4699CFFF4699CFFF4699CFFE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4C9DD1FF4E9FD3FF4D9FD3FF4D9F
          D2FF4D9FD3FF4D9FD3FF4D9FD2FF4D9FD2FF4D9FD2FF4D9FD2FF4C9ED2FF4C9E
          D2FF4C9ED2FF4C9ED2FF4B9ED2FF4C9ED2FF4B9ED2FF4B9ED2FF4B9ED2FF4B9D
          D2FF4A9DD1FF4B9DD2FF4A9DD2FF4A9DD2FF4B9DD2FF4A9DD2FF4A9DD1FF4A9D
          D1FF4A9DD1FF499CD1FF489BCFFF489ACFFF489ACFFF489BCFFF479ACFFF479A
          CFFF479ACFFF489BCFFF489ACFFF479ACFFF479ACFFF479ACFFE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4E9FD2FF4D9FD2FF4D9ED2FF4D9E
          D2FF4D9ED2FF4C9ED1FF4D9ED2FF4C9ED2FF4C9ED1FF4B9DD1FF4C9ED1FF4B9D
          D1FF4B9DD1FF4B9DD1FF4B9DD1FF4B9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9C
          D1FF4A9CD1FF4A9CD1FF4A9CD1FF4A9CD1FF499CD0FF499CD0FF499CD0FF499C
          D1FF499CD0FF499CD0FF499CD0FF499CD0FF489BD0FF489BD0FF489BD0FF489B
          D0FF499CD0FF489BD0FF489BD0FF489BD0FF489BD0FF489BD0FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4FA0D3FF4FA0D3FF4EA0D3FF4EA0
          D3FF4EA0D3FF4FA0D3FF4EA0D3FF4E9FD3FF4E9FD3FF4EA0D3FF4D9FD2FF4D9F
          D3FF4D9FD2FF4D9FD2FF4D9FD2FF4C9ED2FF4C9ED2FF4C9ED2FF4C9ED2FF4B9E
          D2FF80F5DBFF4B9ED2FF4B9ED2FF4B9DD2FF4B9ED2FF4B9DD2FF4A9DD2FF4B9D
          D2FF4A9DD2FF4A9DD1FF4A9DD1FF4A9DD1FF499CD1FF4A9DD1FF499CD1FF4A9D
          D1FF499CD1FF499CD1FF499CD1FF499CD1FF499CD1FF499CD1FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D4FA0D3FF50A1D3FF50A1D3FF4FA0
          D3FF4FA0D3FF4FA0D3FF4EA0D3FF4EA0D3FF4E9FD3FF4EA0D3FF4E9FD3FF4D9F
          D3FF4D9FD2FF4D9FD2FF4C9ED2FF4D9FD2FF4C9ED2FF4C9ED2FF4C9ED2FF75ED
          CBFF5BDFAFFF68E6C2FF4A9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9D
          D1FF4B9DD2FF4A9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9DD1FF4A9D
          D1FF499CD1FF4A9DD1FF499CD1FF499CD1FF499CD1FF499CD1FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D52A2D5FE52A2D5FF51A2D4FF51A2
          D4FF50A1D4FF50A1D4FF50A1D4FF50A1D4FF50A1D4FF50A1D4FF4FA0D4FF4FA0
          D4FF4FA1D4FF4EA0D3FF4FA0D4FF4EA0D3FF4EA0D3FF4EA0D3FF7EF3D1FF5FE4
          B2FF50D8A2FF50D6A4FF64E4C0FF4B9ED2FF4B9ED2FF4B9ED2FF4B9ED2FF4B9E
          D2FF4B9ED2FF4C9ED3FF4B9ED2FF4B9ED2FF4B9ED2FF4B9ED2FF4B9ED2FF4B9E
          D2FF4B9ED2FF4B9ED2FF4A9DD2FF4B9ED2FF4A9DD2FF4A9DD2FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D53A4D5FE53A3D5FF53A4D5FF53A3
          D5FF53A4D5FF53A3D5FF52A3D4FF52A3D4FF52A3D4FF51A2D4FF51A2D4FF50A2
          D4FF50A2D4FF50A2D4FF50A1D5FF50A2D4FF50A2D4FF86F7D6FF6AECBBFF5BE2
          ACFF52DAA4FF4BD49DFF4BD29FFF61E2BDFF4D9FD3FF4C9FD2FF4D9FD3FF4D9F
          D3FF4DA0D3FF4C9FD2FF4D9FD3FF4D9FD3FF4C9FD2FF4C9FD2FF4C9FD2FF4C9F
          D2FF4C9FD2FF4C9FD2FF4C9FD2FF4B9ED2FF4B9ED2FF4B9ED2FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D54A4D6FE54A4D6FF54A4D6FF53A4
          D6FF54A4D6FF53A4D6FF53A3D6FF52A3D5FF53A3D6FF52A3D5FF52A3D5FF52A3
          D5FF51A2D5FF51A2D5FF50A2D5FF51A2D5FF8CFADAFF72F3C2FF65EBB6FF5EE4
          AFFF54DCA6FF4BD49EFF45CF98FF45CE9BFF60E2BCFF4D9FD4FF4D9FD4FF4D9F
          D4FF4DA0D4FF4D9FD4FF4C9FD3FF4D9FD4FF4D9FD4FF4C9FD3FF4C9FD3FF4C9F
          D3FF4D9FD4FF4C9FD3FF4C9FD3FF4C9FD3FF4B9ED3FF4C9FD3FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D56A6D7FE56A6D7FF56A6D7FF56A5
          D7FF55A5D7FF55A5D7FF55A5D7FF55A5D7FF54A4D7FF54A4D7FF54A4D7FF53A4
          D6FF53A4D6FF53A3D6FF52A3D7FF90FCDCFF79F9C9FF6EF2BEFF68EDB8FF60E6
          B1FF56DEA8FF4ED7A1FF46D099FF41CB94FF44CD9AFF5EE1BBFF4EA0D5FF4EA0
          D5FF4FA1D5FF4FA1D5FF4EA0D5FF4EA0D5FF4EA0D5FF4EA0D5FF4EA0D5FF4EA0
          D5FF4DA0D4FF4DA0D4FF4DA0D4FF4DA0D4FF4D9FD4FF4C9FD4FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D58A7D8FE57A7D8FF58A7D8FF58A7
          D8FF57A7D8FF57A7D8FF57A6D8FF56A6D8FF56A6D8FF56A6D8FF55A6D8FF55A5
          D7FF54A5D7FF54A5D7FFA1FEEBFF8BFCD8FF79F9C9FF6FF4BFFF69EEB9FF61E7
          B2FF59E0AAFF50D9A3FF47D19AFF42CC95FF45CD9AFF57DBB2FF73F0D6FF4FA2
          D6FF50A2D6FF50A2D6FF4FA1D6FF4FA2D6FF4FA1D6FF4FA1D6FF4FA1D6FF4FA1
          D6FF4EA1D5FF4EA1D5FF4EA1D5FF4EA1D5FF4EA1D5FF4EA0D5FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D59A8D9FE59A8D9FF59A8D9FF58A7
          D9FF58A7D8FF58A7D8FF58A7D8FF57A7D8FF56A6D8FF56A6D8FF56A6D8FF56A6
          D8FF55A6D8FF56A6D8FF55A6D9FF55A6D8FF85FBD3FF70F5C0FF6BF0BBFF63E9
          B4FF5BE2ACFF51D9A3FF4AD39DFF43CD96FF53D8ACFF50A2D6FF50A2D6FF50A2
          D6FF50A2D6FF50A2D6FF50A2D6FF50A2D6FF50A2D6FF4FA1D6FF4FA1D6FF4FA1
          D6FF4FA1D6FF4FA2D6FF4FA1D6FF4FA1D6FF4EA1D5FF4EA1D5FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D5AA9DAFE5AA9DAFF5BA9DAFF5AA9
          DAFF5AA9DAFF5AA9DAFF5AA9DAFF5AA9DAFF59A8DAFF58A8D9FF58A8D9FF58A8
          D9FF57A7D9FF57A7D9FF58A8DBFF57A7D9FF8AFCD7FF72F6C2FF6CF1BDFF66EB
          B6FF5CE3AEFF53DBA5FF4BD49EFF44CE97FF5BDDB4FF51A3D7FF51A3D7FF51A3
          D7FF52A3D7FF52A4D7FF51A3D7FF51A3D7FF51A3D7FF51A3D7FF50A2D7FF50A3
          D7FF51A3D7FF50A2D7FF50A2D7FF50A2D7FF4FA2D6FF4FA2D6FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D5DABDAFE5DABDAFF5DABDAFF5CAA
          DAFF5CABDAFF5CAADAFF5BAADAFF5BAADAFF5BAADAFF5AA9D9FF5AA9DAFF5AA9
          D9FF59A9D9FF5AA9D9FF5AA9DBFF59A9D9FF8BFCD8FF73F7C3FF6CF1BDFF67EC
          B7FF5FE6B0FF55DDA7FF4DD6A0FF46D099FF5DDEB6FF52A4D7FF52A4D7FF52A4
          D7FF53A5D7FF53A5D7FF53A5D7FF52A4D7FF52A4D7FF52A4D7FF52A4D7FF51A3
          D7FF51A3D7FF51A3D7FF51A3D7FF51A3D7FF50A3D6FF50A3D6FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D5EACDBFE5DABDBFF5EACDBFF5DAB
          DBFF5DABDBFF5CABDBFF5DABDBFF5CAADBFF5BAADBFF5BAADBFF5BAADBFF5AA9
          DAFF5AA9DAFF5AA9DAFF5AAADCFF5AA9DAFF8BFCD9FF75F9C5FF6FF3BFFF68EE
          B9FF61E8B2FF59E0AAFF50D8A2FF48D19BFF5DDFB7FF52A4D8FF53A5D8FF53A5
          D8FF54A5D8FF54A5D8FF53A5D8FF53A5D8FF52A4D8FF52A4D8FF52A4D8FF52A4
          D8FF52A4D8FF51A3D8FF52A4D8FF51A3D8FF50A3D7FF50A3D7FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D60ADDCFE60ADDCFF60ADDCFF60AD
          DCFF5FADDCFF5FACDBFF5FACDBFF5EACDBFF5EACDBFF5DACDBFF5DABDBFF5CAB
          DBFF5BAADAFF5CABDBFF5CABDCFF5BAADAFF8BFCD9FF76FAC5FF70F5C0FF6BF0
          BBFF64EAB5FF5AE1ABFF53DBA5FF4AD39DFF5EE0B7FF54A6D8FF55A6D8FF55A6
          D8FF56A7D9FF55A6D8FF55A6D8FF55A6D8FF54A6D8FF53A5D8FF53A5D8FF53A5
          D8FF53A5D8FF53A5D8FF53A5D8FF53A5D8FF52A4D8FF52A4D8FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D62AFDDFE62AFDDFF62AFDDFF61AE
          DDFF61AEDDFF61AEDDFF61AEDDFF60AEDDFF60AEDDFF5FADDCFF5FADDCFF5EAC
          DCFF5EACDCFF5EACDCFF5EADDDFF5EACDCFF8BFDDAFF76FAC5FF72F6C1FF6DF2
          BDFF65EBB6FF5DE3AEFF54DCA6FF4CD59FFF60E1B8FF55A7D9FF56A7D9FF56A7
          D9FF57A8DAFF57A8DAFF56A7DAFF56A7D9FF55A7D9FF55A7D9FF55A6D9FF55A6
          D9FF54A6D9FF54A6D9FF54A6D9FF53A5D9FF53A5D9FF53A5D9FE0000000D0000
          0004FFFFFF00FFFFFF00000000040000000D63AFDEFE63AFDEFF63AFDEFF62AF
          DEFF62AFDEFF62AFDEFF61AEDEFF61AEDEFF61AEDEFF60AEDDFF60ADDDFF60AD
          DDFF5FADDDFF5EACDDFF5FADDEFF5FADDDFF8CFEDAFF77FAC6FF73F7C3FF6EF3
          BEFF67EDB8FF60E6B1FF56DEA8FF4ED7A1FF61E2B9FF56A7DAFF56A7DBFF56A7
          DBFF58A8DBFF58A8DBFF57A8DBFF56A7DBFF56A7DAFF56A7DAFF56A7DAFF55A7
          DAFF55A7DAFF55A7DAFF54A6DAFF54A6DAFF54A6DAFF53A5DAFE0000000C0000
          0004FFFFFF00FFFFFF00000000040000000C65B1DFFE65B1DFFF64B1DFFF64B0
          DFFF64B0DFFF64B0DFFF63B0DFFF63B0DFFF63B0DFFF62AFDFFF62AFDEFF61AF
          DEFF61AFDEFF61AEDEFF61AFE0FF61AFDEFF8DFEDBFF77FBC7FF74F8C4FF70F4
          C0FF69EFBAFF62E8B3FF59E1ABFF51D9A3FF63E3BBFF57A8DCFF58A9DCFF58A9
          DCFF5AAADCFF59AADCFF58A9DCFF58A9DCFF57A8DCFF57A8DCFF57A8DCFF57A8
          DBFF56A8DBFF56A8DBFF55A7DBFF55A7DBFF54A7DBFF55A7DBFE0000000B0000
          0003FFFFFF00FFFFFF00000000030000000966B2E0FE67B3E0FF66B2DFFF66B2
          E0FF65B2DFFF66B2DFFF65B1DFFF65B1DFFF64B1DFFF64B1DFFF64B1DFFF63B0
          DFFF62B0DEFF62B0DEFF63B0E0FF62B0DEFF8EFFDBFF78FCC8FF76FAC5FF71F6
          C1FF6BF0BBFF65EBB6FF5DE3AEFF54DCA6FF66E5BDFF5AAADCFF5AAADCFF5AAA
          DCFF5BABDCFF5AAADCFF5AABDCFF5AAADCFF5AAADCFF59AADCFF59AADCFF58A9
          DCFF57A9DBFF57A9DBFF57A8DBFF57A9DBFF56A8DBFF56A8DBFE000000080000
          0002FFFFFF00FFFFFF00000000010000000667B3E1FE67B3E1FF67B3E0FF67B3
          E0FF66B3E0FF66B2E0FF66B2E0FF65B2E0FF65B2E0FF64B1E0FF65B1E0FF64B1
          E0FF64B1E0FF63B0DFFF63B1E1FF64B1E0FF8FFFDBFF79FCC8FF76FAC5FF73F7
          C3FF6DF2BDFF68EDB8FF5FE6B0FF56DEA8FF68E7BFFF5AABDDFF5BABDDFF5BAB
          DDFF5BABDEFF5DABDDFF5BABDDFF5BABDDFF5AABDDFF5AAADDFF59AADDFF59AA
          DDFF59AADDFF58A9DCFF58A9DCFF57A9DCFF56A8DCFF56A8DCFE000000050000
          0001FFFFFF00FFFFFF0000000000000000038FD5FEE490D7FFFF90D6FFFF8FD8
          FFFF8DD6FFFF8CD6FFFF8CD7FFFF8CD6FFFF8BD5FFFF87D2FFFF85D1FEFF85D1
          FEFF84D1FEFF83D2FFFF7FD0FEFF84D1FEFF8FFFDBFF7AFECAFF77FBC7FF74F8
          C4FF6FF3BFFF69EEB9FF61E8B2FF5AE1ABFF6BE8C1FF69C2F8FF6AC3F9FF6AC3
          F9FF6CC4FBFF6BC4FBFF6AC4FBFF6AC3F9FF69C2F8FF67C3F9FF66C1F8FF66C1
          F8FF66BFF7FF66C1F9FF64BFF7FF62BEF6FF63BFF8FF60B9F09C000000020000
          0000FFFFFF00FFFFFF00000000000000000181BDDF2091D7FFF992D8FFFF90D8
          FFFF91D9FFFF8DD7FEFF8CD7FFFF8CD7FFFF8CD5FFFF8AD4FFFF87D3FFFF86D2
          FEFF86D2FEFF83D1FFFF82D1FEFF86D2FEFF8FFFDBFF7BFECAFF78FCC7FF75F9
          C5FF72F6C2FF6BF0BBFF65EBB5FF5DE4AFFF6DE9C2FF6AC4FBFF6BC4FBFF6BC4
          FBFF6EC6FCFF6CC7FCFF6CC5FBFF6BC4FBFF6AC4FBFF69C3F9FF68C2F8FF68C3
          F9FF67C1F9FF66C0F7FF66C1F9FF65BFF7FF64BEF6D6437FA509000000010000
          0000FFFFFF00FFFFFF000000000000000000000000018ED0F65893D8FFFF91D8
          FFFF91D9FFFF8FD8FFFF8CD7FFFF8CD8FFFF8DD6FFFF8AD4FFFF87D3FFFF87D3
          FFFF87D3FFFF84D2FFFF81D2FFFF87D3FFFF8FFFDBFF7BFFCBFF79FCC8FF77FA
          C6FF73F7C3FF6EF3BEFF68EDB9FF60E7B1FF6FEBC4FF6AC4FBFF6DC6FDFF6DC6
          FDFF6FC6FDFF6EC6FCFF6DC6FCFF6DC6FDFF6AC4FBFF69C3FAFF69C3FBFF68C4
          FBFF68C0F9FF67C0F8FF67C1FAFF65BFF7F45CAFE42400000001000000000000
          0000FFFFFF00FFFFFF000000000000000000000000000000000291D4FAA193D8
          FFFF93D7FEFF8FD8FFFF8ED8FFFF8ED8FFFF8ED6FEFF8BD4FFFF89D3FFFF89D4
          FFFF89D4FFFF87D3FFFF85D2FFFF89D4FFFF8FFFDBFF7CFFCBFF7AFDC9FF77FB
          C7FF74F8C4FF70F5C0FF6AF0BBFF64EAB5FF73EDC7FF6DC6FCFF6EC6FCFF6EC6
          FCFF70C8FDFF6FC7FDFF6EC8FCFF6EC6FCFF6DC6FCFF6CC5F9FF6AC4FAFF6AC4
          FAFF68C1F8FF69C2F9FF68C1F8FF63BAF05B0000000100000000000000000000
          0000FFFFFF00FFFFFF00000000000000000000000000000000003C57660594D8
          FED395D9FFFF93DAFFFF90D9FFFF90D8FFFF8ED7FFFF8ED6FFFF8CD5FFFF8AD5
          FFFF8AD4FFFF8AD4FFFF86D4FFFF8AD4FFFF8FFFDBFF7CFFCBFF7BFECAFF78FC
          C7FF76FAC5FF72F6C2FF6CF1BDFF67ECB7FF76EFC9FF6EC7FDFF70C7FCFF70C7
          FCFF71C8FDFF71C9FDFF70C7FCFF70C7FCFF6EC7FDFF6CC5F9FF6DC6FBFF6BC3
          F9FF6AC3F9FF6AC3F9FF67BEF3A5000000020000000000000000000000000000
          0000FFFFFF00FFFFFF0000000000000000000000000000000000000000017EB7
          D71394D9FFF392D8FFFF91DAFFFF90D9FFFF8FD6FFFF8DD5FFFF8AD4FFFF8BD4
          FFFF8AD3FFFF88D2FFFF86D2FFFF8AD3FFFF9DFFE8FF8FFFDBFF8FFFDBFF8CFD
          DAFF8BFCD8FF88FBD7FF84F8D3FF80F5D0FF8BF7DEFF6EC6FBFF70C7FBFF70C7
          FBFF71C7FBFF70C8FBFF70C7FBFF70C7FBFF6EC6FBFF6DC4F9FF6DC6FBFF6CC4
          FAFF6AC2F9FF6AC1F8D636627D06000000000000000000000000000000000000
          0000FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
          00018BCBEE3D93D9FFFF92D9FFFF92D9FFFF90D6FFFF8FD5FFFF8CD3FFFF8DD4
          FFFF8AD3FEFF88D3FEFF86D3FFFF8AD3FEFF8AD3FEFF8AD3FEFF8AD3FEFF88D3
          FEFF3D8ABDFF3C89BCFF73C8FCFF72C7FBFF71C8FCFF70C8FCFF71C8FCFF71C8
          FCFF74C8FCFF73C8FCFF72C7FBFF71C8FCFF70C8FCFF6FC6FBFF6FC6FBFF6EC5
          FBFF6DC5FAF65DA8D61C00000001000000000000000000000000000000000000
          0000FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
          00000000000291D6FB7E91D9FFFF92D8FFFF93D7FFFF8FD5FFFF8DD5FFFF8DD5
          FFFF8CD5FFFF88D5FFFF87D5FFFF8CD5FFFF8CD5FFFF8CD5FFFF8CD5FFFF88D5
          FFFF3E8ABDFF3C89BCFF75CAFCFF74CAFDFF71C8FBFF71C8FBFF71C8FBFF71C8
          FBFF75CAFCFF75CAFCFF74CAFDFF71C8FBFF71C8FBFF71C9FDFF70C7FBFF6FC6
          FBFF6BBDF14E0000000100000000000000000000000000000000000000000000
          0000FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
          0000000000000000000190D8FEB891D7FFFD91D6FFFD8FD6FFFD8DD5FFFD8DD4
          FFFD8CD4FFFD88D5FFFD88D5FFFD8CD4FFFF8CD4FFFF8CD4FFFF8CD4FFFF88D5
          FFFF3E8BBDFF3C89BCFF75CAFDFF75CAFCFF73CAFDFF73C9FCFF73CAFDFF73CA
          FDFF75CBFDFD75CAFDFD75CAFCFD73CAFDFD73C9FCFD71C8FBFD70C6FAFD6FC4
          F990000000010000000000000000000000000000000000000000000000000000
          0000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00}
        HoverCover = ndpCover
        DownCover = ndpCover
      end
      object FsMemo1: TFsMemo
        Left = 5
        Top = 80
        Width = 839
        Height = 417
        Anchors = [akLeft, akTop, akRight, akBottom]
        BevelInner = bvNone
        BevelOuter = bvRaised
        BevelKind = bkFlat
        ParentBackground = False
        ScrollBarDrawer = FsFlatScrollBar1
        ScrollBars = ssBoth
        Lines.Strings = (
          'unit FSStdCtrls;'
          ''
          'interface'
          ''
          'uses'
          '  SysUtils, Classes, Consts, Windows, '
          'Graphics, Controls, Messages, StdCtrls, '
          'ExtCtrls,'
          '  FSVclBase, FSGraphics;'
          ''
          'type'
          '  TFsGraphicControl = class'
          '(TGraphicControl)'
          '  protected'
          '    procedure GetContentDimension(out dim: '
          'TSize); virtual;'
          '    function CanAutoSize(var NewWidth, '
          'NewHeight: Integer): Boolean; override;'
          '  public'
          '    function CheckAutoSize: Boolean;'
          '    procedure AutoSizeAndInvalidate;'
          '  end;'
          ''
          '  TFsImage = class(TFsGraphicControl)'
          '  private'
          '    FPicture: TFsDrawable;'
          '    procedure PictureChanged(Sender: '
          'TObject; ID: TNotifyID);'
          '    procedure SetPicture(const Value: '
          'TFsDrawable);'
          '  protected'
          '    procedure GetContentDimension(out dim: '
          'TSize); override;'
          '  public'
          '    constructor Create(Owner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '    procedure Paint; override;'
          '  published'
          '    property Picture: TFsDrawable read '
          'FPicture write SetPicture;'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Enabled;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '  end;'
          ''
          '  TFsImageButtonLayout = (blPictureLeft, '
          'blPictureRight, blPictureTop, '
          'blPictureBottom, blTextInPicture, '
          'blTextInStretchPicture);'
          ''
          '  TFsCustomButton = class'
          '(TFsGraphicControl)'
          '  private'
          '    FMouseFlag: TMouseFlag;'
          '    FShowCaption: Boolean;'
          '    FLayout: TFsImageButtonLayout;'
          '    FSpace: Integer;'
          '    procedure SetShowCaption(const Value: '
          'Boolean);'
          '    procedure SetLayout(const Value: '
          'TFsImageButtonLayout);'
          '    procedure SetSpace(const Value: '
          'Integer);'
          '    procedure DrawPictureLeft;'
          '    procedure DrawPictureRight;'
          '    procedure DrawPictureTop;'
          '    procedure DrawPictureBottom;'
          '    procedure DrawTextInPicture;'
          '    procedure DrawTextInStretchPicture;'
          '    procedure DrawButtonSurface;'
          '  protected'
          '    procedure DrawImageAndText;'
          '    procedure GetContentDimension(out dim: '
          'TSize); override;'
          '    procedure MouseDown(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer); override;'
          '    procedure MouseUp(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer); override;'
          '    procedure CMMouseEnter(var msg: '
          'TMessage); message CM_MOUSEENTER;'
          '    procedure CMMouseLeave(var msg: '
          'TMessage); message CM_MOUSELEAVE;'
          '    procedure CMTextChange(var msg: '
          'TMessage); message CM_TEXTCHANGED;'
          '    procedure CMFontChanged(var msgr: '
          'TMessage); message CM_FONTCHANGED;'
          '    function PictureIsHorzStretchable: '
          'Boolean; virtual;'
          '    function PictureIsVertStretchable: '
          'Boolean; virtual;'
          '    function GetPictureSize(out width: '
          'Integer): Integer; virtual; abstract;'
          '    procedure DrawPicture(const Rect: '
          'TRect); virtual; abstract;'
          '    procedure Paint; override;'
          '  public'
          '    constructor Create(Owner: '
          'TComponent); override;'
          '  published'
          '    property Layout: TFsImageButtonLayout '
          'read FLayout write SetLayout default '
          'blTextInStretchPicture;'
          '    property Space: Integer read FSpace '
          'write SetSpace default 4;'
          '    property ShowCaption: Boolean read '
          'FShowCaption write SetShowCaption default '
          'True;'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Caption;'
          '    property Enabled;'
          '    property Font;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '  end;'
          ''
          '  TFsImageButton = class'
          '(TFsCustomButton)'
          '  private'
          '    FPicture: TFsPictureDrawable;'
          '    FDisablePicture: TFsPictureDrawable;'
          '    FMouseOverPicture: TFsPictureDrawable;'
          '    FMouseDownPicture: TFsPictureDrawable;'
          '    procedure PictureChanged(Sender: '
          'TObject; ID: TNotifyID);'
          '    procedure SetPicture(const Value: '
          'TPicture);'
          '    procedure SetMouseDownPicture(const '
          'Value: TPicture);'
          '    procedure SetMouseOverPicture(const '
          'Value: TPicture);'
          '    procedure SetDisablePicture(const Value: '
          'TPicture);'
          '    function GetDisablePicture: TPicture;'
          '    function GetMouseDownPicture: TPicture;'
          '    function GetMouseOverPicture: TPicture;'
          '    function GetPicture: TPicture;'
          '    function GetDrawable: TFsSingleDrawable;'
          '  protected'
          '    function GetPictureSize(out width: '
          'Integer): Integer; override;'
          '    procedure DrawPicture(const Rect: '
          'TRect); override;'
          '  public'
          '    constructor Create(Owner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property Picture: TPicture read GetPicture '
          'write SetPicture;'
          '    property DisablePicture: TPicture read '
          'GetDisablePicture write SetDisablePicture;'
          '    property MouseOverPicture: TPicture '
          'read GetMouseOverPicture write '
          'SetMouseOverPicture;'
          '    property MouseDownPicture: TPicture '
          'read GetMouseDownPicture write '
          'SetMouseDownPicture;'
          '  end;'
          ''
          '  TFsCoverButton = class'
          '(TFsCustomButton)'
          '  private'
          '    FPicture: TPicture;'
          '    FHoverCover: TFsDrawable;'
          '    fDownCover: TFsDrawable;'
          '    procedure SetPicture(const Value: '
          'TPicture);'
          '    procedure SetDownCover(const Value: '
          'TFsDrawable);'
          '    procedure SetHoverCover(const Value: '
          'TFsDrawable);'
          '    function GetCover: TFsDrawable;'
          '  protected'
          '    procedure PictureChanged(Sender: '
          'TObject);'
          '    procedure LinkedPictureChanged(Sender: '
          'TObject; ID: TNotifyID);'
          '    function GetPictureSize(out width: '
          'Integer): Integer; override;'
          '    procedure DrawPicture(const Rect: '
          'TRect); override;'
          '    procedure Paint; override;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property Picture: TPicture read FPicture '
          'write SetPicture;'
          '    property HoverCover: TFsDrawable read '
          'FHoverCover write SetHoverCover;'
          '    property DownCover: TFsDrawable read '
          'fDownCover write SetDownCover;'
          '  end;'
          ''
          '  TFsSkinButton = class(TFsCustomButton)'
          '  '
          '  end;'
          ''
          '  TFsCustomScrollBar = class(TComponent)'
          '  private'
          '    FVScrollWidth: Integer;'
          '    FHScrollHeight: Integer;'
          '    FVArrowHeight: Integer;'
          '    FHArrowWidth: Integer;'
          '    FMinThumbLength: Integer;'
          '    procedure SetHScrollHeight(const Value: '
          'Integer);'
          '    procedure SetVScrollWidth(const Value: '
          'Integer);'
          '    procedure SetHArrowWidth(const Value: '
          'Integer);'
          '    procedure SetVArrowHeight(const Value: '
          'Integer);'
          '    procedure SetMinThumbLength(const '
          'Value: Integer);'
          '  protected'
          '    procedure Changed;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '    procedure CalcVScroll(const rc: TRect; '
          'const si: TScrollInfo; var rcTopArrow, '
          'rcBottomArrow, rcThumb: TRect);'
          '    procedure CalcHScroll(const rc: TRect; '
          'const si: TScrollInfo; var rcLeftArrow, '
          'rcRightArrow, rcThumb: TRect);'
          '    function CalcVPos(const rc: TRect; const '
          'si: TScrollInfo; Y: Integer): Integer;'
          '    function CalcHPos(const rc: TRect; const '
          'si: TScrollInfo; Y: Integer): Integer;'
          '    procedure DrawVScroll(dc: HDC; const '
          'rc, rcTopArrow, rcBottomArrow, rcThumb: '
          'TRect); virtual; abstract;'
          '    procedure DrawHScroll(dc: HDC; const '
          'rc, rcLeftArrow, rcRightArrow, rcThumb: '
          'TRect); virtual; abstract;'
          '    procedure DrawIntersect(dc: HDC; const '
          'rc: TRect); virtual; abstract;'
          '    property HScrollHeight: Integer read '
          'FHScrollHeight write SetHScrollHeight;'
          '    property VScrollWidth: Integer read '
          'FVScrollWidth write SetVScrollWidth;'
          '    property VArrowHeight: Integer read '
          'FVArrowHeight write SetVArrowHeight;'
          '    property HHArrowWidth: Integer read '
          'FHArrowWidth write SetHArrowWidth;'
          '    property MinThumbLength: Integer read '
          'FMinThumbLength write '
          'SetMinThumbLength;'
          '  end;'
          ''
          '  TFsFlatScrollBar = class'
          '(TFsCustomScrollBar)'
          '  private'
          '    procedure DrawUpArrow(dc: HDC; const '
          'rc: TRect; h, bw: Integer);'
          '    procedure DrawDownArrow(dc: HDC; '
          'const rc: TRect; h, bw: Integer);'
          '    procedure DrawLeftArrow(dc: HDC; const '
          'rc: TRect; h, bw: Integer);'
          '    procedure DrawRightArrow(dc: HDC; '
          'const rc: TRect; h, bw: Integer);'
          '  public'
          '    procedure DrawVScroll(dc: HDC; const '
          'rc, rcTopArrow, rcBottomArrow, rcThumb: '
          'TRect); override;'
          '    procedure DrawHScroll(dc: HDC; const '
          'rc, rcLeftArrow, rcRightArrow, rcThumb: '
          'TRect); override;'
          '    procedure DrawIntersect(dc: HDC; const '
          'rc: TRect); override;'
          '  end;'
          ''
          '  TFsScrollInfo = record'
          '    ShowVScroll: Boolean;'
          '    ShowHScroll: Boolean;'
          '    VScroll: TRect;'
          '    TopArrow: TRect;'
          '    BottomArrow: TRect;'
          '    VThumb: TRect;'
          '    HScroll: TRect;'
          '    LeftArrow: TRect;'
          '    RightArrow: TRect;'
          '    HThumb: TRect;'
          '    Intersect: TRect;'
          '  end;'
          ''
          '  TScrollHitTest = (shtNoWhere, shtBorder, '
          'shtLeftArrow, shtRightArrow, '
          'shtHorzThumb, shtPageLeft, shtPageRight,'
          '    shtTopArrow, shtBottomArrow, '
          'shtVertThumb, shtPageUp, shtPageDown);'
          ''
          '  TFsScrollContainer = class'
          '(TCustomControl)'
          '  private'
          '    FTimer: TTimer;'
          '    FCaptureRegion: TScrollHitTest;'
          '    FCapturePoint: TPoint;'
          '    FScrollBarDrawer: TFsCustomScrollBar;'
          '    FRealControl: TControl;'
          '    procedure SetScrollBarDrawer(const '
          'Value: TFsCustomScrollBar);'
          '    function GetRealScrollBar: '
          'TFsCustomScrollBar;'
          '    function NeedScrollBar(out HScroll: '
          'Boolean): Boolean;'
          '    procedure GetScrollInfo(var fsi: '
          'TFsScrollInfo; var vsi, hsi: TScrollInfo);'
          '    procedure OnTimer(Sender: TObject);'
          '    function ControlMessage(msg: DWORD; '
          'wparam, lparam: Integer): Integer;'
          '  protected'
          '    FMouseInControl: Boolean;'
          '    procedure WMSize(var msgr: TWMSize); '
          'message WM_SIZE;'
          '    procedure CMMouseEnter(var msgr: '
          'TMessage); message CM_MOUSEENTER;'
          '    procedure CMMouseLeave(var msgr: '
          'TMessage); message CM_MOUSELEAVE;'
          '    procedure MouseDown(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer); override;'
          '    procedure MouseUp(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer); override;'
          '    procedure MouseMove(Shift: TShiftState; '
          'X, Y: Integer); override;'
          '    procedure CreateParams(var Params: '
          'TCreateParams); override;'
          '    procedure Paint; override;'
          ''
          '    function GetControlScrollInfo(var si: '
          'TScrollInfo; isVert: Boolean): Boolean; '
          'virtual;'
          '    function CreateRealControl: TControl; '
          'virtual; abstract;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '    procedure AdjustInnerControlBounds;'
          '    function HitTest(X, Y: Integer): '
          'TScrollHitTest; '
          '    property Canvas;'
          '    property RealControl: TControl read '
          'FRealControl;'
          '  published'
          '    property Align;'
          '    property Anchors;'
          '    property ScrollBarDrawer: '
          'TFsCustomScrollBar read FScrollBarDrawer '
          'write SetScrollBarDrawer;'
          '  end;'
          ''
          '  TFsMemo = class(TFsScrollContainer)'
          '  private'
          '    function GetScrollBars: TScrollStyle;'
          '    procedure SetScrollBars(const Value: '
          'TScrollStyle);'
          '    function GetLines: TStrings;'
          '    procedure SetLines(const Value: '
          'TStrings);'
          '  protected'
          '    function CreateRealControl: TControl; '
          'override;'
          '  published'
          '    property ScrollBars: TScrollStyle read '
          'GetScrollBars write SetScrollBars;'
          '    property Lines: TStrings read GetLines '
          'write SetLines;'
          '  end;'
          ''
          '  TFsEdit = class(TCustomEdit)'
          '  private'
          '    FMouseInBorderColor: TColor;'
          '    procedure SetMouseInBorderColor(const '
          'Value: TColor);'
          '  protected'
          '    FMouseIn: Boolean;'
          '    procedure CMMouseEnter(var msg: '
          'TMessage); message CM_MOUSEENTER;'
          '    procedure CMMouseLeave(var msg: '
          'TMessage); message CM_MOUSELEAVE;'
          '    procedure WMNCPAINT(var msg: '
          'TWMNCPaint); message WM_NCPAINT;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '  published'
          '    property MouseInBorderColor: TColor '
          'read FMouseInBorderColor write '
          'SetMouseInBorderColor;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSelect;'
          '    property AutoSize;'
          '    property BevelEdges;'
          '    property BevelInner;'
          '    property BevelKind default bkNone;'
          '    property BevelOuter;'
          '    property BevelWidth;'
          '    property BiDiMode;'
          '    property BorderStyle;'
          '    property CharCase;'
          '    property Color;'
          '    property Constraints;'
          '    property Ctl3D;'
          '    property DoubleBuffered;'
          '    property DragCursor;'
          '    property DragKind;'
          '    property DragMode;'
          '    property Enabled;'
          '    property Font;'
          '    property HideSelection;'
          '    property ImeMode;'
          '    property ImeName;'
          '    property MaxLength;'
          '    property OEMConvert;'
          '    property ParentBiDiMode;'
          '    property ParentColor;'
          '    property ParentCtl3D;'
          '    property ParentFont;'
          '    property ParentShowHint;'
          '    property PasswordChar;'
          '    property PopupMenu;'
          '    property ReadOnly;'
          '    property ShowHint;'
          '    property TabOrder;'
          '    property TabStop;'
          '    property Text;'
          '    property Visible;'
          '    property OnChange;'
          '    property OnClick;'
          '    property OnContextPopup;'
          '    property OnDblClick;'
          '    property OnDragDrop;'
          '    property OnDragOver;'
          '    property OnEndDock;'
          '    property OnEndDrag;'
          '    property OnEnter;'
          '    property OnExit;'
          '    property OnKeyDown;'
          '    property OnKeyPress;'
          '    property OnKeyUp;'
          '    property OnMouseActivate;'
          '    property OnMouseDown;'
          '    property OnMouseEnter;'
          '    property OnMouseLeave;'
          '    property OnMouseMove;'
          '    property OnMouseUp;'
          '    property OnStartDock;'
          '    property OnStartDrag;'
          '  end;'
          ''
          '  TFsButtonEdit = class(TFsEdit)'
          '  private'
          '    FOnClickButton: TNotifyEvent;'
          '    FButtonPicture: TPicture;'
          '    procedure WriteButtonPicture(const '
          'Value: TPicture);'
          '  protected'
          '    FNCCanvas: TCanvas;'
          '    procedure WMNCPAINT(var msgr: '
          'TWMNCPaint); message WM_NCPAINT;'
          '    procedure WMNCLButtonDown(var '
          'msgr: TWMNCLButtonDown); message '
          'WM_NCLBUTTONDOWN;'
          '    procedure WMNCHitTest(var msgr: '
          'TWMNCHitTest); message WM_NCHITTEST;'
          '    procedure WMNCCalcSize(var msgr: '
          'TWMNCCalcSize); message '
          'WM_NCCALCSIZE;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property ButtonPicture: TPicture read '
          'FButtonPicture write WriteButtonPicture;'
          '    property OnClickButton: TNotifyEvent '
          'read FOnClickButton write FOnClickButton;'
          '  end;'
          ''
          '  TFsNCScrollMemo = class(TCustomMemo)'
          '  private'
          '    FMouseInBorderColor: TColor;'
          '    FMouseIn: Boolean;'
          '    FScrollBar: TFsCustomScrollBar;'
          '    procedure PaintNC;'
          '    procedure CMMouseEnter(var msg: '
          'TMessage); message CM_MOUSEENTER;'
          '    procedure CMMouseLeave(var msg: '
          'TMessage); message CM_MOUSELEAVE;'
          '    procedure WMNCPAINT(var msgr: '
          'TWMNCPaint); message WM_NCPAINT;'
          '    procedure WMNCCalcSize(var msgr: '
          'TWMNCCalcSize); message '
          'WM_NCCALCSIZE;'
          '    procedure WMNCHitTest(var msgr: '
          'TWMNCHitTest); message WM_NCHITTEST;'
          '    procedure WMNCLButtonDown(var '
          'msgr: TWMNCLButtonDown); message '
          'WM_NCLBUTTONDOWN;'
          '    procedure SetMouseInBorderColor(const '
          'Value: TColor);'
          '    procedure SetScrollBar(const Value: '
          'TFsCustomScrollBar);'
          '    function GetRealScrollBar: '
          'TFsCustomScrollBar;'
          '  protected'
          '    procedure GetScrollRect(var rcVScroll, '
          'rcHScroll, rcIntersect: TRect);'
          '    function GetVScrollRect(var rc: TRect): '
          'Boolean;'
          '    function GetHScrollRect(var rc: TRect): '
          'Boolean;'
          '    procedure WndProc(var msgr: '
          'TMessage); override;'
          '    procedure Notification(AComponent: '
          'TComponent; Operation: TOperation); '
          'override;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '  published'
          '    property ScrollBar: TFsCustomScrollBar '
          'read FScrollBar write SetScrollBar;'
          '    property MouseInBorderColor: TColor '
          'read FMouseInBorderColor write '
          'SetMouseInBorderColor;'
          '    property Align;'
          '    property Alignment;'
          '    property Anchors;'
          '    property BevelEdges;'
          '    property BevelInner;'
          '    property BevelKind default bkNone;'
          '    property BevelOuter;'
          '    property BiDiMode;'
          '    property BorderStyle;'
          '    property Color;'
          '    property Constraints;'
          '    property Ctl3D;'
          '    property DragCursor;'
          '    property DragKind;'
          '    property DragMode;'
          '    property Enabled;'
          '    property Font;'
          '    property HideSelection;'
          '    property ImeMode;'
          '    property ImeName;'
          '    property Lines;'
          '    property MaxLength;'
          '    property OEMConvert;'
          '    property ParentBiDiMode;'
          '    property ParentColor;'
          '    property ParentCtl3D;'
          '    property ParentFont;'
          '    property ParentShowHint;'
          '    property PopupMenu;'
          '    property ReadOnly;'
          '    property ScrollBars;'
          '    property ShowHint;'
          '    property TabOrder;'
          '    property TabStop;'
          '    property Visible;'
          '    property WantReturns;'
          '    property WantTabs;'
          '    property WordWrap;'
          '    property OnChange;'
          '    property OnClick;'
          '    property OnContextPopup;'
          '    property OnDblClick;'
          '    property OnDragDrop;'
          '    property OnDragOver;'
          '    property OnEndDock;'
          '    property OnEndDrag;'
          '    property OnEnter;'
          '    property OnExit;'
          '    property OnKeyDown;'
          '    property OnKeyPress;'
          '    property OnKeyUp;'
          '    property OnMouseActivate;'
          '    property OnMouseDown;'
          '    property OnMouseEnter;'
          '    property OnMouseLeave;'
          '    property OnMouseMove;'
          '    property OnMouseUp;'
          '    property OnStartDock;'
          '    property OnStartDrag;'
          '  end;'
          ''
          '  TFsBorderlessMemo = class(TMemo)'
          '  protected'
          '    procedure WndProc(var msgr: '
          'TMessage); override;'
          '    procedure CreateParams(var params: '
          'TCreateParams); override;'
          '    procedure WMNCCalcSize(var msgr: '
          'TWMNCCalcSize); message '
          'WM_NCCALCSIZE;'
          '    procedure WMNCPaint(var msgr: '
          'TWMNCPaint); message WM_NCPAINT;'
          '  public'
          '    constructor Create(AOwner: '
          'TComponent); override;'
          '  end;'
          ''
          '  TFsCustomCheckBox = class'
          '(TFsGraphicControl)'
          '  private'
          '    FChecked: Boolean;'
          '    FSpace: Integer;'
          '    procedure SetChecked(const Value: '
          'Boolean);'
          '    procedure SetSpace(const Value: '
          'Integer);'
          '  protected'
          '    procedure CMTextChange(var msg: '
          'TMessage); message CM_TEXTCHANGED;'
          '    procedure CMFontChange(var msg: '
          'TMessage); message CM_FONTCHANGED;'
          '    procedure GetImageSize(out w, h: '
          'Integer); virtual;'
          '    procedure DrawMark(const Rect: TRect); '
          'virtual; abstract;'
          '    procedure Paint; override;'
          '    procedure MouseDown(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer); override;'
          '    procedure GetContentDimension(out dim: '
          'TSize); override;'
          '  public'
          '    constructor Create(Owner: '
          'TComponent); override;'
          '  published'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Enabled;'
          '    property Font;'
          '    property Hint;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '    property Caption;'
          '    property Checked: Boolean read '
          'FChecked write SetChecked;'
          '    property Space: Integer read FSpace '
          'write SetSpace;'
          '  end;'
          ''
          '  TFsCheckBox = class'
          '(TFsCustomCheckBox)'
          '  private'
          '    FCheckedPicture: TFsPictureDrawable;'
          '    FUnCheckedPicture: TFsPictureDrawable;'
          '    procedure SetCheckedPicture(const '
          'Value: TPicture);'
          '    procedure SetUnCheckedPicture(const '
          'Value: TPicture);'
          '    function GetCheckedPicture: TPicture;'
          '    function GetUnCheckedPicture: TPicture;'
          '    procedure PictureChanged(Sender: '
          'TObject; ID: TNotifyID);'
          '  protected'
          '    procedure GetImageSize(out w, h: '
          'Integer); override;'
          '    procedure DrawMark(const Rect: TRect); '
          'override;'
          '  public'
          '    constructor Create(Owner: '
          'TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property CheckedPicture: TPicture read '
          'GetCheckedPicture write SetCheckedPicture;'
          '    property UnCheckedPicture: TPicture '
          'read GetUnCheckedPicture write '
          'SetUnCheckedPicture;'
          '  end;'
          ''
          '  TFsSkinCheckBox = class'
          '(TFsCustomCheckBox)'
          '  '
          '  end;'
          ''
          'function GetDefaultScrollBar: '
          'TFsCustomScrollBar;'
          ''
          'implementation'
          ''
          'type'
          '  TControlHack = class(TControl)'
          '  '
          '  end;'
          ''
          'var'
          '  DefaultScrollBar: TFsCustomScrollBar;'
          ''
          'function GetDefaultScrollBar: '
          'TFsCustomScrollBar;'
          'begin'
          '  if not Assigned(DefaultScrollBar) then'
          '    DefaultScrollBar := '
          'TFsFlatScrollBar.Create(nil);'
          ''
          '  Result := DefaultScrollBar;'
          'end;'
          ''
          '{ TFsCustomButton }'
          ''
          'procedure '
          'TFsCustomButton.CMFontChanged(var '
          'msgr: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.CMMouseEnter(var msg: '
          'TMessage);'
          'begin'
          '  inherited;'
          ''
          '  Include(FMouseFlag, mfMouseOver);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.CMMouseLeave(var msg: '
          'TMessage);'
          'begin'
          '  inherited;'
          ''
          '  Exclude(FMouseFlag, mfMouseOver);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.CMTextChange(var msg: '
          'TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'constructor TFsCustomButton.Create'
          '(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  ControlStyle := ControlStyle + '
          '[csReplicatable, csPannable];'
          '  FSpace := 4;'
          '  FShowCaption := True;'
          '  FLayout := blTextInStretchPicture;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawButtonSurface;'
          'var'
          '  flags: DWORD;'
          'begin'
          '  flags := DFCS_BUTTONPUSH;'
          ''
          '  if mfLButtonDown in Self.FMouseFlag then'
          '    flags := flags or DFCS_PUSHED;'
          ''
          '  Windows.DrawFrameControl'
          '(Self.Canvas.Handle, Rect(0, 0, Self.Width, '
          'Self.Height),'
          '    DFC_BUTTON, flags);'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawImageAndText;'
          'var'
          '  w: Integer;'
          'begin'
          '  Self.GetPictureSize(w);'
          '  '
          '  if w = 0 then Self.DrawButtonSurface;'
          ''
          '  case Self.FLayout of'
          '    blPictureLeft: Self.DrawPictureLeft;'
          '    blPictureRight: Self.DrawPictureRight;'
          '    blPictureTop: Self.DrawPictureTop;'
          '    blPictureBottom: Self.DrawPictureBottom;'
          '    blTextInPicture: Self.DrawTextInPicture;'
          '    blTextInStretchPicture: '
          'Self.DrawTextInStretchPicture;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawPictureBottom;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  dim: TSize;'
          '  w, h: Integer;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Bottom := Self.Height - (Self.Height - '
          'dim.cy) div 2;'
          '    rpic.Top := rpic.Bottom - h;'
          ''
          '    if PictureIsHorzStretchable and (dim.cx > '
          'w) then'
          '    begin'
          '      rpic.Left := (Self.Width - dim.cx) div 2;'
          '      rpic.Right := rpic.Left + dim.cx;'
          '    end'
          '    else begin'
          '      rpic.Left := (Self.Width - w) div 2;'
          '      rpic.Right := rpic.Left + w;'
          '    end;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Top := rpic.top - FSpace;'
          '  end'
          '  else rpic.Top := Self.Height - (Self.Height - '
          'dim.cy) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') '
          'then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := rpic.Top;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := Self.Width - rtext.Left;'
          '    '
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.TextRect(rtext, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawPictureLeft;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  dim: TSize;'
          '  w, h: Integer;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Left := (Self.Width - dim.cx) div 2;'
          ''
          '    if PictureIsVertStretchable and (dim.cy > '
          'h) then'
          '    begin'
          '      rpic.Top := (Self.Height - dim.cy) div 2;'
          '      rpic.Bottom := rpic.Top + dim.cy;'
          '    end'
          '    else begin'
          '      rpic.Top := (Self.Height - h) div 2;'
          '      rpic.Bottom := rpic.Top + h;'
          '    end;'
          ''
          '    rpic.Right := rpic.Left + w;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Right := rpic.Right + FSpace;'
          '  end'
          '  else rpic.Right := (Self.Width - dim.cx) div '
          '2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') '
          'then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Left := rpic.Right;'
          '    rtext.Right := Self.Width - (Self.Width - '
          'dim.cx) div 2;'
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := Self.Height - (Self.Height - '
          'dim.cy) div 2;'
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.TextRect(rtext, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawPictureRight;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          '  '
          '  if w > 0 then'
          '  begin'
          '    rpic.Right := Self.Width - (Self.Width - '
          'dim.cx) div 2;'
          ''
          '    if PictureIsVertStretchable and (dim.cy > '
          'h) then'
          '    begin'
          '      rpic.Top := (Self.Height - dim.cy) div 2;'
          '      rpic.Bottom := rpic.Top + dim.cy;'
          '    end'
          '    else begin'
          '      rpic.Top := (Self.Height - h) div 2;'
          '      rpic.Bottom := rpic.Top + h;'
          '    end;'
          ''
          '    rpic.Left := rpic.Right - w;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Left := rpic.Left - FSpace;'
          '  end'
          '  else rpic.Left := Self.Width - (Self.Width - '
          'dim.cx) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') '
          'then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := rpic.Left;'
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := Self.Height - (Self.Height - '
          'dim.cy) div 2;'
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.TextRect(rtext, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawPictureTop;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Top := (Self.Height - dim.cy) div 2;'
          '    rpic.Bottom := rpic.Top + h;'
          ''
          '    if PictureIsHorzStretchable and (dim.cx > '
          'w) then'
          '    begin'
          '      rpic.Left := (Self.Width - dim.cx) div 2;'
          '      rpic.Right := rpic.Left + dim.cx;'
          '    end'
          '    else begin'
          '      rpic.Left := (Self.Width - w) div 2;'
          '      rpic.Right := rpic.Left + w;'
          '    end;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Bottom := rpic.Bottom + FSpace;'
          '  end'
          '  else rpic.Bottom := (Self.Height - dim.cy) '
          'div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') '
          'then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Top := rpic.Bottom;'
          '    rtext.Bottom := Self.Height - (Self.Height - '
          'dim.cy) div 2;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := Self.Width - rtext.Left;'
          '    '
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.TextRect(rtext, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawTextInPicture;'
          'var'
          '  Text: string;'
          '  r: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    if PictureIsHorzStretchable and (w < '
          'dim.cx) then'
          '      r.Left := (Self.Width - dim.cx) div 2'
          '    else'
          '      r.Left := (Self.Width - w) div 2;'
          ''
          '    r.Right := Self.Width - r.Left;'
          ''
          '    if PictureIsVertStretchable and (h < '
          'dim.cy) then'
          '      r.Top := (Self.Height - dim.cy) div 2'
          '    else'
          '      r.Top := (Self.Height - h) div 2;'
          ''
          '    r.Bottom := Self.Height - r.Top;'
          '    '
          '    Self.DrawPicture(r);'
          '  end;'
          ''
          '  if FShowCaption then'
          '  begin'
          '    Text := Caption;'
          ''
          '    if Text <> '#39#39' then'
          '    begin'
          '      r.Left := 0;'
          '      r.Right := Self.Width;'
          '      r.Top := 0;'
          '      r.Bottom := Self.Height;'
          ''
          '      Canvas.Font := Self.Font;'
          '      Canvas.Brush.Style := bsClear;'
          '      Canvas.TextRect(r, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '    end;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.DrawTextInStretchPicture'
          ';'
          'var'
          '  Text: string;'
          '  r: TRect;'
          '  w: Integer;'
          'begin'
          '  r.Left := 0;'
          '  r.Right := Self.Width;'
          '  r.Top := 0;'
          '  r.Bottom := Self.Height;'
          ''
          '  Self.GetPictureSize(w);'
          ''
          '  if w > 0 then Self.DrawPicture(r);'
          ''
          '  if FShowCaption then'
          '  begin'
          '    Text := Caption;'
          ''
          '    if Text <> '#39#39' then'
          '    begin'
          '      Canvas.Font := Self.Font;'
          '      Canvas.Brush.Style := bsClear;'
          '      Canvas.TextRect(r, Text, [tfCenter, '
          'tfVerticalCenter, tfSingleLine]);'
          '    end;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.GetContentDimension'
          '(out dim: TSize);'
          'var'
          '  TextSize: TSize;'
          '  ImageSize: TSize;'
          'begin'
          '  dim.cx := 0;'
          '  dim.cy := 0;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') '
          'then'
          '  begin'
          '    Self.Canvas.Font := Self.Font;'
          '    TextSize := Self.Canvas.TextExtent'
          '(Self.Caption);'
          '  end'
          '  else begin'
          '    TextSize.cx := 0;'
          '    TextSize.cy := 0;'
          '  end;'
          ''
          '  ImageSize.cy := Self.GetPictureSize'
          '(ImageSize.cx);'
          ''
          '  if (ImageSize.cx = 0) and (TextSize.cx = 0) '
          'then Exit;'
          ''
          '  case FLayout of'
          '    blPictureLeft, blPictureRight:'
          '      begin'
          '        if ImageSize.cx > 0 then'
          '        begin'
          '          if TextSize.cx > 0 then dim.cx := '
          'ImageSize.cx + FSpace + TextSize.cx'
          '          else dim.cx := ImageSize.cx;'
          '        end'
          '        else begin'
          '          if TextSize.cx > 0 then dim.cx := '
          'TextSize.cx'
          '          else dim.cx := 0;'
          '        end;'
          ''
          '        if TextSize.cy > ImageSize.cy then '
          'dim.cy := TextSize.cy'
          '        else dim.cy := ImageSize.cy;'
          '      end;'
          ''
          '    blPictureTop, blPictureBottom:'
          '      begin'
          '        if ImageSize.cy > 0 then'
          '        begin'
          '          if TextSize.cy > 0 then dim.cy := '
          'ImageSize.cy + FSpace + TextSize.cy'
          '          else dim.cy := ImageSize.cy;'
          '        end'
          '        else begin'
          '          if TextSize.cy > 0 then dim.cy := '
          'TextSize.cy'
          '          else dim.cy := 0;'
          '        end;'
          ''
          '        if TextSize.cx > ImageSize.cx then '
          'dim.cx := TextSize.cx'
          '        else dim.cx := ImageSize.cx;'
          '      end;'
          ''
          '    blTextInPicture, blTextInStretchPicture:'
          '      begin'
          '        if TextSize.cx > ImageSize.cx then '
          'dim.cx := TextSize.cx'
          '        else dim.cx := ImageSize.cx;'
          ''
          '        if TextSize.cy > ImageSize.cy then '
          'dim.cy := TextSize.cy'
          '        else dim.cy := ImageSize.cy;'
          '      end;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.MouseDown'
          '(Button: TMouseButton; Shift: TShiftState; '
          'X, Y: Integer);'
          'begin'
          '  inherited;'
          ''
          '  if Button = mbLeft then Include'
          '(FMouseFlag, mfLButtonDown);'
          ''
          '  if Button = mbRight then Include'
          '(FMouseFlag, mfRButtonDown);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.MouseUp'
          '(Button: TMouseButton; Shift: TShiftState; '
          'X, Y: Integer);'
          'begin'
          '  inherited;'
          '  '
          '  if Button = mbLeft then Exclude'
          '(FMouseFlag, mfLButtonDown);'
          ''
          '  if Button = mbRight then Exclude'
          '(FMouseFlag, mfRButtonDown);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.Paint;'
          'begin'
          '  Self.DrawImageAndText;'
          'end;'
          ''
          'function '
          'TFsCustomButton.PictureIsHorzStretchable: '
          'Boolean;'
          'begin'
          '  Result := False;'
          'end;'
          ''
          'function '
          'TFsCustomButton.PictureIsVertStretchable: '
          'Boolean;'
          'begin'
          '  Result := False;'
          'end;'
          ''
          'procedure TFsCustomButton.SetLayout'
          '(const Value: TFsImageButtonLayout);'
          'begin'
          '  if FLayout <> Value then'
          '  begin'
          '    FLayout := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.SetSpace'
          '(const Value: Integer);'
          'begin'
          '  if (FSpace <> Value) and (Value >= 0) then'
          '  begin'
          '    FSpace := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomButton.SetShowCaption(const '
          'Value: Boolean);'
          'begin'
          '  if FShowCaption <> Value then'
          '  begin'
          '    FShowCaption := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsImageButton }'
          ''
          'constructor TFsImageButton.Create(Owner: '
          'TComponent);'
          'begin'
          '  inherited;'
          '  FPicture := TFsPictureDrawable.Create'
          '(Self);'
          '  FDisablePicture := '
          'TFsPictureDrawable.Create(Self);'
          '  FMouseOverPicture := '
          'TFsPictureDrawable.Create(Self);'
          '  FMouseDownPicture := '
          'TFsPictureDrawable.Create(Self);'
          '  FPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          '  FDisablePicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          '  FMouseOverPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          '  '
          'FMouseDownPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          'end;'
          ''
          'destructor TFsImageButton.Destroy;'
          'begin'
          '  FPicture.RemoveOnChangeListener'
          '(Self.PictureChanged);'
          '  FDisablePicture.RemoveOnChangeListener'
          '(Self.PictureChanged);'
          '  '
          'FMouseOverPicture.RemoveOnChangeListen'
          'er(Self.PictureChanged);'
          '  '
          'FMouseDownPicture.RemoveOnChangeListe'
          'ner(Self.PictureChanged);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsImageButton.DrawPicture'
          '(const Rect: TRect);'
          'var'
          '  drawable: TFsSingleDrawable;'
          'begin'
          '  drawable := Self.GetDrawable;'
          ''
          '  if Assigned(drawable) then'
          '    drawable.Draw(Self.Canvas, Rect);'
          'end;'
          ''
          'function TFsImageButton.GetDisablePicture: '
          'TPicture;'
          'begin'
          '  Result := FDisablePicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetDrawable: '
          'TFsSingleDrawable;'
          'begin'
          '  if not Self.Enabled then Result := '
          'FDisablePicture'
          '  else if mfLButtonDown in FMouseFlag then '
          'Result := FMouseDownPicture'
          '  else if mfMouseOver in FMouseFlag then '
          'Result := FMouseOverPicture'
          '  else Result := FPicture;'
          ''
          '  if Result.Empty then'
          '    Result := FPicture;'
          'end;'
          ''
          'function '
          'TFsImageButton.GetMouseDownPicture: '
          'TPicture;'
          'begin'
          '  Result := FMouseDownPicture.Picture;'
          'end;'
          ''
          'function '
          'TFsImageButton.GetMouseOverPicture: '
          'TPicture;'
          'begin'
          '  Result := FMouseOverPicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetPicture: '
          'TPicture;'
          'begin'
          '  Result := FPicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetPictureSize(out '
          'width: Integer): Integer;'
          'var'
          '  drawable: TFsDrawable;'
          'begin'
          '  drawable := Self.GetDrawable;'
          ''
          '  if Assigned(drawable) and not '
          'drawable.Empty then'
          '  begin'
          '    width := drawable.Width;'
          '    Result := drawable.Height;'
          '  end'
          '  else begin'
          '    width := 0;'
          '    Result := 0;'
          '  end;'
          'end;'
          ''
          'procedure TFsImageButton.PictureChanged'
          '(Sender: TObject; ID: TNotifyID);'
          'begin'
          '  if (ID = niChange) and (Sender = '
          'GetDrawable) then '
          'Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsImageButton.SetPicture(const '
          'Value: TPicture);'
          'begin'
          '  FPicture.Picture.Assign(Value);'
          'end;'
          ''
          'procedure '
          'TFsImageButton.SetDisablePicture(const '
          'Value: TPicture);'
          'begin'
          '  FDisablePicture.Picture.Assign(Value);'
          'end;'
          ''
          'procedure '
          'TFsImageButton.SetMouseDownPicture'
          '(const Value: TPicture);'
          'begin'
          '  FMouseDownPicture.Picture.Assign(Value);'
          'end;'
          ''
          'procedure '
          'TFsImageButton.SetMouseOverPicture'
          '(const Value: TPicture);'
          'begin'
          '  FMouseOverPicture.Picture.Assign(Value);'
          'end;'
          ''
          '{ TFsImage }'
          ''
          'constructor TFsImage.Create(Owner: '
          'TComponent);'
          'begin'
          '  inherited;'
          '  ControlStyle := ControlStyle + '
          '[csReplicatable, csPannable];'
          '  Self.SetBounds(Left, Top, 100, 100);'
          'end;'
          ''
          'destructor TFsImage.Destroy;'
          'begin'
          '  SetPicture(nil);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsImage.GetContentDimension'
          '(out dim: TSize);'
          'begin'
          '  if Assigned(FPicture) then'
          '  begin'
          '    dim.cx := FPicture.Width;'
          '    dim.cy := FPicture.Height;'
          '  end'
          '  else begin'
          '    dim.cx := 0;'
          '    dim.cy := 0;'
          '  end;'
          'end;'
          ''
          'procedure TFsImage.Paint;'
          'var'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  r := Rect(0, 0, Width, Height);'
          ''
          '  if Assigned(FPicture) and not '
          'FPicture.Empty then'
          '  begin'
          '    if FPicture is TFsSingleDrawable then'
          '      TFsSingleDrawable(FPicture).Draw'
          '(Canvas, r)'
          '    else'
          '      TFsMultiFrameDrawable'
          '(FPicture).DrawFrame(Canvas.Handle, r, 0);'
          '  end;'
          ''
          '  if csDesigning in ComponentState then'
          '  begin'
          '    Canvas.Pen.Style := psDash;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.Rectangle(0, 0, Width, Height);'
          '  end;'
          'end;'
          ''
          'procedure TFsImage.PictureChanged'
          '(Sender: TObject; ID: TNotifyID);'
          'begin'
          '  if ID = niDestroy then'
          '  begin'
          '    if Sender = FPicture then'
          '    begin'
          '      FPicture := nil;'
          '      Self.AutoSizeAndInvalidate;'
          '    end;'
          '  end'
          '  else if ID = niChange then'
          '  begin'
          '    if Sender = FPicture then '
          'Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsImage.SetPicture(const Value: '
          'TFsDrawable);'
          'begin'
          '  if FPicture <> Value then'
          '  begin'
          '    if Assigned(FPicture) then'
          '      FPicture.RemoveOnChangeListener'
          '(Self.PictureChanged);'
          ''
          '    FPicture := Value;'
          ''
          '    if Assigned(FPicture) then'
          '      FPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          '      '
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsEdit }'
          ''
          'procedure TFsEdit.CMMouseEnter(var msg: '
          'TMessage);'
          'begin'
          '  FMouseIn := True;'
          '  inherited;'
          'end;'
          ''
          'procedure TFsEdit.CMMouseLeave(var msg: '
          'TMessage);'
          'begin'
          '  FMouseIn := False;'
          '  inherited;'
          'end;'
          ''
          'constructor TFsEdit.Create(AOwner: '
          'TComponent);'
          'begin'
          '  inherited;'
          '  FMouseInBorderColor := RGB(123, 228, '
          '255);'
          'end;'
          ''
          'procedure TFsEdit.SetMouseInBorderColor'
          '(const Value: TColor);'
          'begin'
          '  if FMouseInBorderColor <> Value then'
          '  begin'
          '    FMouseInBorderColor := Value;'
          '    Self.Invalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsEdit.WMNCPAINT(var msg: '
          'TWMNCPaint);'
          'var'
          '  dc: HDC;'
          '  hb: HBRUSH;'
          '  bgc: DWORD;'
          'begin'
          '  dc := GetWindowDC(Handle);'
          ''
          '  try    '
          '    if FMouseIn then bgc := ColorToRGB'
          '(FMouseInBorderColor)'
          '    else bgc := RGB(78, 160, 209);'
          '    '
          '    hb := CreateSolidBrush(bgc);'
          '    Windows.FrameRect(dc, Rect(0, 0, '
          'Self.Width, Self.Height), hb);'
          '    DeleteObject(hb);'
          ''
          '    if FMouseIn then bgc := RGB(78, 160, '
          '209)'
          '    else bgc := ColorToRGB(Self.Color);'
          '    '
          '    hb := CreateSolidBrush(bgc);'
          '    Windows.FrameRect(dc, Rect(1, 1, '
          'Self.Width - 1, Self.Height - 1), hb);'
          '    DeleteObject(hb);'
          '  finally'
          '    ReleaseDC(Handle, dc);'
          '  end;'
          'end;'
          ''
          '{ TFsCustomCheckBox }'
          ''
          'procedure '
          'TFsCustomCheckBox.CMFontChange(var '
          'msg: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure '
          'TFsCustomCheckBox.CMTextChange(var '
          'msg: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'constructor TFsCustomCheckBox.Create'
          '(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  FSpace := 4;'
          '  ControlStyle := ControlStyle + '
          '[csReplicatable, csPannable];'
          'end;'
          ''
          'procedure '
          'TFsCustomCheckBox.GetContentDimension'
          '(out dim: TSize);'
          'var'
          '  TextSize: TSize;'
          '  ImageWidth, ImageHeight: Integer;'
          'begin'
          '  Canvas.Font := Self.Font;'
          ''
          '  TextSize := Canvas.TextExtent'
          '(Self.Caption);'
          ''
          '  Self.GetImageSize(ImageWidth, '
          'ImageHeight);'
          ''
          '  if ImageWidth = 0 then'
          '  begin'
          '    ImageWidth := '
          'Windows.GetSystemMetrics'
          '(SM_CXMENUCHECK);'
          '    ImageHeight := '
          'Windows.GetSystemMetrics'
          '(SM_CYMENUCHECK);'
          '  end;'
          ''
          '  dim.cx := ImageWidth + FSpace + '
          'TextSize.cx;'
          ''
          '  if TextSize.cy > ImageHeight then dim.cy '
          ':= TextSize.cy'
          '  else dim.cy := ImageHeight;'
          'end;'
          ''
          'procedure '
          'TFsCustomCheckBox.GetImageSize(out w, '
          'h: Integer);'
          'begin'
          '  w := 0;'
          '  h := 0;'
          'end;'
          ''
          'procedure '
          'TFsCustomCheckBox.MouseDown(Button: '
          'TMouseButton; Shift: TShiftState; X, Y: '
          'Integer);'
          'begin'
          '  if Button = mbLeft then'
          '  begin'
          '    FChecked := not FChecked;'
          '    Invalidate;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.Paint;'
          'var'
          '  w, h: Integer;'
          '  r: TRect;'
          '  _caption: string;'
          'begin'
          '  inherited;'
          ''
          '  Self.GetImageSize(w, h);'
          ''
          '  if w = 0 then'
          '  begin'
          '    w := Windows.GetSystemMetrics'
          '(SM_CXMENUCHECK);'
          '    h := Windows.GetSystemMetrics'
          '(SM_CYMENUCHECK);'
          ''
          '    r.Left := 0;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Right := w;'
          '    r.Bottom := r.Top + h;'
          ''
          '    if Self.FChecked then'
          '      Windows.DrawFrameControl'
          '(Canvas.Handle, r, DFC_BUTTON, '
          'DFCS_BUTTONCHECK or DFCS_CHECKED)'
          '    else'
          '      Windows.DrawFrameControl'
          '(Canvas.Handle, r, DFC_BUTTON, '
          'DFCS_BUTTONCHECK);'
          '  end'
          '  else begin'
          '    r.Left := 0;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Right := w;'
          '    r.Bottom := r.Top + h;'
          '    Self.DrawMark(r);'
          '  end;'
          ''
          '  r := Rect(r.Right + FSpace, 0, Self.Width, '
          'Self.Height);'
          ''
          '  Self.Canvas.Font := Self.Font;'
          '  Self.Canvas.Brush.Style := bsClear;'
          '  SetBkMode(Self.Canvas.Handle, '
          'Windows.TRANSPARENT);'
          '  _caption := Self.Caption;'
          '  '
          '  Self.Canvas.TextRect(r, _caption, '
          '[tfVerticalCenter, tfSingleLine]);'
          'end;'
          ''
          'procedure '
          'TFsCustomCheckBox.SetChecked(const '
          'Value: Boolean);'
          'begin'
          '  if FChecked <> Value then'
          '  begin'
          '    FChecked := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.SetSpace'
          '(const Value: Integer);'
          'begin'
          '  if (FSpace <> Value) and (Value >= 0) then'
          '  begin'
          '    FSpace := Value;'
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsCheckBox }'
          ''
          'constructor TFsCheckBox.Create(Owner: '
          'TComponent);'
          'begin'
          '  inherited;'
          '  FCheckedPicture := '
          'TFsPictureDrawable.Create(Self);'
          '  FUnCheckedPicture := '
          'TFsPictureDrawable.Create(Self);'
          '  FCheckedPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          '  FUnCheckedPicture.AddOnChangeListener'
          '(Self.PictureChanged);'
          'end;'
          ''
          'destructor TFsCheckBox.Destroy;'
          'begin'
          '  '
          'FCheckedPicture.RemoveOnChangeListener'
          '(Self.PictureChanged);'
          '  '
          'FUnCheckedPicture.RemoveOnChangeListen'
          'er(Self.PictureChanged);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsCheckBox.DrawMark(const '
          'Rect: TRect);'
          'begin'
          '  if Self.Checked then'
          '    FCheckedPicture.Draw(Self.Canvas, Rect)'
          '  else'
          '    FUnCheckedPicture.Draw(Self.Canvas, '
          'Rect)'
          'end;'
          ''
          'function TFsCheckBox.GetCheckedPicture: '
          'TPicture;'
          'begin'
          '  Result := FCheckedPicture.Picture;'
          'end;'
          ''
          'procedure TFsCheckBox.GetImageSize(out '
          'w, h: Integer);'
          'begin'
          '  if Self.Checked then'
          '  begin'
          '    w := FCheckedPicture.Width;'
          '    h := FCheckedPicture.Height;'
          '  end'
          '  else begin'
          '    w := FUnCheckedPicture.Width;'
          '    h := FUnCheckedPicture.Height;'
          '  end;'
          'end;'
          ''
          'function '
          'TFsCheckBox.GetUnCheckedPicture: '
          'TPicture;'
          'begin'
          '  Result := FUnCheckedPicture.Picture;'
          'end;'
          ''
          'procedure TFsCheckBox.PictureChanged'
          '(Sender: TObject; ID: TNotifyID);'
          'begin'
          '  if ID = niChange then'
          '  begin'
          '    if ((Sender = FCheckedPicture) and '
          'FChecked) or ((Sender = '
          'FUnCheckedPicture) and not FChecked) '
          'then'
          '      Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCheckBox.SetCheckedPicture'
          '(const Value: TPicture);'
          'begin'
          '  FCheckedPicture.Picture.Assign(Value);'
          'end;'
          ''
          'procedure '
          'TFsCheckBox.SetUnCheckedPicture(const '
          'Value: TPicture);'
          'begin'
          '  FUnCheckedPicture.Picture.Assign(Value);'
          'end;'
          ''
          '{ TFsButtonEdit }'
          ''
          'constructor TFsButtonEdit.Create(AOwner: '
          'TComponent);'
          'begin'
          '  inherited;'
          '  FButtonPicture := TPicture.Create;'
          '  FNCCanvas := TCanvas.Create;'
          'end;'
          ''
          'destructor TFsButtonEdit.Destroy;'
          'begin'
          '  FButtonPicture.Free;'
          '  FNCCanvas.Free;'
          '  inherited;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCCalcSize(var '
          'msgr: TWMNCCalcSize);'
          'begin'
          '  with msgr.CalcSize_Params^ do'
          '  begin'
          '    rgrc[0].Left := rgrc[0].Left + 2;'
          '    rgrc[0].Top := rgrc[0].Top + 2;'
          '    rgrc[0].Right := rgrc[0].Right - 2 - '
          'FButtonPicture.Width;'
          '    rgrc[0].Bottom := rgrc[0].Bottom - 2;'
          '  end;'
          ''
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCHitTest(var '
          'msgr: TWMNCHitTest);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  pt := Self.ScreenToClient(Point(msgr.XPos, '
          'msgr.YPos));'
          ''
          '  if PtInRect(Rect(Self.Width - 18, 2, '
          'Self.Width - 2, Self.Height - 2), pt) then '
          'msgr.Result := HTBORDER'
          '  else inherited;'
          'end;'
          ''
          'procedure '
          'TFsButtonEdit.WMNCLButtonDown(var '
          'msgr: TWMNCLButtonDown);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  pt := Self.ScreenToClient(Point'
          '(msgr.XCursor, msgr.YCursor));'
          ''
          '  if PtInRect(Rect(Self.Width - 18, 2, '
          'Self.Width - 2, Self.Height - 2), pt) then'
          '  begin'
          '    if Assigned(FOnClickButton) then'
          '      FOnClickButton(Self);'
          ''
          '    msgr.Result := 0;'
          '  end'
          '  else inherited;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCPAINT(var '
          'msgr: TWMNCPaint);'
          'var'
          '  dc: HDC;'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  r.Left := Self.Width - 2 - '
          'FButtonPicture.Width;'
          '  r.Right := Self.Width - 2;'
          ''
          '  r.Top := (Self.Height - '
          'FButtonPicture.Height) div 2;'
          '  r.Bottom := Self.Height - (Self.Height - '
          'FButtonPicture.Height) div 2;'
          ''
          '  dc := GetWindowDC(Self.Handle);'
          '  '
          '  FNCCanvas.Handle := dc;'
          ''
          '  try'
          '    FNCCanvas.Brush.Color := Self.Color;'
          '    FNCCanvas.FillRect(Rect(r.Left, 2, r.Right, '
          'Self.Height - 2));'
          '    '
          '    if Assigned(FButtonPicture.Graphic) then'
          '      FNCCanvas.StretchDraw(r, '
          'FButtonPicture.Graphic);'
          '  finally'
          '    FNCCanvas.Handle := 0;'
          '    ReleaseDC(Self.Handle, dc);'
          '  end;  '
          'end;'
          ''
          'procedure '
          'TFsButtonEdit.WriteButtonPicture(const '
          'Value: TPicture);'
          'begin'
          '  FButtonPicture.Assign(Value);'
          'end;'
          ''
          '{ TFsNCScrollMemo }'
          ''
          'procedure '
          'TFsNCScrollMemo.CMMouseEnter(var msg: '
          'TMessage);'
          'begin'
          '  inherited;'
          '  FMouseIn := True;'
          'end;'
          ''
          'procedure '
          'TFsNCScrollMemo.CMMouseLeave(var msg: '
          'TMessage);'
          'begin'
          '  inherited;'
          '  FMouseIn := False;'
          'end;'
          ''
          'constructor TFsNCScrollMemo.Create'
          '(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FMouseInBorderColor := RGB(123, 228, '
          '255);'
          'end;'
          ''
          'function TFsNCScrollMemo.GetHScrollRect'
          '(var rc: TRect): Boolean;'
          'var'
          '  style: Integer;'
          'begin'
          '  style := GetWindowLong(Handle, '
          'GWL_STYLE);'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    rc.Bottom := Self.Height - 2;'
          '    rc.Top := rc.Bottom - '
          'GetRealScrollBar.HScrollHeight;'
          '    rc.Left := 2;'
          ''
          '    if style and WS_VSCROLL = 0 then '
          'rc.Right := Self.Width - 2'
          '    else rc.Right := Self.Width - 2 - '
          'GetRealScrollBar.VScrollWidth;'
          ''
          '    Result := True;'
          '  end'
          '  else Result := False;'
          'end;'
          ''
          'function TFsNCScrollMemo.GetRealScrollBar: '
          'TFsCustomScrollBar;'
          'begin'
          '  if Assigned(FScrollBar) then Result := '
          'FScrollBar'
          '  else Result := GetDefaultScrollBar;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.GetScrollRect'
          '(var rcVScroll, rcHScroll, rcIntersect: TRect);'
          'var'
          '  style: Integer;'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  sb := GetRealScrollBar;'
          '  style := GetWindowLong(Handle, '
          'GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    rcVScroll.Right := Self.Width - 2;'
          '    rcVScroll.Left := rcVScroll.Right - '
          'sb.VScrollWidth;'
          '    rcVScroll.Top := 2;'
          ''
          '    if style and WS_HSCROLL = 0 then '
          'rcVScroll.Bottom := Self.Height - 2'
          '    else rcVScroll.Bottom := Self.Height - 2 - '
          'sb.HScrollHeight;'
          '  end'
          '  else begin'
          '    rcVScroll.Left := 0;'
          '    rcVScroll.Right := -1;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    rcHScroll.Bottom := Self.Height - 2;'
          '    rcHScroll.Top := rcHScroll.Bottom - '
          'sb.HScrollHeight;'
          '    rcHScroll.Left := 2;'
          ''
          '    if style and WS_VSCROLL = 0 then '
          'rcHScroll.Right := Self.Width - 2'
          '    else rcHScroll.Right := Self.Width - 2 - '
          'sb.VScrollWidth;'
          '  end'
          '  else begin'
          '    rcHScroll.Left := 0;'
          '    rcHScroll.Right := -1;'
          '  end;'
          ''
          '  if (style and WS_HSCROLL <> 0) and '
          '(style and WS_VSCROLL <> 0) then'
          '  begin'
          '    rcIntersect.Left := Self.Width - 2 - '
          'sb.VScrollWidth;'
          '    rcIntersect.Right := Self.Width - 2;'
          '    rcIntersect.Top := Self.Height - 2 - '
          'sb.HScrollHeight;'
          '    rcIntersect.Bottom := Self.Height - 2;'
          '  end'
          '  else begin'
          '    rcIntersect.Left := 0;'
          '    rcIntersect.Right := -1;'
          '  end;'
          '  '
          'end;'
          ''
          'function TFsNCScrollMemo.GetVScrollRect'
          '(var rc: TRect): Boolean;'
          'var'
          '  style: Integer;'
          'begin'
          '  style := GetWindowLong(Handle, '
          'GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    rc.Right := Self.Width - 2;'
          '    rc.Left := rc.Right - '
          'GetRealScrollBar.VScrollWidth;'
          '    rc.Top := 2;'
          ''
          '    if style and WS_HSCROLL = 0 then '
          'rc.Bottom := Self.Height - 2'
          '    else rc.Bottom := Self.Height - 2 - '
          'GetRealScrollBar.HScrollHeight;'
          ''
          '    Result := True;'
          '  end'
          '  else Result := False;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.Notification'
          '(AComponent: TComponent; Operation: '
          'TOperation);'
          'begin'
          '  inherited;'
          ''
          '  if (Operation = opRemove) and '
          '(AComponent = FScrollBar) then'
          '    SetScrollBar(nil);'
          'end;'
          ''
          'procedure TFsNCScrollMemo.PaintNC;'
          'var'
          '  dc: HDC;'
          '  hb: HBRUSH;'
          '  r, rcIntersect, rcVScroll, rcHScroll: TRect;'
          '  bgc: DWORD;'
          '  si: TScrollInfo;'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  dc := GetWindowDC(Handle);'
          ''
          '  try'
          '    if FMouseIn then bgc := ColorToRGB'
          '(FMouseInBorderColor)'
          '    else bgc := RGB(78, 160, 209);'
          ''
          '    r.Left := 0;'
          '    r.Top := 0;'
          '    r.Right := Self.Width;'
          '    r.Bottom := Self.Height;'
          ''
          '    hb := CreateSolidBrush(bgc);'
          '    Windows.FrameRect(dc, r, hb);'
          '    DeleteObject(hb);'
          ''
          '    if FMouseIn then bgc := RGB(78, 160, '
          '209)  '
          '    else bgc := ColorToRGB(Self.Color);'
          ''
          '    r.Left := 1;'
          '    r.Top := 1;'
          '    r.Right := Self.Width - 1;'
          '    r.Bottom := Self.Height - 1;'
          ''
          '    hb := CreateSolidBrush(bgc);'
          '    FrameRect(dc, r, hb);'
          '    DeleteObject(hb);'
          ''
          '    sb := GetRealScrollBar;'
          '    '
          '    Self.GetScrollRect(rcVScroll, rcHScroll, '
          'rcIntersect);'
          ''
          '    if rcVScroll.Left < rcVScroll.Right then'
          '    begin'
          '      si.cbSize := SizeOf(si);'
          '      si.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '      Windows.GetScrollInfo(Handle, '
          'SB_VERT, si);'
          '      //sb.DrawVScroll(dc, si, rcVScroll);'
          '    end;'
          ''
          '    if rcHScroll.Left < rcHScroll.Right then'
          '    begin'
          '      si.cbSize := SizeOf(si);'
          '      si.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '      Windows.GetScrollInfo(Handle, '
          'SB_HORZ, si);'
          '      //sb.DrawHScroll(dc, si, rcHScroll);'
          '    end;'
          ''
          '    if rcIntersect.Left < rcIntersect.Right then'
          '      sb.DrawIntersect(dc, rcIntersect);'
          ''
          '  finally'
          '    ReleaseDC(Handle, dc);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsNCScrollMemo.SetMouseInBorderColor'
          '(const Value: TColor);'
          'begin'
          '  if FMouseInBorderColor <> Value then'
          '  begin'
          '    FMouseInBorderColor := Value;'
          '    Self.Invalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.SetScrollBar'
          '(const Value: TFsCustomScrollBar);'
          'begin'
          '  if Value <> FScrollBar then'
          '  begin'
          '    if Assigned(FScrollBar) then'
          '      FScrollBar.RemoveFreeNotification(Self);'
          ''
          '    FScrollBar := Value;'
          ''
          '    if Assigned(FScrollBar) then'
          '      FScrollBar.FreeNotification(Self);'
          ''
          '    Self.RecreateWnd;'
          '  end;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCCalcSize'
          '(var msgr: TWMNCCalcSize);'
          'var'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  with msgr.CalcSize_Params^ do'
          '  begin'
          '    rgrc[0].Left := rgrc[0].Left + 2;'
          '    rgrc[0].Top := rgrc[0].Top + 2;'
          '    rgrc[0].Right := rgrc[0].Right - 2;'
          '    rgrc[0].Bottom := rgrc[0].Bottom - 2;'
          ''
          '    sb := Self.GetRealScrollBar;'
          '    '
          '    if (GetWindowLong(Self.Handle, '
          'GWL_STYLE) and WS_VSCROLL) <> 0 then'
          '      Dec(rgrc[0].Right, sb.VScrollWidth);'
          ''
          '    if (GetWindowLong(Self.Handle, '
          'GWL_STYLE) and WS_HSCROLL) <> 0 '
          'then'
          '      Dec(rgrc[0].Bottom, sb.HScrollHeight);'
          '  end;'
          ''
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCHitTest'
          '(var msgr: TWMNCHitTest);'
          'var'
          '  pt: TPoint;'
          '  rcClient: TRect;'
          'begin'
          '  inherited;'
          ''
          '  pt.X := msgr.XPos;'
          '  pt.Y := msgr.YPos;'
          '  Windows.ScreenToClient(Self.Handle, pt);'
          ''
          '  Windows.GetClientRect(Self.Handle, '
          'rcClient);'
          ''
          '  if PtInRect(rcClient, pt) then msgr.Result := '
          'HTCLIENT'
          '  else begin'
          '    //PtInRect(Rect(rcClient.Right, 0, '
          'rcClient.Right + GetRealScrollBar.))'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsNCScrollMemo.WMNCLButtonDown(var '
          'msgr: TWMNCLButtonDown);'
          'begin'
          '  inherited;'
          '  //Self.Perform(WM_VSCROLL, '
          'SB_LINEDOWN, 0);'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCPAINT'
          '(var msgr: TWMNCPaint);'
          'begin'
          '  //inherited;'
          '  Self.PaintNC;'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WndProc(var '
          'msgr: TMessage);'
          'var'
          '  vsi1, hsi1, vsi2, hsi2: TScrollInfo;'
          '  style: Integer;'
          '  changed: Boolean;'
          'begin'
          '  if not HandleAllocated or (msgr.Msg = '
          'WM_CREATE) or (msgr.Msg = '
          'WM_NCCREATE)'
          '    or (msgr.Msg = WM_DESTROY) or '
          '(msgr.Msg = WM_NCDESTROY) then'
          '  begin'
          '    inherited;'
          '    Exit;'
          '  end;'
          ''
          '  changed := False;'
          ''
          '  style := GetWindowLong(Self.Handle, '
          'GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi1.cbSize := SizeOf(vsi1);'
          '    vsi1.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi1);'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi1.cbSize := SizeOf(hsi1);'
          '    hsi1.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi1);'
          '  end;'
          '    '
          '  inherited;'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi2.cbSize := SizeOf(vsi2);'
          '    vsi2.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi2);'
          ''
          '    if (vsi1.nMin <> vsi2.nMin) or (vsi1.nMax '
          '<> vsi2.nMax)'
          '      or (vsi1.nPage <> vsi2.nPage) or '
          '(vsi1.nPos <> vsi2.nPos) then'
          '      changed := True;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi2.cbSize := SizeOf(hsi2);'
          '    hsi2.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi2);'
          ''
          '    if (hsi1.nMin <> hsi2.nMin) or (hsi1.nMax '
          '<> hsi2.nMax)'
          '      or (hsi1.nPage <> hsi2.nPage) or '
          '(hsi1.nPos <> hsi2.nPos) then'
          '      changed := True;'
          '  end;'
          ''
          '  if changed then Self.PaintNC;'
          'end;'
          ''
          '{ TFsGraphicControl }'
          ''
          'procedure '
          'TFsGraphicControl.AutoSizeAndInvalidate;'
          'begin'
          '  if not CheckAutoSize then Self.Invalidate;'
          'end;'
          ''
          'function TFsGraphicControl.CanAutoSize(var '
          'NewWidth, NewHeight: Integer): Boolean;'
          'var'
          '  dim: TSize;'
          'begin'
          '  Result := True;'
          ''
          '  if not (csDestroying in ComponentState) '
          'then'
          '  begin'
          '    Self.GetContentDimension(dim);'
          ''
          '    if (csDesigning in ComponentState) or '
          '(dim.cx > 0) and (dim.cy > 0) then'
          '    begin'
          '      if Align in [alNone, alLeft, alRight] then '
          'NewWidth := dim.cx;'
          '      if Align in [alNone, alTop, alBottom] then '
          'NewHeight := dim.cy;'
          '    end;'
          '  end;'
          'end;'
          ''
          'function TFsGraphicControl.CheckAutoSize: '
          'Boolean;'
          'var'
          '  OldBounds: TRect;'
          'begin'
          '  if Self.AutoSize then'
          '  begin'
          '    OldBounds := Self.BoundsRect;'
          '    '
          '    Self.AutoSize := False;'
          '    Self.AutoSize := True;'
          ''
          '    Result := (OldBounds.Left <> Self.Left) or '
          '(OldBounds.Top <> Self.Top)'
          '      or (OldBounds.Right <> Self.Left + '
          'Self.Width)'
          '      or (OldBounds.Bottom <> Self.Top + '
          'Self.Height);'
          '    '
          '  end'
          '  else Result := False;'
          'end;'
          ''
          'procedure '
          'TFsGraphicControl.GetContentDimension'
          '(out dim: TSize);'
          'begin'
          '  dim.cx := Self.Width;'
          '  dim.cy := Self.Height;'
          'end;'
          ''
          '{ TFsCoverButton }'
          ''
          'constructor TFsCoverButton.Create'
          '(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FPicture := TPicture.Create;'
          '  FPicture.OnChange := '
          'Self.PictureChanged;'
          'end;'
          ''
          'destructor TFsCoverButton.Destroy;'
          'begin'
          '  FPicture.Free;'
          '  SetDownCover(nil);'
          '  SetHoverCover(nil);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsCoverButton.DrawPicture'
          '(const Rect: TRect);'
          'begin'
          '  if Assigned(FPicture.Graphic) and not '
          'FPicture.Graphic.Empty then'
          '    Self.Canvas.StretchDraw(Rect, '
          'FPicture.Graphic);'
          'end;'
          ''
          'function TFsCoverButton.GetCover: '
          'TFsDrawable;'
          'begin'
          '  inherited;'
          ''
          '  if mfLButtonDown in FMouseFlag then '
          'Result := fDownCover'
          '  else if mfMouseOver in FMouseFlag then '
          'Result := FHoverCover'
          '  else Result := nil;'
          'end;'
          ''
          'function TFsCoverButton.GetPictureSize(out '
          'width: Integer): Integer;'
          'begin'
          '  if Assigned(FPicture.Graphic) and not '
          'FPicture.Graphic.Empty then'
          '  begin'
          '    width := FPicture.Graphic.Width;'
          '    Result := FPicture.Graphic.Height;'
          '  end'
          '  else begin'
          '    width := 0;'
          '    Result := 0;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCoverButton.LinkedPictureChanged'
          '(Sender: TObject; ID: TNotifyID);'
          'var'
          '  changed: Boolean;'
          'begin'
          '  changed := (Sender = fDownCover) or '
          '(Sender = FHoverCover);'
          ''
          '  if ID = niDestroy then'
          '  begin'
          '    if Sender = fDownCover then '
          'fDownCover := nil;'
          ''
          '    if Sender = FHoverCover then '
          'FHoverCover := nil;'
          '  end;'
          ''
          '  if changed then Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCoverButton.Paint;'
          'var'
          '  cover: TFsDrawable;'
          '  dim: TSize;'
          '  w, h: Integer;'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  Self.GetContentDimension(dim);'
          '  cover := Self.GetCover;'
          ''
          '  if Assigned(cover) then'
          '  begin'
          '    w := cover.Width;'
          ''
          '    if (w < dim.cx) and cover.HorzSafeStretch '
          'then w := dim.cx;'
          ''
          '    h := cover.Height;'
          ''
          '    if (h < dim.cy) and cover.VertSafeStretch '
          'then h := dim.cy;'
          ''
          '    r.Left := (Self.Width - w) div 2;'
          '    r.Right := r.Left + w;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Bottom := r.Top + h;'
          ''
          '    if cover is TFsSingleDrawable then'
          '      TFsSingleDrawable(cover).Draw'
          '(Self.Canvas, r)'
          '    else if cover is TFsMultiFrameDrawable '
          'then'
          '      TFsMultiFrameDrawable'
          '(cover).DrawFrame(Self.Canvas.Handle, r, '
          '0);'
          '  end;'
          'end;'
          ''
          'procedure TFsCoverButton.PictureChanged'
          '(Sender: TObject);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCoverButton.SetDownCover'
          '(const Value: TFsDrawable);'
          'begin'
          '  if fDownCover <> Value then'
          '  begin'
          '    if Assigned(fDownCover) then'
          '      fDownCover.RemoveOnChangeListener'
          '(Self.LinkedPictureChanged);'
          ''
          '    fDownCover := Value;'
          ''
          '    if Assigned(fDownCover) then'
          '      fDownCover.AddOnChangeListener'
          '(Self.LinkedPictureChanged);'
          ''
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCoverButton.SetHoverCover'
          '(const Value: TFsDrawable);'
          'begin'
          '  if FHoverCover <> Value then'
          '  begin'
          '    if Assigned(FHoverCover) then'
          '      '
          'FHoverCover.RemoveOnChangeListener'
          '(Self.LinkedPictureChanged);'
          ''
          '    FHoverCover := Value;'
          ''
          '    if Assigned(FHoverCover) then'
          '      FHoverCover.AddOnChangeListener'
          '(Self.LinkedPictureChanged);'
          ''
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCoverButton.SetPicture(const '
          'Value: TPicture);'
          'begin'
          '  FPicture.Assign(Value);'
          'end;'
          ''
          '{ TFsCustomScrollBar }'
          ''
          'const'
          '  SCROLL_MIN_THUMB_LENGTH = 20;'
          ''
          'function TFsCustomScrollBar.CalcHPos(const '
          'rc: TRect; const si: TScrollInfo; Y: Integer): '
          'Integer;'
          'var'
          '  ThumbWidth, ScrollWidth: Integer;'
          'begin'
          '  if (si.nMax >= si.nMin) and (si.nPage <= '
          'si.nMax - si.nMin) then'
          '  begin'
          '    ScrollWidth := rc.Right - rc.Left - '
          'FHArrowWidth shl 1;'
          ''
          '    ThumbWidth := si.nPage * ScrollWidth '
          'div (si.nMax - si.nMin + 1);'
          ''
          '    if ThumbWidth < Self.MinThumbLength '
          'then ThumbWidth := Self.MinThumbLength;'
          ''
          '    if Y <= rc.Left + FHArrowWidth then '
          'Result := si.nMin'
          '    else if Y > rc.Right - FHArrowWidth - '
          'ThumbWidth then Result := si.nMax'
          '    else begin'
          '      Y := Y - rc.Left - FHArrowWidth;'
          '      Result := (si.nMax - si.nMin + 1 - '
          'si.nPage) * Y div (ScrollWidth - '
          'ThumbWidth);'
          '    end;'
          '  end'
          '  else Result := si.nMin - 1;'
          'end;'
          ''
          'procedure TFsCustomScrollBar.CalcHScroll'
          '(const rc: TRect; const si: TScrollInfo; var '
          'rcLeftArrow, rcRightArrow,'
          '  rcThumb: TRect);'
          'var'
          '  ThumbWidth, ThumbPos, ScrollWidth: '
          'Integer;'
          'begin'
          '  rcLeftArrow.Left := rc.Left;'
          '  rcLeftArrow.Right := rc.Left + '
          'FHArrowWidth;'
          '  rcLeftArrow.Top := rc.Top;'
          '  rcLeftArrow.Bottom := rc.Bottom;'
          ''
          '  rcRightArrow.Left := rc.Right - '
          'FHArrowWidth;'
          '  rcRightArrow.Right := rc.Right;'
          '  rcRightArrow.Top := rc.Top;'
          '  rcRightArrow.Bottom := rc.Bottom;'
          ''
          '  if (si.nMax >= si.nMin) and (si.nPage <= '
          'si.nMax - si.nMin) then'
          '  begin'
          '    ScrollWidth := rc.Right - rc.Left - '
          'FHArrowWidth shl 1;'
          ''
          '    rcThumb.Top := rc.Top;'
          '    rcThumb.Bottom := rc.Bottom;'
          ''
          '    ThumbWidth := si.nPage * ScrollWidth '
          'div (si.nMax - si.nMin + 1);'
          ''
          '    if ThumbWidth < Self.MinThumbLength '
          'then ThumbWidth := Self.MinThumbLength;'
          ''
          '    ThumbPos := si.nPos * (ScrollWidth - '
          'ThumbWidth) div (si.nMax - si.nMin + 1 - '
          'si.nPage);'
          ''
          '    rcThumb.Left := rc.Left + FHArrowWidth '
          '+ ThumbPos;'
          '    rcThumb.Right := rcThumb.Left + '
          'ThumbWidth;'
          '  end'
          '  else begin'
          '    rcThumb.Left := 0;'
          '    rcThumb.Right := -1;'
          '    rcThumb.Top := 0;'
          '    rcThumb.Bottom := -1;'
          '  end;'
          'end;'
          ''
          'function TFsCustomScrollBar.CalcVPos(const '
          'rc: TRect; const si: TScrollInfo; Y: Integer): '
          'Integer;'
          'var'
          '  ThumbHeight, ScrollHeight: Integer;'
          'begin'
          '  if (si.nMax >= si.nMin) and (si.nPage <= '
          'si.nMax - si.nMin) then'
          '  begin'
          '    ScrollHeight := rc.Bottom - rc.Top - '
          'FVArrowHeight shl 1;'
          ''
          '    ThumbHeight := si.nPage * ScrollHeight '
          'div (si.nMax - si.nMin + 1);'
          ''
          '    if ThumbHeight < Self.MinThumbLength '
          'then ThumbHeight := '
          'Self.MinThumbLength;'
          ''
          '    if Y <= rc.Top + FVArrowHeight then '
          'Result := si.nMin'
          '    else if Y > rc.Bottom - FVArrowHeight - '
          'ThumbHeight then Result := si.nMax'
          '    else begin'
          '      Y := Y - rc.Top - FVArrowHeight;'
          '      Result := (si.nMax - si.nMin + 1 - '
          'si.nPage) * Y div (ScrollHeight - '
          'ThumbHeight);'
          '    end;'
          '  end'
          '  else Result := si.nMin - 1;'
          'end;'
          ''
          'procedure TFsCustomScrollBar.CalcVScroll'
          '(const rc: TRect; const si: TScrollInfo;'
          '  var rcTopArrow, rcBottomArrow, '
          'rcThumb: TRect);'
          'var'
          '  ThumbHeight, ThumbPos, ScrollHeight: '
          'Integer;'
          'begin'
          '  rcTopArrow.Left := rc.Left;'
          '  rcTopArrow.Right := rc.Right;'
          '  rcTopArrow.Top := rc.Top;'
          '  rcTopArrow.Bottom := rcTopArrow.Top + '
          'FVArrowHeight;'
          ''
          '  rcBottomArrow.Left := rc.Left;'
          '  rcBottomArrow.Right := rc.Right;'
          '  rcBottomArrow.Top := rc.Bottom - '
          'FVArrowHeight;'
          '  rcBottomArrow.Bottom := rc.Bottom;'
          ''
          '  if (si.nMax >= si.nMin) and (si.nPage <= '
          'si.nMax - si.nMin) then'
          '  begin'
          '    ScrollHeight := rc.Bottom - rc.Top - '
          'FVArrowHeight shl 1;'
          '    '
          '    rcThumb.Left := rc.Left;'
          '    rcThumb.Right := rc.Right;'
          ''
          '    ThumbHeight := si.nPage * ScrollHeight '
          'div (si.nMax - si.nMin + 1);'
          ''
          '    if ThumbHeight < Self.MinThumbLength '
          'then ThumbHeight := '
          'Self.MinThumbLength;'
          '    '
          '    ThumbPos := si.nPos * (ScrollHeight - '
          'ThumbHeight) div (si.nMax - si.nMin + 1 - '
          'si.nPage);'
          ''
          '    rcThumb.Top := rc.Top + FVArrowHeight '
          '+ ThumbPos;'
          '    rcThumb.Bottom := rcThumb.Top + '
          'ThumbHeight;'
          '  end'
          '  else begin'
          '    rcThumb.Left := 0;'
          '    rcThumb.Right := -1;'
          '    rcThumb.Top := 0;'
          '    rcThumb.Bottom := -1;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomScrollBar.Changed;'
          'begin'
          '  '
          'end;'
          ''
          'constructor TFsCustomScrollBar.Create'
          '(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FVScrollWidth := GetSystemMetrics'
          '(SM_CXVSCROLL);'
          '  FHScrollHeight := GetSystemMetrics'
          '(SM_CYHSCROLL);'
          '  FVArrowHeight := GetSystemMetrics'
          '(SM_CYVSCROLL);'
          '  FHArrowWidth := GetSystemMetrics'
          '(SM_CXHSCROLL);'
          '  FMinThumbLength := '
          'SCROLL_MIN_THUMB_LENGTH;'
          'end;'
          ''
          'procedure '
          'TFsCustomScrollBar.SetHArrowWidth(const '
          'Value: Integer);'
          'begin'
          '  if (FHArrowWidth <> Value) and (Value > '
          '0) then'
          '  begin'
          '    FHArrowWidth := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomScrollBar.SetHScrollHeight(const '
          'Value: Integer);'
          'begin'
          '  if (FHScrollHeight <> Value) and (Value > 0) '
          'then'
          '  begin'
          '    FHScrollHeight := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomScrollBar.SetMinThumbLength'
          '(const Value: Integer);'
          'begin'
          '  if (FMinThumbLength <> Value) and (Value '
          '>= SCROLL_MIN_THUMB_LENGTH) then'
          '  begin'
          '    FMinThumbLength := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomScrollBar.SetVArrowHeight(const '
          'Value: Integer);'
          'begin'
          '  if (FVArrowHeight <> Value) and (Value > '
          '0) then'
          '  begin'
          '    FVArrowHeight := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsCustomScrollBar.SetVScrollWidth(const '
          'Value: Integer);'
          'begin'
          '  if (FVScrollWidth <> Value) and (Value > 0) '
          'then'
          '  begin'
          '    FVScrollWidth := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          '{ TFsFlatScrollBar }'
          ''
          'procedure TFsFlatScrollBar.DrawHScroll(dc: '
          'HDC; const rc, rcLeftArrow, rcRightArrow, '
          'rcThumb: TRect);'
          'var'
          '  brush: HBRUSH;'
          'begin'
          '  Windows.FillRect(dc, rc, GetStockObject'
          '(LTGRAY_BRUSH));'
          ''
          '  GradientFillRect(dc, Rect(rcLeftArrow.Left + '
          '1, rcLeftArrow.Top + 1,'
          '    rcLeftArrow.Right - 1, rcLeftArrow.Bottom '
          '- 1),'
          '    RGB(255, 255, 255), RGB(229, 229, '
          '229), False);'
          ''
          '  Self.DrawLeftArrow(dc, rcLeftArrow,'
          '    (rcLeftArrow.Right - rcLeftArrow.Left) div '
          '2,'
          '    (rcLeftArrow.Bottom - rcLeftArrow.Top) '
          'div 2);'
          ''
          '  GradientFillRect(dc, Rect(rcRightArrow.Left '
          '+ 1, rcRightArrow.Top + 1,'
          '    rcRightArrow.Right - 1, '
          'rcRightArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, '
          '229), False);'
          ''
          '  Self.DrawRightArrow(dc, rcRightArrow,'
          '    (rcRightArrow.Right - rcRightArrow.Left) '
          'div 2,'
          '    (rcRightArrow.Bottom - '
          'rcRightArrow.Top) div 2);'
          ''
          '  if rcThumb.Left < rcThumb.Right then'
          '  begin'
          '    brush := CreateSolidBrush(RGB(136, 136, '
          '136));'
          ''
          '    FillRect(dc, Rect(rcThumb.Left, '
          'rcThumb.Top + 1, rcThumb.Right - 1, '
          'rcThumb.Top + 2), GetStockObject'
          '(WHITE_BRUSH));'
          '    FillRect(dc, Rect(rcThumb.Left, '
          'rcThumb.Top + 2, rcThumb.Left + 1, '
          'rcThumb.Bottom - 1), GetStockObject'
          '(WHITE_BRUSH));'
          '    FillRect(dc, Rect(rcThumb.Right - 1, '
          'rcThumb.Top + 1, rcThumb.Right, '
          'rcThumb.Bottom - 1), brush);'
          '    FillRect(dc, Rect(rcThumb.Left + 1, '
          'rcThumb.Bottom - 2, rcThumb.Right - 1, '
          'rcThumb.Bottom - 1), brush);'
          ''
          '    DeleteObject(brush);'
          ''
          '    GradientFillRect(dc, Rect(rcThumb.Left + '
          '1, rcThumb.Top + 2, rcThumb.Right - 1, '
          'rcThumb.Bottom - 2),'
          '      RGB(254, 254, 254), RGB(229, 229, '
          '229), True);'
          '  end;'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawVScroll(dc: '
          'HDC; const rc, rcTopArrow, rcBottomArrow, '
          'rcThumb: TRect);'
          'var'
          '  brush: HBRUSH;'
          'begin'
          '  Windows.FillRect(dc, rc, GetStockObject'
          '(LTGRAY_BRUSH));'
          ''
          '  GradientFillRect(dc, Rect(rcTopArrow.Left + '
          '1, rcTopArrow.Top + 1,'
          '    rcTopArrow.Right - 1, '
          'rcTopArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, '
          '229), False);'
          ''
          '  Self.DrawUpArrow(dc, rcTopArrow, '
          '(rcTopArrow.Bottom - rcTopArrow.Top) div '
          '2, (rcTopArrow.Right - '
          'rcTopArrow.Left) div 2);'
          ''
          '  GradientFillRect(dc, Rect'
          '(rcBottomArrow.Left + 1, '
          'rcBottomArrow.Top + 1,'
          '    rcBottomArrow.Right - 1, '
          'rcBottomArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, '
          '229), False);'
          ''
          '  Self.DrawDownArrow(dc, rcBottomArrow, '
          '(rcBottomArrow.Bottom - '
          'rcBottomArrow.Top) div 2, '
          '(rcBottomArrow.Right - rcBottomArrow.Left) '
          'div 2);'
          ''
          '  if rcThumb.Left < rcThumb.Right then'
          '  begin'
          '    brush := CreateSolidBrush(RGB(136, 136, '
          '136));'
          ''
          '    FillRect(dc, Rect(rcThumb.Left + 1, '
          'rcThumb.Top, rcThumb.Right - 2, '
          'rcThumb.Top + 1), GetStockObject'
          '(WHITE_BRUSH));'
          '    FillRect(dc, Rect(rcThumb.Left + 1, '
          'rcThumb.Top + 1, rcThumb.Left + 2, '
          'rcThumb.Bottom), GetStockObject'
          '(WHITE_BRUSH));'
          '    FillRect(dc, Rect(rcThumb.Right - 2, '
          'rcThumb.Top, rcThumb.Right - 1, '
          'rcThumb.Bottom), brush);'
          '    FillRect(dc, Rect(rcThumb.Left + 2, '
          'rcThumb.Bottom - 1, rcThumb.Right - 1, '
          'rcThumb.Bottom), brush);'
          ''
          '    DeleteObject(brush);'
          ''
          '    GradientFillRect(dc, Rect(rcThumb.Left + '
          '2, rcThumb.Top + 1, rcThumb.Right - 2, '
          'rcThumb.Bottom - 1),'
          '      RGB(254, 254, 254), RGB(229, 229, '
          '229), False);'
          '  end;'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawDownArrow'
          '(dc: HDC; const rc: TRect; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left - '
          'bw) div 2 ;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top - '
          'h) div 2;'
          ''
          '  pts[1].X := pts[0].X + bw;'
          '  pts[1].Y := pts[0].Y;'
          ''
          '  pts[2].X := rc.Left + (rc.Right - rc.Left) div '
          '2;'
          '  pts[2].Y := pts[0].Y + h;'
          ''
          '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, '
          'pts[1].X, pts[1].Y, pts[2].X, pts[2].Y,'
          '    RGB(180, 180, 180), RGB(180, 180, '
          '180), RGB(192, 192, 192));'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawIntersect'
          '(dc: HDC; const rc: TRect);'
          'begin'
          '  FillRect(dc, rc, GetStockObject'
          '(LTGRAY_BRUSH));'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawLeftArrow'
          '(dc: HDC; const rc: TRect; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left - h) '
          'div 2;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top) '
          'div 2;'
          ''
          '  pts[1].X := pts[0].X + h;'
          '  pts[1].Y := rc.Top + (rc.Bottom - rc.Top - '
          'bw) div 2;'
          ''
          '  pts[2].X := pts[1].X;'
          '  pts[2].Y := pts[1].Y + bw;'
          ''
          '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, '
          'pts[1].X, pts[1].Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, '
          '180), RGB(180, 180, 180));'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawRightArrow'
          '(dc: HDC; const rc: TRect; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[1].X := rc.Left + (rc.Right - rc.Left - h) '
          'div 2;'
          '  pts[1].Y := rc.Top + (rc.Bottom - rc.Top - '
          'bw) div 2;'
          ''
          '  pts[2].X := pts[1].X;'
          '  pts[2].Y := pts[1].Y + bw;'
          ''
          '  pts[0].X := pts[1].X + h;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top) '
          'div 2;'
          ''
          '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, '
          'pts[1].X, pts[1].Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, '
          '180), RGB(180, 180, 180));'
          'end;'
          ''
          'procedure TFsFlatScrollBar.DrawUpArrow'
          '(dc: HDC; const rc: TRect; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left) div '
          '2;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top - '
          'h) div 2;'
          ''
          '  pts[1].X := rc.Left + (rc.Right - rc.Left - '
          'bw) div 2;'
          '  pts[1].Y := pts[0].Y + h;'
          ''
          '  pts[2].X := pts[1].X + bw;'
          '  pts[2].Y := pts[1].Y;'
          ''
          '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, '
          'pts[1].X, pts[1].Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, '
          '180), RGB(180, 180, 180));'
          'end;'
          ''
          '{ TFsScrollContainer }'
          ''
          'procedure '
          'TFsScrollContainer.AdjustInnerControlBound'
          's;'
          'var'
          '  L, R, T, B: Integer;'
          '  sb: TFsCustomScrollBar;'
          '  VScroll, HScroll: Boolean;'
          'begin'
          '  if Assigned(FRealControl) then'
          '  begin'
          '  L := 2;'
          '    R := Self.ClientWidth - 2;'
          '    T := 2;'
          '    B := Self.ClientHeight - 2;'
          ''
          '    VScroll := Self.NeedScrollBar(HScroll);'
          ''
          '    sb := Self.GetRealScrollBar;'
          ''
          '    if VScroll then Dec(R, sb.VScrollWidth);'
          ''
          '    if HScroll then Dec(B, sb.HScrollHeight);'
          ''
          '    FRealControl.SetBounds(L, T, R - L, B - '
          'T);'
          '  end;'
          'end;'
          ''
          'procedure '
          'TFsScrollContainer.CMMouseEnter(var msgr: '
          'TMessage);'
          'begin'
          '  inherited;'
          '  FMouseInControl := True;'
          '  Self.Invalidate;'
          'end;'
          ''
          'procedure '
          'TFsScrollContainer.CMMouseLeave(var '
          'msgr: TMessage);'
          'begin'
          '  inherited;'
          '  FMouseInControl := False;'
          '  Self.Invalidate;'
          'end;'
          ''
          'function TFsScrollContainer.ControlMessage'
          '(msg: DWORD; wparam, lparam: Integer): '
          'Integer;'
          'begin'
          '  if Assigned(FRealControl) then Result := '
          'FRealControl.Perform(msg, wparam, lparam)'
          '  else Result := -1;'
          'end;'
          ''
          'constructor TFsScrollContainer.Create'
          '(AOwner: TComponent);'
          'begin'
          '  inherited;'
          ''
          '  ControlStyle := [csAcceptsControls, '
          'csCaptureMouse, csClickEvents,'
          '    csSetCaption, csOpaque, csDoubleClicks, '
          'csReplicatable, csPannable];'
          ''
          '  Width := 185;'
          '  Height := 41;'
          ''
          '  FRealControl := Self.CreateRealControl;'
          '  FRealControl.Parent := Self;'
          ''
          '  FTimer := TTimer.Create(Self);'
          '  FTimer.Enabled := False;'
          '  FTimer.Interval := 200;'
          '  FTimer.OnTimer := Self.OnTimer;'
          'end;'
          ''
          'procedure TFsScrollContainer.CreateParams'
          '(var Params: TCreateParams);'
          'begin'
          '  inherited;'
          ''
          '  Params.Style := Params.Style and not '
          'WS_BORDER;'
          '  Params.WindowClass.style := '
          'Params.WindowClass.style or CS_HREDRAW '
          'or CS_VREDRAW;'
          'end;'
          ''
          'destructor TFsScrollContainer.Destroy;'
          'begin'
          ''
          '  inherited;'
          'end;'
          ''
          'function '
          'TFsScrollContainer.GetControlScrollInfo(var '
          'si: TScrollInfo; isVert: Boolean): Boolean;'
          'const'
          '  BARS: array [Boolean] of DWORD = '
          '(SB_HORZ, SB_VERT);'
          'begin'
          '  if Assigned(FRealControl) and (FRealControl '
          'is TWinControl) and (TWinControl'
          '(FRealControl).HandleAllocated) then'
          '    Result := Windows.GetScrollInfo'
          '(TWinControl(FRealControl).Handle, BARS'
          '[isVert], si) and (si.nPage <> 0)'
          '  else Result := False;'
          'end;'
          ''
          'function TFsScrollContainer.GetRealScrollBar: '
          'TFsCustomScrollBar;'
          'begin'
          '  if Assigned(FScrollBarDrawer) then Result '
          ':= FScrollBarDrawer'
          '  else Result := GetDefaultScrollBar;'
          'end;'
          ''
          'procedure TFsScrollContainer.GetScrollInfo'
          '(var fsi: TFsScrollInfo; var vsi, hsi: '
          'TScrollInfo);'
          'var'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  sb := GetRealScrollBar;'
          ''
          '  fsi.ShowVScroll := False;'
          '  fsi.ShowHScroll := False;'
          ''
          '  vsi.cbSize := SizeOf(vsi);'
          '  vsi.fMask := SIF_RANGE or SIF_POS or '
          'SIF_PAGE;'
          ''
          '  if GetControlScrollInfo(vsi, True) and '
          '(vsi.nMax - vsi.nMin + 1 > vsi.nPage) then'
          '    fsi.ShowVScroll := True;'
          ''
          '  hsi.cbSize := SizeOf(hsi);'
          '  hsi.fMask := SIF_RANGE or SIF_POS or '
          'SIF_PAGE;'
          ''
          '  if GetControlScrollInfo(hsi, False) and '
          '(hsi.nMax - hsi.nMin + 1 > hsi.nPage) then'
          '    fsi.ShowHScroll := True;'
          ''
          '  if fsi.ShowVScroll then'
          '  begin'
          '    fsi.VScroll.Right := Self.Width - 2;'
          '    fsi.VScroll.Left := fsi.VScroll.Right - '
          'sb.VScrollWidth;'
          '    fsi.VScroll.Top := 2;'
          ''
          '    if fsi.ShowHScroll then fsi.VScroll.Bottom '
          ':= Self.Height - 2 - sb.HScrollHeight'
          '    else fsi.VScroll.Bottom := Self.Height - 2;'
          ''
          '    sb.CalcVScroll(fsi.VScroll, vsi, fsi.TopArrow, '
          'fsi.BottomArrow, fsi.VThumb);'
          '  end;'
          ''
          '  if fsi.ShowHScroll then'
          '  begin'
          '    fsi.HScroll.Bottom := Self.Height - 2;'
          '    fsi.HScroll.Top := fsi.HScroll.Bottom - '
          'sb.HScrollHeight;'
          '    fsi.HScroll.Left := 2;'
          ''
          '    if fsi.ShowHScroll then fsi.HScroll.Right := '
          'Self.Width - 2 - sb.VScrollWidth'
          '    else fsi.HScroll.Right := Self.Width - 2;'
          ''
          '    sb.CalcHScroll(fsi.HScroll, hsi, fsi.LeftArrow, '
          'fsi.RightArrow, fsi.HThumb);'
          '  end;'
          ''
          '  if fsi.ShowVScroll and fsi.ShowHScroll then'
          '  begin'
          '    fsi.Intersect.Left := Self.Width - 2 - '
          'sb.VScrollWidth;'
          '    fsi.Intersect.Right := Self.Width - 2;'
          '    fsi.Intersect.Top := Self.Height - 2 - '
          'sb.HScrollHeight;'
          '    fsi.Intersect.Bottom := Self.Height - 2;'
          '  end;'
          'end;'
          ''
          'function TFsScrollContainer.HitTest(X, Y: '
          'Integer): TScrollHitTest;'
          'var'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  pt: TPoint;'
          'begin'
          '  pt.X := X;'
          '  pt.Y := Y;'
          ''
          '  Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '  Result := shtNoWhere;'
          ''
          '  if fsi.ShowVScroll then'
          '  begin'
          '    if PtInRect(fsi.TopArrow, pt) then Result '
          ':= shtTopArrow'
          '    else if PtInRect(fsi.BottomArrow, pt) then '
          'Result := shtBottomArrow'
          '    else if PtInRect(fsi.VThumb, pt) then '
          'Result := shtVertThumb'
          '    else if PtInRect(fsi.VScroll, pt) then'
          '    begin'
          '      if pt.Y < fsi.VThumb.Top then Result := '
          'shtPageUp'
          '      else Result := shtPageDown;'
          '    end;'
          '  end;'
          ''
          '  if fsi.ShowHScroll and (Result = '
          'shtNoWhere) then'
          '  begin'
          '    if PtInRect(fsi.LeftArrow, pt) then Result '
          ':= shtLeftArrow'
          '    else if PtInRect(fsi.RightArrow, pt) then '
          'Result := shtRightArrow'
          '    else if PtInRect(fsi.HThumb, pt) then '
          'Result := shtHorzThumb'
          '    else if PtInRect(fsi.HScroll, pt) then'
          '    begin'
          '      if pt.X < fsi.HThumb.Left then Result := '
          'shtPageLeft'
          '      else Result := shtPageRight;'
          '    end;'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.MouseDown'
          '(Button: TMouseButton; Shift: TShiftState; '
          'X, Y: Integer);'
          'var'
          '  sht: TScrollHitTest;'
          '  DoCapture: Boolean;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          'begin'
          '  DoCapture := True;'
          '  sht := Self.HitTest(X, Y);'
          ''
          '  case sht of'
          '    shtNoWhere, shtBorder: DoCapture := '
          'False;'
          '    shtLeftArrow: Self.ControlMessage'
          '(WM_HSCROLL, SB_LINELEFT, 0);'
          '    shtRightArrow: Self.ControlMessage'
          '(WM_HSCROLL, SB_LINERIGHT, 0);'
          '    shtHorzThumb: ;'
          '    shtPageLeft: Self.ControlMessage'
          '(WM_HSCROLL, SB_PAGELEFT, 0);'
          '    shtPageRight: Self.ControlMessage'
          '(WM_HSCROLL, SB_PAGERIGHT, 0);'
          '    shtTopArrow: Self.ControlMessage'
          '(WM_VSCROLL, SB_LINEUP, 0);'
          '    shtBottomArrow: Self.ControlMessage'
          '(WM_VSCROLL, SB_LINEDOWN, 0);'
          '    shtVertThumb: ;'
          '    shtPageUp: Self.ControlMessage'
          '(WM_VSCROLL, SB_PAGEUP, 0);'
          '    shtPageDown: Self.ControlMessage'
          '(WM_VSCROLL, SB_PAGEDOWN, 0);'
          '  end;'
          ''
          '  if DoCapture then'
          '  begin'
          '    FCaptureRegion := sht;'
          '    SetCapture(Self.Handle);'
          ''
          '    if FCaptureRegion in [shtVertThumb, '
          'shtHorzThumb] then'
          '    begin'
          '      Self.GetScrollInfo(fsi, vsi, hsi);'
          '      FCapturePoint.X := X - fsi.HThumb.Left;'
          '      FCapturePoint.Y := Y - fsi.VThumb.Top;'
          '    end'
          '    else FTimer.Enabled := True;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          'procedure TFsScrollContainer.MouseMove'
          '(Shift: TShiftState; X, Y: Integer);'
          'var'
          '  pt: TPoint;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  nPos: Integer;'
          'begin'
          '  case FCaptureRegion of'
          '    shtLeftArrow, shtRightArrow, shtPageLeft, '
          'shtPageRight,'
          '    shtTopArrow, shtBottomArrow, '
          'shtPageUp, shtPageDown:'
          '      begin'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        FTimer.Enabled := HitTest(pt.X, pt.Y) = '
          'FCaptureRegion;'
          '      end;'
          ''
          '    shtVertThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowVScroll then'
          '        begin'
          '          nPos := GetRealScrollBar.CalcVPos'
          '(fsi.VScroll, vsi, Y - FCapturePoint.Y);'
          ''
          '          if nPos >= hsi.nMin then'
          '            Self.ControlMessage(WM_VSCROLL, '
          'MakeLong(SB_THUMBTRACK, nPos),0);'
          '        end;'
          '      end;'
          ''
          '    shtHorzThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          '          nPos := GetRealScrollBar.CalcHPos'
          '(fsi.HScroll, hsi, X - FCapturePoint.X);'
          ''
          '          if nPos >= hsi.nMin then'
          '            Self.ControlMessage(WM_HSCROLL, '
          'MakeLong(SB_THUMBTRACK, nPos),0);'
          '        end;'
          '      end;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          'procedure TFsScrollContainer.MouseUp'
          '(Button: TMouseButton; Shift: TShiftState; '
          'X, Y: Integer);'
          'var'
          '  pt: TPoint;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  nPos: Integer;'
          'begin'
          '  ReleaseCapture;'
          '  FCaptureRegion := shtNoWhere;'
          '  FTimer.Enabled := False;'
          ''
          '  case FCaptureRegion of'
          '    shtVertThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          '          nPos := GetRealScrollBar.CalcVPos'
          '(fsi.VScroll, vsi, Y - FCapturePoint.Y);'
          ''
          '          if nPos >= hsi.nMin then'
          '            Self.ControlMessage(WM_VSCROLL, '
          'MakeLong(SB_THUMBPOSITION, nPos),0);'
          '        end;'
          '      end;'
          ''
          '    shtHorzThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          '          nPos := GetRealScrollBar.CalcHPos'
          '(fsi.HScroll, hsi, X - FCapturePoint.X);'
          ''
          '          if nPos >= hsi.nMin then'
          '            Self.ControlMessage(WM_HSCROLL, '
          'MakeLong(SB_THUMBPOSITION, nPos),0);'
          '        end;'
          '      end;'
          '  end;'
          '  '
          '  inherited;'
          'end;'
          ''
          'function TFsScrollContainer.NeedScrollBar'
          '(out HScroll: Boolean): Boolean;'
          'var'
          '  style: Integer;'
          '  si: TScrollInfo;'
          'begin'
          '  HScroll := False;'
          '  Result := False;'
          ''
          '  si.cbSize := SizeOf(si);'
          '  si.fMask := SIF_RANGE or SIF_PAGE;'
          ''
          '  HScroll := GetControlScrollInfo(si, False) '
          'and (si.nMax - si.nMin + 1 > si.nPage);'
          ''
          '  si.cbSize := SizeOf(si);'
          '  si.fMask := SIF_RANGE or SIF_PAGE;'
          ''
          '  Result := GetControlScrollInfo(si, True) and '
          '(si.nMax - si.nMin + 1 > si.nPage);'
          'end;'
          ''
          'procedure TFsScrollContainer.OnTimer'
          '(Sender: TObject);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  case FCaptureRegion of'
          '    shtLeftArrow: Self.ControlMessage'
          '(WM_HSCROLL, SB_LINELEFT, 0);'
          '    shtRightArrow: Self.ControlMessage'
          '(WM_HSCROLL, SB_LINERIGHT, 0);'
          '    shtPageLeft:'
          '      begin'
          '        Self.ControlMessage(WM_HSCROLL, '
          'SB_PAGELEFT, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        if HitTest(pt.X, pt.Y) <> shtPageLeft '
          'then FTimer.Enabled := False;'
          '      end;'
          '    shtPageRight:'
          '      begin'
          '        Self.ControlMessage(WM_HSCROLL, '
          'SB_PAGERIGHT, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        if HitTest(pt.X, pt.Y) <> shtPageLeft '
          'then FTimer.Enabled := False;'
          '      end;'
          '    shtTopArrow: Self.ControlMessage'
          '(WM_VSCROLL, SB_LINEUP, 0);'
          '    shtBottomArrow: Self.ControlMessage'
          '(WM_VSCROLL, SB_LINEDOWN, 0);'
          '    shtPageUp:'
          '      begin'
          '        Self.ControlMessage(WM_VSCROLL, '
          'SB_PAGEUP, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        if HitTest(pt.X, pt.Y) <> shtPageUp '
          'then FTimer.Enabled := False;'
          '      end;'
          '    shtPageDown:'
          '      begin'
          '        Self.ControlMessage(WM_VSCROLL, '
          'SB_PAGEDOWN, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        if HitTest(pt.X, pt.Y) <> shtPageDown '
          'then FTimer.Enabled := False;'
          '      end;'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.Paint;'
          'var'
          '  sb: TFsCustomScrollBar;'
          '  r: TRect;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          'begin'
          '  inherited;'
          ''
          '  if FMouseInControl then '
          'Canvas.Brush.Color := RGB(123, 228, 255)'
          '  else Canvas.Brush.Color := RGB(78, 160, '
          '209);'
          ''
          '  r.Left := 0;'
          '  r.Top := 0;'
          '  r.Right := Self.Width;'
          '  r.Bottom := Self.Height;'
          ''
          '  Canvas.FrameRect(r);'
          ''
          '  if FMouseInControl then '
          'Canvas.Brush.Color := RGB(78, 160, 209)'
          '  else Canvas.Brush.Color := TControlHack'
          '(FRealControl).Color;'
          ''
          '  r.Left := 1;'
          '  r.Top := 1;'
          '  r.Right := Self.Width - 1;'
          '  r.Bottom := Self.Height - 1;'
          ''
          '  Canvas.FrameRect(r);'
          ''
          '  sb := GetRealScrollBar;'
          ''
          '  Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '  if fsi.ShowVScroll then'
          '    sb.DrawVScroll(Canvas.Handle, fsi.VScroll, '
          'fsi.TopArrow, fsi.BottomArrow, fsi.VThumb);'
          ''
          '  if fsi.ShowHScroll then'
          '    sb.DrawHScroll(Canvas.Handle, fsi.HScroll, '
          'fsi.LeftArrow, fsi.RightArrow, fsi.HThumb);'
          ''
          '  if fsi.ShowVScroll and fsi.ShowHScroll then'
          '    sb.DrawIntersect(Canvas.Handle, '
          'fsi.Intersect);'
          'end;'
          ''
          'procedure '
          'TFsScrollContainer.SetScrollBarDrawer(const '
          'Value: TFsCustomScrollBar);'
          'begin'
          '  if Value <> FScrollBarDrawer then'
          '  begin'
          '    if Assigned(FScrollBarDrawer) then'
          '      '
          'FScrollBarDrawer.RemoveFreeNotification'
          '(Self);'
          ''
          '    FScrollBarDrawer := Value;'
          ''
          '    if Assigned(FScrollBarDrawer) then'
          '      FScrollBarDrawer.FreeNotification(Self);'
          ''
          '    Self.AdjustInnerControlBounds;'
          ''
          '    //Self.Invalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.WMSize(var '
          'msgr: TWMSize);'
          'begin'
          '  inherited;'
          '  AdjustInnerControlBounds;'
          'end;'
          ''
          '{ TFsMemo }'
          ''
          'function TFsMemo.CreateRealControl: '
          'TControl;'
          'begin'
          '  Result := TFsBorderlessMemo.Create(Self);'
          '  TFsBorderlessMemo(Result).ScrollBars := '
          'ssVertical;'
          'end;'
          ''
          'function TFsMemo.GetLines: TStrings;'
          'begin'
          '  Result := TFsBorderlessMemo'
          '(RealControl).Lines;'
          'end;'
          ''
          'function TFsMemo.GetScrollBars: '
          'TScrollStyle;'
          'begin'
          '  Result := TFsBorderlessMemo'
          '(RealControl).ScrollBars;'
          'end;'
          ''
          'procedure TFsMemo.SetLines(const Value: '
          'TStrings);'
          'begin'
          '  TFsBorderlessMemo(RealControl).Lines := '
          'Value;'
          'end;'
          ''
          'procedure TFsMemo.SetScrollBars(const '
          'Value: TScrollStyle);'
          'begin'
          '  TFsBorderlessMemo(RealControl).ScrollBars '
          ':= Value;'
          'end;'
          ''
          '{ TFsBorderlessMemo }'
          ''
          'constructor TFsBorderlessMemo.Create'
          '(AOwner: TComponent);'
          'begin'
          '  inherited;'
          'end;'
          ''
          'procedure '
          'TFsBorderlessMemo.CreateParams(var '
          'params: TCreateParams);'
          'begin'
          '  inherited;'
          '  params.Style := params.Style and not '
          'WS_BORDER;'
          'end;'
          ''
          'procedure '
          'TFsBorderlessMemo.WMNCCalcSize(var '
          'msgr: TWMNCCalcSize);'
          'begin'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsBorderlessMemo.WMNCPaint'
          '(var msgr: TWMNCPaint);'
          'begin'
          '  msgr.Result := 0;  '
          'end;'
          ''
          'procedure TFsBorderlessMemo.WndProc(var '
          'msgr: TMessage);'
          'var'
          '  vsi1, hsi1, vsi2, hsi2: TScrollInfo;'
          '  style: Integer;'
          '  changed: Boolean;'
          'begin'
          '  if not HandleAllocated or (msgr.Msg = '
          'WM_CREATE) or (msgr.Msg = '
          'WM_NCCREATE)'
          '    or (msgr.Msg = WM_DESTROY) or '
          '(msgr.Msg = WM_NCDESTROY) then'
          '  begin'
          '    inherited;'
          '    Exit;'
          '  end;'
          ''
          '  changed := False;'
          ''
          '  style := GetWindowLong(Self.Handle, '
          'GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi1.cbSize := SizeOf(vsi1);'
          '    vsi1.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi1);'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi1.cbSize := SizeOf(hsi1);'
          '    hsi1.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi1);'
          '  end;'
          '    '
          '  inherited;'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi2.cbSize := SizeOf(vsi2);'
          '    vsi2.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi2);'
          ''
          '    if (vsi1.nMin <> vsi2.nMin) or (vsi1.nMax '
          '<> vsi2.nMax)'
          '      or (vsi1.nPage <> vsi2.nPage) or '
          '(vsi1.nPos <> vsi2.nPos) then'
          '      changed := True;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi2.cbSize := SizeOf(hsi2);'
          '    hsi2.fMask := SIF_RANGE or SIF_PAGE or '
          'SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi2);'
          ''
          '    if (hsi1.nMin <> hsi2.nMin) or (hsi1.nMax '
          '<> hsi2.nMax)'
          '      or (hsi1.nPage <> hsi2.nPage) or '
          '(hsi1.nPos <> hsi2.nPos) then'
          '      changed := True;'
          '  end;'
          ''
          '  if changed and (Self.Parent is TFsMemo) '
          'then'
          '  begin'
          '    TFsMemo'
          '(Self.Parent).AdjustInnerControlBounds;'
          '    Self.Parent.Invalidate;'
          '  end;'
          'end;'
          ''
          'initialization'
          ''
          'finalization'
          '  DefaultScrollBar.Free;'
          '  '
          'end.')
      end
    end
    object TabSheet2: TTabSheet
      Caption = 'ListBox'
      ImageIndex = 1
      object FsListBox1: TFsListBox
        Left = 0
        Top = 0
        Width = 850
        Height = 509
        Align = alClient
        BevelInner = bvNone
        BevelOuter = bvRaised
        BevelKind = bkFlat
        ParentBackground = False
        Items.Strings = (
          'unit FSStdCtrls;'
          ''
          'interface'
          ''
          'uses'
          
            '  SysUtils, Classes, Consts, Windows, Graphics, Controls, Messag' +
            'es, StdCtrls, ExtCtrls,'
          '  FSVclBase, FSGraphics;'
          ''
          'type'
          '  TFsGraphicControl = class(TGraphicControl)'
          '  protected'
          '    procedure GetContentDimension(out dim: TSize); virtual;'
          
            '    function CanAutoSize(var NewWidth, NewHeight: Integer): Bool' +
            'ean; override;'
          '  public'
          '    function CheckAutoSize: Boolean;'
          '    procedure AutoSizeAndInvalidate;'
          '  end;'
          ''
          '  TFsImage = class(TFsGraphicControl)'
          '  private'
          '    FPicture: TFsDrawable;'
          '    procedure PictureChanged(Sender: TObject; ID: TNotifyID);'
          '    procedure SetPicture(const Value: TFsDrawable);'
          '  protected'
          '    procedure GetContentDimension(out dim: TSize); override;'
          '  public'
          '    constructor Create(Owner: TComponent); override;'
          '    destructor Destroy; override;'
          '    procedure Paint; override;'
          '  published'
          
            '    property Picture: TFsDrawable read FPicture write SetPicture' +
            ';'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Enabled;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '  end;'
          ''
          
            '  TFsImageButtonLayout = (blPictureLeft, blPictureRight, blPictu' +
            'reTop, blPictureBottom, blTextInPicture, blTextInStretchPicture)' +
            ';'
          ''
          '  TFsCustomButton = class(TFsGraphicControl)'
          '  private'
          '    FMouseFlag: TMouseFlag;'
          '    FShowCaption: Boolean;'
          '    FLayout: TFsImageButtonLayout;'
          '    FSpace: Integer;'
          '    procedure SetShowCaption(const Value: Boolean);'
          '    procedure SetLayout(const Value: TFsImageButtonLayout);'
          '    procedure SetSpace(const Value: Integer);'
          '    procedure DrawPictureLeft;'
          '    procedure DrawPictureRight;'
          '    procedure DrawPictureTop;'
          '    procedure DrawPictureBottom;'
          '    procedure DrawTextInPicture;'
          '    procedure DrawTextInStretchPicture;'
          '    procedure DrawButtonSurface;'
          '  protected'
          '    procedure DrawImageAndText;'
          '    procedure GetContentDimension(out dim: TSize); override;'
          
            '    procedure MouseDown(Button: TMouseButton; Shift: TShiftState' +
            '; X, Y: Integer); override;'
          
            '    procedure MouseUp(Button: TMouseButton; Shift: TShiftState; ' +
            'X, Y: Integer); override;'
          
            '    procedure CMMouseEnter(var msg: TMessage); message CM_MOUSEE' +
            'NTER;'
          
            '    procedure CMMouseLeave(var msg: TMessage); message CM_MOUSEL' +
            'EAVE;'
          
            '    procedure CMTextChange(var msg: TMessage); message CM_TEXTCH' +
            'ANGED;'
          
            '    procedure CMFontChanged(var msgr: TMessage); message CM_FONT' +
            'CHANGED;'
          '    function PictureIsHorzStretchable: Boolean; virtual;'
          '    function PictureIsVertStretchable: Boolean; virtual;'
          
            '    function GetPictureSize(out width: Integer): Integer; virtua' +
            'l; abstract;'
          '    procedure DrawPicture(const Rect: TRect); virtual; abstract;'
          '    procedure Paint; override;'
          '  public'
          '    constructor Create(Owner: TComponent); override;'
          '  published'
          
            '    property Layout: TFsImageButtonLayout read FLayout write Set' +
            'Layout default blTextInStretchPicture;'
          
            '    property Space: Integer read FSpace write SetSpace default 4' +
            ';'
          
            '    property ShowCaption: Boolean read FShowCaption write SetSho' +
            'wCaption default True;'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Caption;'
          '    property Enabled;'
          '    property Font;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '  end;'
          ''
          '  TFsImageButton = class(TFsCustomButton)'
          '  private'
          '    FPicture: TFsPictureDrawable;'
          '    FDisablePicture: TFsPictureDrawable;'
          '    FMouseOverPicture: TFsPictureDrawable;'
          '    FMouseDownPicture: TFsPictureDrawable;'
          '    procedure PictureChanged(Sender: TObject; ID: TNotifyID);'
          '    procedure SetPicture(const Value: TPicture);'
          '    procedure SetMouseDownPicture(const Value: TPicture);'
          '    procedure SetMouseOverPicture(const Value: TPicture);'
          '    procedure SetDisablePicture(const Value: TPicture);'
          '    function GetDisablePicture: TPicture;'
          '    function GetMouseDownPicture: TPicture;'
          '    function GetMouseOverPicture: TPicture;'
          '    function GetPicture: TPicture;'
          '    function GetDrawable: TFsSingleDrawable;'
          '  protected'
          
            '    function GetPictureSize(out width: Integer): Integer; overri' +
            'de;'
          '    procedure DrawPicture(const Rect: TRect); override;'
          '  public'
          '    constructor Create(Owner: TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property Picture: TPicture read GetPicture write SetPicture;'
          
            '    property DisablePicture: TPicture read GetDisablePicture wri' +
            'te SetDisablePicture;'
          
            '    property MouseOverPicture: TPicture read GetMouseOverPicture' +
            ' write SetMouseOverPicture;'
          
            '    property MouseDownPicture: TPicture read GetMouseDownPicture' +
            ' write SetMouseDownPicture;'
          '  end;'
          ''
          '  TFsCoverButton = class(TFsCustomButton)'
          '  private'
          '    FPicture: TPicture;'
          '    FHoverCover: TFsDrawable;'
          '    fDownCover: TFsDrawable;'
          '    procedure SetPicture(const Value: TPicture);'
          '    procedure SetDownCover(const Value: TFsDrawable);'
          '    procedure SetHoverCover(const Value: TFsDrawable);'
          '    function GetCover: TFsDrawable;'
          '  protected'
          '    procedure PictureChanged(Sender: TObject);'
          
            '    procedure LinkedPictureChanged(Sender: TObject; ID: TNotifyI' +
            'D);'
          
            '    function GetPictureSize(out width: Integer): Integer; overri' +
            'de;'
          '    procedure DrawPicture(const Rect: TRect); override;'
          '    procedure Paint; override;'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          '    property Picture: TPicture read FPicture write SetPicture;'
          
            '    property HoverCover: TFsDrawable read FHoverCover write SetH' +
            'overCover;'
          
            '    property DownCover: TFsDrawable read fDownCover write SetDow' +
            'nCover;'
          '  end;'
          ''
          '  TFsSkinButton = class(TFsCustomButton)'
          '  '
          '  end;'
          ''
          '  TFsCustomScrollBar = class(TComponent)'
          '  private'
          '    FVScrollWidth: Integer;'
          '    FHScrollHeight: Integer;'
          '    FVArrowHeight: Integer;'
          '    FHArrowWidth: Integer;'
          '    FMinThumbLength: Integer;'
          '    procedure SetHScrollHeight(const Value: Integer);'
          '    procedure SetVScrollWidth(const Value: Integer);'
          '    procedure SetHArrowWidth(const Value: Integer);'
          '    procedure SetVArrowHeight(const Value: Integer);'
          '    procedure SetMinThumbLength(const Value: Integer);'
          '  protected'
          '    procedure Changed;'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          
            '    procedure CalcVScroll(const rc: TRect; const si: TScrollInfo' +
            '; var rcTopArrow, rcBottomArrow, rcThumb: TRect);'
          
            '    procedure CalcHScroll(const rc: TRect; const si: TScrollInfo' +
            '; var rcLeftArrow, rcRightArrow, rcThumb: TRect);'
          
            '    function CalcVPos(const rc: TRect; const si: TScrollInfo; Y:' +
            ' Integer): Integer;'
          
            '    function CalcHPos(const rc: TRect; const si: TScrollInfo; Y:' +
            ' Integer): Integer;'
          
            '    procedure DrawVScroll(dc: HDC; const rc, rcTopArrow, rcBotto' +
            'mArrow, rcThumb: TRect); virtual; abstract;'
          
            '    procedure DrawHScroll(dc: HDC; const rc, rcLeftArrow, rcRigh' +
            'tArrow, rcThumb: TRect); virtual; abstract;'
          
            '    procedure DrawIntersect(dc: HDC; const rc: TRect); virtual; ' +
            'abstract;'
          
            '    property HScrollHeight: Integer read FHScrollHeight write Se' +
            'tHScrollHeight;'
          
            '    property VScrollWidth: Integer read FVScrollWidth write SetV' +
            'ScrollWidth;'
          
            '    property VArrowHeight: Integer read FVArrowHeight write SetV' +
            'ArrowHeight;'
          
            '    property HHArrowWidth: Integer read FHArrowWidth write SetHA' +
            'rrowWidth;'
          
            '    property MinThumbLength: Integer read FMinThumbLength write ' +
            'SetMinThumbLength;'
          '  end;'
          ''
          '  TFsFlatScrollBar = class(TFsCustomScrollBar)'
          '  private'
          
            '    procedure DrawUpArrow(dc: HDC; const rc: TRect; h, bw: Integ' +
            'er);'
          
            '    procedure DrawDownArrow(dc: HDC; const rc: TRect; h, bw: Int' +
            'eger);'
          
            '    procedure DrawLeftArrow(dc: HDC; const rc: TRect; h, bw: Int' +
            'eger);'
          
            '    procedure DrawRightArrow(dc: HDC; const rc: TRect; h, bw: In' +
            'teger);'
          '  public'
          
            '    procedure DrawVScroll(dc: HDC; const rc, rcTopArrow, rcBotto' +
            'mArrow, rcThumb: TRect); override;'
          
            '    procedure DrawHScroll(dc: HDC; const rc, rcLeftArrow, rcRigh' +
            'tArrow, rcThumb: TRect); override;'
          '    procedure DrawIntersect(dc: HDC; const rc: TRect); override;'
          '  end;'
          ''
          '  TFsScrollInfo = record'
          '    ShowVScroll: Boolean;'
          '    ShowHScroll: Boolean;'
          '    VScroll: TRect;'
          '    TopArrow: TRect;'
          '    BottomArrow: TRect;'
          '    VThumb: TRect;'
          '    HScroll: TRect;'
          '    LeftArrow: TRect;'
          '    RightArrow: TRect;'
          '    HThumb: TRect;'
          '    Intersect: TRect;'
          '  end;'
          ''
          
            '  TScrollHitTest = (shtNoWhere, shtBorder, shtLeftArrow, shtRigh' +
            'tArrow, shtHorzThumb, shtPageLeft, shtPageRight,'
          
            '    shtTopArrow, shtBottomArrow, shtVertThumb, shtPageUp, shtPag' +
            'eDown);'
          ''
          '  TFsScrollContainer = class(TCustomControl)'
          '  private'
          '    FTimer: TTimer;'
          '    FCaptureRegion: TScrollHitTest;'
          '    FCapturePoint: TPoint;'
          '    FScrollBarDrawer: TFsCustomScrollBar;'
          '    FRealControl: TControl;'
          
            '    procedure SetScrollBarDrawer(const Value: TFsCustomScrollBar' +
            ');'
          '    function GetRealScrollBar: TFsCustomScrollBar;'
          '    function NeedScrollBar(out HScroll: Boolean): Boolean;'
          
            '    procedure GetScrollInfo(var fsi: TFsScrollInfo; var vsi, hsi' +
            ': TScrollInfo);'
          '    procedure OnTimer(Sender: TObject);'
          
            '    function ControlMessage(msg: DWORD; wparam, lparam: Integer)' +
            ': Integer;'
          '  protected'
          '    FMouseInControl: Boolean;'
          '    procedure WMSize(var msgr: TWMSize); message WM_SIZE;'
          
            '    procedure CMMouseEnter(var msgr: TMessage); message CM_MOUSE' +
            'ENTER;'
          
            '    procedure CMMouseLeave(var msgr: TMessage); message CM_MOUSE' +
            'LEAVE;'
          
            '    procedure MouseDown(Button: TMouseButton; Shift: TShiftState' +
            '; X, Y: Integer); override;'
          
            '    procedure MouseUp(Button: TMouseButton; Shift: TShiftState; ' +
            'X, Y: Integer); override;'
          
            '    procedure MouseMove(Shift: TShiftState; X, Y: Integer); over' +
            'ride;'
          '    procedure CreateParams(var Params: TCreateParams); override;'
          '    procedure Paint; override;'
          ''
          
            '    function GetControlScrollInfo(var si: TScrollInfo; isVert: B' +
            'oolean): Boolean; virtual;'
          '    function CreateRealControl: TControl; virtual; abstract;'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          '    destructor Destroy; override;'
          '    procedure AdjustInnerControlBounds;'
          '    function HitTest(X, Y: Integer): TScrollHitTest; '
          '    property Canvas;'
          '    property RealControl: TControl read FRealControl;'
          '  published'
          '    property Align;'
          '    property Anchors;'
          
            '    property ScrollBarDrawer: TFsCustomScrollBar read FScrollBar' +
            'Drawer write SetScrollBarDrawer;'
          '  end;'
          ''
          '  TFsMemo = class(TFsScrollContainer)'
          '  private'
          '    function GetScrollBars: TScrollStyle;'
          '    procedure SetScrollBars(const Value: TScrollStyle);'
          '    function GetLines: TStrings;'
          '    procedure SetLines(const Value: TStrings);'
          '  protected'
          '    function CreateRealControl: TControl; override;'
          '  published'
          
            '    property ScrollBars: TScrollStyle read GetScrollBars write S' +
            'etScrollBars;'
          '    property Lines: TStrings read GetLines write SetLines;'
          '  end;'
          ''
          '  TFsListBox = class(TFsScrollContainer)'
          '  private'
          '    function GetItems: TStrings;'
          '    procedure SetItems(const Value: TStrings);'
          '  protected'
          '    function CreateRealControl: TControl; override;'
          '  published'
          '    property Items: TStrings read GetItems write SetItems;'
          '  end;'
          '  '
          '  TFsEdit = class(TCustomEdit)'
          '  private'
          '    FMouseInBorderColor: TColor;'
          '    procedure SetMouseInBorderColor(const Value: TColor);'
          '  protected'
          '    FMouseIn: Boolean;'
          
            '    procedure CMMouseEnter(var msg: TMessage); message CM_MOUSEE' +
            'NTER;'
          
            '    procedure CMMouseLeave(var msg: TMessage); message CM_MOUSEL' +
            'EAVE;'
          
            '    procedure WMNCPAINT(var msg: TWMNCPaint); message WM_NCPAINT' +
            ';'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          '  published'
          
            '    property MouseInBorderColor: TColor read FMouseInBorderColor' +
            ' write SetMouseInBorderColor;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSelect;'
          '    property AutoSize;'
          '    property BevelEdges;'
          '    property BevelInner;'
          '    property BevelKind default bkNone;'
          '    property BevelOuter;'
          '    property BevelWidth;'
          '    property BiDiMode;'
          '    property BorderStyle;'
          '    property CharCase;'
          '    property Color;'
          '    property Constraints;'
          '    property Ctl3D;'
          '    property DoubleBuffered;'
          '    property DragCursor;'
          '    property DragKind;'
          '    property DragMode;'
          '    property Enabled;'
          '    property Font;'
          '    property HideSelection;'
          '    property ImeMode;'
          '    property ImeName;'
          '    property MaxLength;'
          '    property OEMConvert;'
          '    property ParentBiDiMode;'
          '    property ParentColor;'
          '    property ParentCtl3D;'
          '    property ParentFont;'
          '    property ParentShowHint;'
          '    property PasswordChar;'
          '    property PopupMenu;'
          '    property ReadOnly;'
          '    property ShowHint;'
          '    property TabOrder;'
          '    property TabStop;'
          '    property Text;'
          '    property Visible;'
          '    property OnChange;'
          '    property OnClick;'
          '    property OnContextPopup;'
          '    property OnDblClick;'
          '    property OnDragDrop;'
          '    property OnDragOver;'
          '    property OnEndDock;'
          '    property OnEndDrag;'
          '    property OnEnter;'
          '    property OnExit;'
          '    property OnKeyDown;'
          '    property OnKeyPress;'
          '    property OnKeyUp;'
          '    property OnMouseActivate;'
          '    property OnMouseDown;'
          '    property OnMouseEnter;'
          '    property OnMouseLeave;'
          '    property OnMouseMove;'
          '    property OnMouseUp;'
          '    property OnStartDock;'
          '    property OnStartDrag;'
          '  end;'
          ''
          '  TFsButtonEdit = class(TFsEdit)'
          '  private'
          '    FOnClickButton: TNotifyEvent;'
          '    FButtonPicture: TPicture;'
          '    procedure WriteButtonPicture(const Value: TPicture);'
          '  protected'
          '    FNCCanvas: TCanvas;'
          
            '    procedure WMNCPAINT(var msgr: TWMNCPaint); message WM_NCPAIN' +
            'T;'
          
            '    procedure WMNCLButtonDown(var msgr: TWMNCLButtonDown); messa' +
            'ge WM_NCLBUTTONDOWN;'
          
            '    procedure WMNCHitTest(var msgr: TWMNCHitTest); message WM_NC' +
            'HITTEST;'
          
            '    procedure WMNCCalcSize(var msgr: TWMNCCalcSize); message WM_' +
            'NCCALCSIZE;'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          
            '    property ButtonPicture: TPicture read FButtonPicture write W' +
            'riteButtonPicture;'
          
            '    property OnClickButton: TNotifyEvent read FOnClickButton wri' +
            'te FOnClickButton;'
          '  end;'
          ''
          '  TFsNCScrollMemo = class(TCustomMemo)'
          '  private'
          '    FMouseInBorderColor: TColor;'
          '    FMouseIn: Boolean;'
          '    FScrollBar: TFsCustomScrollBar;'
          '    procedure PaintNC;'
          
            '    procedure CMMouseEnter(var msg: TMessage); message CM_MOUSEE' +
            'NTER;'
          
            '    procedure CMMouseLeave(var msg: TMessage); message CM_MOUSEL' +
            'EAVE;'
          
            '    procedure WMNCPAINT(var msgr: TWMNCPaint); message WM_NCPAIN' +
            'T;'
          
            '    procedure WMNCCalcSize(var msgr: TWMNCCalcSize); message WM_' +
            'NCCALCSIZE;'
          
            '    procedure WMNCHitTest(var msgr: TWMNCHitTest); message WM_NC' +
            'HITTEST;'
          
            '    procedure WMNCLButtonDown(var msgr: TWMNCLButtonDown); messa' +
            'ge WM_NCLBUTTONDOWN;'
          '    procedure SetMouseInBorderColor(const Value: TColor);'
          '    procedure SetScrollBar(const Value: TFsCustomScrollBar);'
          '    function GetRealScrollBar: TFsCustomScrollBar;'
          '  protected'
          
            '    procedure GetScrollRect(var rcVScroll, rcHScroll, rcIntersec' +
            't: TRect);'
          '    function GetVScrollRect(var rc: TRect): Boolean;'
          '    function GetHScrollRect(var rc: TRect): Boolean;'
          '    procedure WndProc(var msgr: TMessage); override;'
          
            '    procedure Notification(AComponent: TComponent; Operation: TO' +
            'peration); override;'
          '  public'
          '    constructor Create(AOwner: TComponent); override;'
          '  published'
          
            '    property ScrollBar: TFsCustomScrollBar read FScrollBar write' +
            ' SetScrollBar;'
          
            '    property MouseInBorderColor: TColor read FMouseInBorderColor' +
            ' write SetMouseInBorderColor;'
          '    property Align;'
          '    property Alignment;'
          '    property Anchors;'
          '    property BevelEdges;'
          '    property BevelInner;'
          '    property BevelKind default bkNone;'
          '    property BevelOuter;'
          '    property BiDiMode;'
          '    property BorderStyle;'
          '    property Color;'
          '    property Constraints;'
          '    property Ctl3D;'
          '    property DragCursor;'
          '    property DragKind;'
          '    property DragMode;'
          '    property Enabled;'
          '    property Font;'
          '    property HideSelection;'
          '    property ImeMode;'
          '    property ImeName;'
          '    property Lines;'
          '    property MaxLength;'
          '    property OEMConvert;'
          '    property ParentBiDiMode;'
          '    property ParentColor;'
          '    property ParentCtl3D;'
          '    property ParentFont;'
          '    property ParentShowHint;'
          '    property PopupMenu;'
          '    property ReadOnly;'
          '    property ScrollBars;'
          '    property ShowHint;'
          '    property TabOrder;'
          '    property TabStop;'
          '    property Visible;'
          '    property WantReturns;'
          '    property WantTabs;'
          '    property WordWrap;'
          '    property OnChange;'
          '    property OnClick;'
          '    property OnContextPopup;'
          '    property OnDblClick;'
          '    property OnDragDrop;'
          '    property OnDragOver;'
          '    property OnEndDock;'
          '    property OnEndDrag;'
          '    property OnEnter;'
          '    property OnExit;'
          '    property OnKeyDown;'
          '    property OnKeyPress;'
          '    property OnKeyUp;'
          '    property OnMouseActivate;'
          '    property OnMouseDown;'
          '    property OnMouseEnter;'
          '    property OnMouseLeave;'
          '    property OnMouseMove;'
          '    property OnMouseUp;'
          '    property OnStartDock;'
          '    property OnStartDrag;'
          '  end;'
          ''
          '  TFsBorderlessMemo = class(TCustomMemo)'
          '  protected'
          '    procedure WndProc(var msgr: TMessage); override;'
          
            '    procedure WMNCCalcSize(var msgr: TWMNCCalcSize); message WM_' +
            'NCCALCSIZE;'
          
            '    procedure WMNCPaint(var msgr: TWMNCPaint); message WM_NCPAIN' +
            'T;'
          '  end;'
          ''
          '  TFsBorderlessListBox = class(TCustomListBox)'
          '  protected'
          '    procedure WndProc(var msgr: TMessage); override;'
          
            '    procedure WMNCCalcSize(var msgr: TWMNCCalcSize); message WM_' +
            'NCCALCSIZE;'
          
            '    procedure WMNCPaint(var msgr: TWMNCPaint); message WM_NCPAIN' +
            'T;'
          '  end;'
          ''
          '  TFsCustomCheckBox = class(TFsGraphicControl)'
          '  private'
          '    FChecked: Boolean;'
          '    FSpace: Integer;'
          '    procedure SetChecked(const Value: Boolean);'
          '    procedure SetSpace(const Value: Integer);'
          '  protected'
          
            '    procedure CMTextChange(var msg: TMessage); message CM_TEXTCH' +
            'ANGED;'
          
            '    procedure CMFontChange(var msg: TMessage); message CM_FONTCH' +
            'ANGED;'
          '    procedure GetImageSize(out w, h: Integer); virtual;'
          '    procedure DrawMark(const Rect: TRect); virtual; abstract;'
          '    procedure Paint; override;'
          
            '    procedure MouseDown(Button: TMouseButton; Shift: TShiftState' +
            '; X, Y: Integer); override;'
          '    procedure GetContentDimension(out dim: TSize); override;'
          '  public'
          '    constructor Create(Owner: TComponent); override;'
          '  published'
          '    property Action;'
          '    property Align;'
          '    property Anchors;'
          '    property AutoSize;'
          '    property Enabled;'
          '    property Font;'
          '    property Hint;'
          '    property ShowHint;'
          '    property Visible;'
          '    property OnClick;'
          '    property Caption;'
          '    property Checked: Boolean read FChecked write SetChecked;'
          '    property Space: Integer read FSpace write SetSpace;'
          '  end;'
          ''
          '  TFsCheckBox = class(TFsCustomCheckBox)'
          '  private'
          '    FCheckedPicture: TFsPictureDrawable;'
          '    FUnCheckedPicture: TFsPictureDrawable;'
          '    procedure SetCheckedPicture(const Value: TPicture);'
          '    procedure SetUnCheckedPicture(const Value: TPicture);'
          '    function GetCheckedPicture: TPicture;'
          '    function GetUnCheckedPicture: TPicture;'
          '    procedure PictureChanged(Sender: TObject; ID: TNotifyID);'
          '  protected'
          '    procedure GetImageSize(out w, h: Integer); override;'
          '    procedure DrawMark(const Rect: TRect); override;'
          '  public'
          '    constructor Create(Owner: TComponent); override;'
          '    destructor Destroy; override;'
          '  published'
          
            '    property CheckedPicture: TPicture read GetCheckedPicture wri' +
            'te SetCheckedPicture;'
          
            '    property UnCheckedPicture: TPicture read GetUnCheckedPicture' +
            ' write SetUnCheckedPicture;'
          '  end;'
          ''
          '  TFsSkinCheckBox = class(TFsCustomCheckBox)'
          '  '
          '  end;'
          ''
          'function GetDefaultScrollBar: TFsCustomScrollBar;'
          ''
          'implementation'
          ''
          'type'
          '  TControlHack = class(TControl)'
          '  '
          '  end;'
          ''
          'var'
          '  DefaultScrollBar: TFsCustomScrollBar;'
          ''
          'function GetDefaultScrollBar: TFsCustomScrollBar;'
          'begin'
          '  if not Assigned(DefaultScrollBar) then'
          '    DefaultScrollBar := TFsFlatScrollBar.Create(nil);'
          ''
          '  Result := DefaultScrollBar;'
          'end;'
          ''
          '{ TFsCustomButton }'
          ''
          'procedure TFsCustomButton.CMFontChanged(var msgr: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.CMMouseEnter(var msg: TMessage);'
          'begin'
          '  inherited;'
          ''
          '  Include(FMouseFlag, mfMouseOver);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.CMMouseLeave(var msg: TMessage);'
          'begin'
          '  inherited;'
          ''
          '  Exclude(FMouseFlag, mfMouseOver);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.CMTextChange(var msg: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'constructor TFsCustomButton.Create(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  ControlStyle := ControlStyle + [csReplicatable, csPannable];'
          '  FSpace := 4;'
          '  FShowCaption := True;'
          '  FLayout := blTextInStretchPicture;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawButtonSurface;'
          'var'
          '  flags: DWORD;'
          'begin'
          '  flags := DFCS_BUTTONPUSH;'
          ''
          '  if mfLButtonDown in Self.FMouseFlag then'
          '    flags := flags or DFCS_PUSHED;'
          ''
          
            '  Windows.DrawFrameControl(Self.Canvas.Handle, Rect(0, 0, Self.W' +
            'idth, Self.Height),'
          '    DFC_BUTTON, flags);'
          'end;'
          ''
          'procedure TFsCustomButton.DrawImageAndText;'
          'var'
          '  w: Integer;'
          'begin'
          '  Self.GetPictureSize(w);'
          '  '
          '  if w = 0 then Self.DrawButtonSurface;'
          ''
          '  case Self.FLayout of'
          '    blPictureLeft: Self.DrawPictureLeft;'
          '    blPictureRight: Self.DrawPictureRight;'
          '    blPictureTop: Self.DrawPictureTop;'
          '    blPictureBottom: Self.DrawPictureBottom;'
          '    blTextInPicture: Self.DrawTextInPicture;'
          '    blTextInStretchPicture: Self.DrawTextInStretchPicture;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawPictureBottom;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  dim: TSize;'
          '  w, h: Integer;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Bottom := Self.Height - (Self.Height - dim.cy) div 2;'
          '    rpic.Top := rpic.Bottom - h;'
          ''
          '    if PictureIsHorzStretchable and (dim.cx > w) then'
          '    begin'
          '      rpic.Left := (Self.Width - dim.cx) div 2;'
          '      rpic.Right := rpic.Left + dim.cx;'
          '    end'
          '    else begin'
          '      rpic.Left := (Self.Width - w) div 2;'
          '      rpic.Right := rpic.Left + w;'
          '    end;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Top := rpic.top - FSpace;'
          '  end'
          '  else rpic.Top := Self.Height - (Self.Height - dim.cy) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := rpic.Top;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := Self.Width - rtext.Left;'
          '    '
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          
            '    Canvas.TextRect(rtext, Text, [tfCenter, tfVerticalCenter, tf' +
            'SingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawPictureLeft;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  dim: TSize;'
          '  w, h: Integer;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Left := (Self.Width - dim.cx) div 2;'
          ''
          '    if PictureIsVertStretchable and (dim.cy > h) then'
          '    begin'
          '      rpic.Top := (Self.Height - dim.cy) div 2;'
          '      rpic.Bottom := rpic.Top + dim.cy;'
          '    end'
          '    else begin'
          '      rpic.Top := (Self.Height - h) div 2;'
          '      rpic.Bottom := rpic.Top + h;'
          '    end;'
          ''
          '    rpic.Right := rpic.Left + w;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Right := rpic.Right + FSpace;'
          '  end'
          '  else rpic.Right := (Self.Width - dim.cx) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Left := rpic.Right;'
          '    rtext.Right := Self.Width - (Self.Width - dim.cx) div 2;'
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := Self.Height - (Self.Height - dim.cy) div 2;'
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          
            '    Canvas.TextRect(rtext, Text, [tfCenter, tfVerticalCenter, tf' +
            'SingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawPictureRight;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          '  '
          '  if w > 0 then'
          '  begin'
          '    rpic.Right := Self.Width - (Self.Width - dim.cx) div 2;'
          ''
          '    if PictureIsVertStretchable and (dim.cy > h) then'
          '    begin'
          '      rpic.Top := (Self.Height - dim.cy) div 2;'
          '      rpic.Bottom := rpic.Top + dim.cy;'
          '    end'
          '    else begin'
          '      rpic.Top := (Self.Height - h) div 2;'
          '      rpic.Bottom := rpic.Top + h;'
          '    end;'
          ''
          '    rpic.Left := rpic.Right - w;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Left := rpic.Left - FSpace;'
          '  end'
          '  else rpic.Left := Self.Width - (Self.Width - dim.cx) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := rpic.Left;'
          '    rtext.Top := (Self.Height - dim.cy) div 2;'
          '    rtext.Bottom := Self.Height - (Self.Height - dim.cy) div 2;'
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          
            '    Canvas.TextRect(rtext, Text, [tfCenter, tfVerticalCenter, tf' +
            'SingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawPictureTop;'
          'var'
          '  Text: string;'
          '  rtext, rpic: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    rpic.Top := (Self.Height - dim.cy) div 2;'
          '    rpic.Bottom := rpic.Top + h;'
          ''
          '    if PictureIsHorzStretchable and (dim.cx > w) then'
          '    begin'
          '      rpic.Left := (Self.Width - dim.cx) div 2;'
          '      rpic.Right := rpic.Left + dim.cx;'
          '    end'
          '    else begin'
          '      rpic.Left := (Self.Width - w) div 2;'
          '      rpic.Right := rpic.Left + w;'
          '    end;'
          ''
          '    Self.DrawPicture(rpic);'
          ''
          '    rpic.Bottom := rpic.Bottom + FSpace;'
          '  end'
          '  else rpic.Bottom := (Self.Height - dim.cy) div 2;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') then'
          '  begin'
          '    Text := Self.Caption;'
          ''
          '    rtext.Top := rpic.Bottom;'
          '    rtext.Bottom := Self.Height - (Self.Height - dim.cy) div 2;'
          ''
          '    rtext.Left := (Self.Width - dim.cx) div 2;'
          '    rtext.Right := Self.Width - rtext.Left;'
          '    '
          '    Canvas.Font := Self.Font;'
          '    Canvas.Brush.Style := bsClear;'
          
            '    Canvas.TextRect(rtext, Text, [tfCenter, tfVerticalCenter, tf' +
            'SingleLine]);'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawTextInPicture;'
          'var'
          '  Text: string;'
          '  r: TRect;'
          '  w, h: Integer;'
          '  dim: TSize;'
          'begin'
          '  Self.GetContentDimension(dim);'
          ''
          '  h := Self.GetPictureSize(w);'
          ''
          '  if w > 0 then'
          '  begin'
          '    if PictureIsHorzStretchable and (w < dim.cx) then'
          '      r.Left := (Self.Width - dim.cx) div 2'
          '    else'
          '      r.Left := (Self.Width - w) div 2;'
          ''
          '    r.Right := Self.Width - r.Left;'
          ''
          '    if PictureIsVertStretchable and (h < dim.cy) then'
          '      r.Top := (Self.Height - dim.cy) div 2'
          '    else'
          '      r.Top := (Self.Height - h) div 2;'
          ''
          '    r.Bottom := Self.Height - r.Top;'
          '    '
          '    Self.DrawPicture(r);'
          '  end;'
          ''
          '  if FShowCaption then'
          '  begin'
          '    Text := Caption;'
          ''
          '    if Text <> '#39#39' then'
          '    begin'
          '      r.Left := 0;'
          '      r.Right := Self.Width;'
          '      r.Top := 0;'
          '      r.Bottom := Self.Height;'
          ''
          '      Canvas.Font := Self.Font;'
          '      Canvas.Brush.Style := bsClear;'
          
            '      Canvas.TextRect(r, Text, [tfCenter, tfVerticalCenter, tfSi' +
            'ngleLine]);'
          '    end;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.DrawTextInStretchPicture;'
          'var'
          '  Text: string;'
          '  r: TRect;'
          '  w: Integer;'
          'begin'
          '  r.Left := 0;'
          '  r.Right := Self.Width;'
          '  r.Top := 0;'
          '  r.Bottom := Self.Height;'
          ''
          '  Self.GetPictureSize(w);'
          ''
          '  if w > 0 then Self.DrawPicture(r);'
          ''
          '  if FShowCaption then'
          '  begin'
          '    Text := Caption;'
          ''
          '    if Text <> '#39#39' then'
          '    begin'
          '      Canvas.Font := Self.Font;'
          '      Canvas.Brush.Style := bsClear;'
          
            '      Canvas.TextRect(r, Text, [tfCenter, tfVerticalCenter, tfSi' +
            'ngleLine]);'
          '    end;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.GetContentDimension(out dim: TSize);'
          'var'
          '  TextSize: TSize;'
          '  ImageSize: TSize;'
          'begin'
          '  dim.cx := 0;'
          '  dim.cy := 0;'
          ''
          '  if FShowCaption and (Self.Caption <> '#39#39') then'
          '  begin'
          '    Self.Canvas.Font := Self.Font;'
          '    TextSize := Self.Canvas.TextExtent(Self.Caption);'
          '  end'
          '  else begin'
          '    TextSize.cx := 0;'
          '    TextSize.cy := 0;'
          '  end;'
          ''
          '  ImageSize.cy := Self.GetPictureSize(ImageSize.cx);'
          ''
          '  if (ImageSize.cx = 0) and (TextSize.cx = 0) then Exit;'
          ''
          '  case FLayout of'
          '    blPictureLeft, blPictureRight:'
          '      begin'
          '        if ImageSize.cx > 0 then'
          '        begin'
          
            '          if TextSize.cx > 0 then dim.cx := ImageSize.cx + FSpac' +
            'e + TextSize.cx'
          '          else dim.cx := ImageSize.cx;'
          '        end'
          '        else begin'
          '          if TextSize.cx > 0 then dim.cx := TextSize.cx'
          '          else dim.cx := 0;'
          '        end;'
          ''
          '        if TextSize.cy > ImageSize.cy then dim.cy := TextSize.cy'
          '        else dim.cy := ImageSize.cy;'
          '      end;'
          ''
          '    blPictureTop, blPictureBottom:'
          '      begin'
          '        if ImageSize.cy > 0 then'
          '        begin'
          
            '          if TextSize.cy > 0 then dim.cy := ImageSize.cy + FSpac' +
            'e + TextSize.cy'
          '          else dim.cy := ImageSize.cy;'
          '        end'
          '        else begin'
          '          if TextSize.cy > 0 then dim.cy := TextSize.cy'
          '          else dim.cy := 0;'
          '        end;'
          ''
          '        if TextSize.cx > ImageSize.cx then dim.cx := TextSize.cx'
          '        else dim.cx := ImageSize.cx;'
          '      end;'
          ''
          '    blTextInPicture, blTextInStretchPicture:'
          '      begin'
          '        if TextSize.cx > ImageSize.cx then dim.cx := TextSize.cx'
          '        else dim.cx := ImageSize.cx;'
          ''
          '        if TextSize.cy > ImageSize.cy then dim.cy := TextSize.cy'
          '        else dim.cy := ImageSize.cy;'
          '      end;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCustomButton.MouseDown(Button: TMouseButton; Shift:' +
            ' TShiftState; X, Y: Integer);'
          'begin'
          '  inherited;'
          ''
          '  if Button = mbLeft then Include(FMouseFlag, mfLButtonDown);'
          ''
          '  if Button = mbRight then Include(FMouseFlag, mfRButtonDown);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          
            'procedure TFsCustomButton.MouseUp(Button: TMouseButton; Shift: T' +
            'ShiftState; X, Y: Integer);'
          'begin'
          '  inherited;'
          '  '
          '  if Button = mbLeft then Exclude(FMouseFlag, mfLButtonDown);'
          ''
          '  if Button = mbRight then Exclude(FMouseFlag, mfRButtonDown);'
          ''
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomButton.Paint;'
          'begin'
          '  Self.DrawImageAndText;'
          'end;'
          ''
          'function TFsCustomButton.PictureIsHorzStretchable: Boolean;'
          'begin'
          '  Result := False;'
          'end;'
          ''
          'function TFsCustomButton.PictureIsVertStretchable: Boolean;'
          'begin'
          '  Result := False;'
          'end;'
          ''
          
            'procedure TFsCustomButton.SetLayout(const Value: TFsImageButtonL' +
            'ayout);'
          'begin'
          '  if FLayout <> Value then'
          '  begin'
          '    FLayout := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.SetSpace(const Value: Integer);'
          'begin'
          '  if (FSpace <> Value) and (Value >= 0) then'
          '  begin'
          '    FSpace := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomButton.SetShowCaption(const Value: Boolean);'
          'begin'
          '  if FShowCaption <> Value then'
          '  begin'
          '    FShowCaption := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsImageButton }'
          ''
          'constructor TFsImageButton.Create(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  FPicture := TFsPictureDrawable.Create(Self);'
          '  FDisablePicture := TFsPictureDrawable.Create(Self);'
          '  FMouseOverPicture := TFsPictureDrawable.Create(Self);'
          '  FMouseDownPicture := TFsPictureDrawable.Create(Self);'
          '  FPicture.AddOnChangeListener(Self.PictureChanged);'
          '  FDisablePicture.AddOnChangeListener(Self.PictureChanged);'
          '  FMouseOverPicture.AddOnChangeListener(Self.PictureChanged);'
          '  FMouseDownPicture.AddOnChangeListener(Self.PictureChanged);'
          'end;'
          ''
          'destructor TFsImageButton.Destroy;'
          'begin'
          '  FPicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  FDisablePicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  FMouseOverPicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  FMouseDownPicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsImageButton.DrawPicture(const Rect: TRect);'
          'var'
          '  drawable: TFsSingleDrawable;'
          'begin'
          '  drawable := Self.GetDrawable;'
          ''
          '  if Assigned(drawable) then'
          '    drawable.Draw(Self.Canvas, Rect);'
          'end;'
          ''
          'function TFsImageButton.GetDisablePicture: TPicture;'
          'begin'
          '  Result := FDisablePicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetDrawable: TFsSingleDrawable;'
          'begin'
          '  if not Self.Enabled then Result := FDisablePicture'
          
            '  else if mfLButtonDown in FMouseFlag then Result := FMouseDownP' +
            'icture'
          
            '  else if mfMouseOver in FMouseFlag then Result := FMouseOverPic' +
            'ture'
          '  else Result := FPicture;'
          ''
          '  if Result.Empty then'
          '    Result := FPicture;'
          'end;'
          ''
          'function TFsImageButton.GetMouseDownPicture: TPicture;'
          'begin'
          '  Result := FMouseDownPicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetMouseOverPicture: TPicture;'
          'begin'
          '  Result := FMouseOverPicture.Picture;'
          'end;'
          ''
          'function TFsImageButton.GetPicture: TPicture;'
          'begin'
          '  Result := FPicture.Picture;'
          'end;'
          ''
          
            'function TFsImageButton.GetPictureSize(out width: Integer): Inte' +
            'ger;'
          'var'
          '  drawable: TFsDrawable;'
          'begin'
          '  drawable := Self.GetDrawable;'
          ''
          '  if Assigned(drawable) and not drawable.Empty then'
          '  begin'
          '    width := drawable.Width;'
          '    Result := drawable.Height;'
          '  end'
          '  else begin'
          '    width := 0;'
          '    Result := 0;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsImageButton.PictureChanged(Sender: TObject; ID: TNo' +
            'tifyID);'
          'begin'
          
            '  if (ID = niChange) and (Sender = GetDrawable) then Self.AutoSi' +
            'zeAndInvalidate;'
          'end;'
          ''
          'procedure TFsImageButton.SetPicture(const Value: TPicture);'
          'begin'
          '  FPicture.Picture.Assign(Value);'
          'end;'
          ''
          
            'procedure TFsImageButton.SetDisablePicture(const Value: TPicture' +
            ');'
          'begin'
          '  FDisablePicture.Picture.Assign(Value);'
          'end;'
          ''
          
            'procedure TFsImageButton.SetMouseDownPicture(const Value: TPictu' +
            're);'
          'begin'
          '  FMouseDownPicture.Picture.Assign(Value);'
          'end;'
          ''
          
            'procedure TFsImageButton.SetMouseOverPicture(const Value: TPictu' +
            're);'
          'begin'
          '  FMouseOverPicture.Picture.Assign(Value);'
          'end;'
          ''
          '{ TFsImage }'
          ''
          'constructor TFsImage.Create(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  ControlStyle := ControlStyle + [csReplicatable, csPannable];'
          '  Self.SetBounds(Left, Top, 100, 100);'
          'end;'
          ''
          'destructor TFsImage.Destroy;'
          'begin'
          '  SetPicture(nil);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsImage.GetContentDimension(out dim: TSize);'
          'begin'
          '  if Assigned(FPicture) then'
          '  begin'
          '    dim.cx := FPicture.Width;'
          '    dim.cy := FPicture.Height;'
          '  end'
          '  else begin'
          '    dim.cx := 0;'
          '    dim.cy := 0;'
          '  end;'
          'end;'
          ''
          'procedure TFsImage.Paint;'
          'var'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  r := Rect(0, 0, Width, Height);'
          ''
          '  if Assigned(FPicture) and not FPicture.Empty then'
          '  begin'
          '    if FPicture is TFsSingleDrawable then'
          '      TFsSingleDrawable(FPicture).Draw(Canvas, r)'
          '    else'
          
            '      TFsMultiFrameDrawable(FPicture).DrawFrame(Canvas.Handle, r' +
            ', 0);'
          '  end;'
          ''
          '  if csDesigning in ComponentState then'
          '  begin'
          '    Canvas.Pen.Style := psDash;'
          '    Canvas.Brush.Style := bsClear;'
          '    Canvas.Rectangle(0, 0, Width, Height);'
          '  end;'
          'end;'
          ''
          
            'procedure TFsImage.PictureChanged(Sender: TObject; ID: TNotifyID' +
            ');'
          'begin'
          '  if ID = niDestroy then'
          '  begin'
          '    if Sender = FPicture then'
          '    begin'
          '      FPicture := nil;'
          '      Self.AutoSizeAndInvalidate;'
          '    end;'
          '  end'
          '  else if ID = niChange then'
          '  begin'
          '    if Sender = FPicture then Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsImage.SetPicture(const Value: TFsDrawable);'
          'begin'
          '  if FPicture <> Value then'
          '  begin'
          '    if Assigned(FPicture) then'
          '      FPicture.RemoveOnChangeListener(Self.PictureChanged);'
          ''
          '    FPicture := Value;'
          ''
          '    if Assigned(FPicture) then'
          '      FPicture.AddOnChangeListener(Self.PictureChanged);'
          '      '
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsEdit }'
          ''
          'procedure TFsEdit.CMMouseEnter(var msg: TMessage);'
          'begin'
          '  FMouseIn := True;'
          '  inherited;'
          'end;'
          ''
          'procedure TFsEdit.CMMouseLeave(var msg: TMessage);'
          'begin'
          '  FMouseIn := False;'
          '  inherited;'
          'end;'
          ''
          'constructor TFsEdit.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FMouseInBorderColor := RGB(123, 228, 255);'
          'end;'
          ''
          'procedure TFsEdit.SetMouseInBorderColor(const Value: TColor);'
          'begin'
          '  if FMouseInBorderColor <> Value then'
          '  begin'
          '    FMouseInBorderColor := Value;'
          '    Self.Invalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsEdit.WMNCPAINT(var msg: TWMNCPaint);'
          'var'
          '  dc: HDC;'
          '  hb: HBRUSH;'
          '  bgc: DWORD;'
          'begin'
          '  dc := GetWindowDC(Handle);'
          ''
          '  try    '
          '    if FMouseIn then bgc := ColorToRGB(FMouseInBorderColor)'
          '    else bgc := RGB(78, 160, 209);'
          '    '
          '    hb := CreateSolidBrush(bgc);'
          
            '    Windows.FrameRect(dc, Rect(0, 0, Self.Width, Self.Height), h' +
            'b);'
          '    DeleteObject(hb);'
          ''
          '    if FMouseIn then bgc := RGB(78, 160, 209)'
          '    else bgc := ColorToRGB(Self.Color);'
          '    '
          '    hb := CreateSolidBrush(bgc);'
          
            '    Windows.FrameRect(dc, Rect(1, 1, Self.Width - 1, Self.Height' +
            ' - 1), hb);'
          '    DeleteObject(hb);'
          '  finally'
          '    ReleaseDC(Handle, dc);'
          '  end;'
          'end;'
          ''
          '{ TFsCustomCheckBox }'
          ''
          'procedure TFsCustomCheckBox.CMFontChange(var msg: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.CMTextChange(var msg: TMessage);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'constructor TFsCustomCheckBox.Create(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  FSpace := 4;'
          '  ControlStyle := ControlStyle + [csReplicatable, csPannable];'
          'end;'
          ''
          'procedure TFsCustomCheckBox.GetContentDimension(out dim: TSize);'
          'var'
          '  TextSize: TSize;'
          '  ImageWidth, ImageHeight: Integer;'
          'begin'
          '  Canvas.Font := Self.Font;'
          ''
          '  TextSize := Canvas.TextExtent(Self.Caption);'
          ''
          '  Self.GetImageSize(ImageWidth, ImageHeight);'
          ''
          '  if ImageWidth = 0 then'
          '  begin'
          '    ImageWidth := Windows.GetSystemMetrics(SM_CXMENUCHECK);'
          '    ImageHeight := Windows.GetSystemMetrics(SM_CYMENUCHECK);'
          '  end;'
          ''
          '  dim.cx := ImageWidth + FSpace + TextSize.cx;'
          ''
          '  if TextSize.cy > ImageHeight then dim.cy := TextSize.cy'
          '  else dim.cy := ImageHeight;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.GetImageSize(out w, h: Integer);'
          'begin'
          '  w := 0;'
          '  h := 0;'
          'end;'
          ''
          
            'procedure TFsCustomCheckBox.MouseDown(Button: TMouseButton; Shif' +
            't: TShiftState; X, Y: Integer);'
          'begin'
          '  if Button = mbLeft then'
          '  begin'
          '    FChecked := not FChecked;'
          '    Invalidate;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.Paint;'
          'var'
          '  w, h: Integer;'
          '  r: TRect;'
          '  _caption: string;'
          'begin'
          '  inherited;'
          ''
          '  Self.GetImageSize(w, h);'
          ''
          '  if w = 0 then'
          '  begin'
          '    w := Windows.GetSystemMetrics(SM_CXMENUCHECK);'
          '    h := Windows.GetSystemMetrics(SM_CYMENUCHECK);'
          ''
          '    r.Left := 0;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Right := w;'
          '    r.Bottom := r.Top + h;'
          ''
          '    if Self.FChecked then'
          
            '      Windows.DrawFrameControl(Canvas.Handle, r, DFC_BUTTON, DFC' +
            'S_BUTTONCHECK or DFCS_CHECKED)'
          '    else'
          
            '      Windows.DrawFrameControl(Canvas.Handle, r, DFC_BUTTON, DFC' +
            'S_BUTTONCHECK);'
          '  end'
          '  else begin'
          '    r.Left := 0;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Right := w;'
          '    r.Bottom := r.Top + h;'
          '    Self.DrawMark(r);'
          '  end;'
          ''
          '  r := Rect(r.Right + FSpace, 0, Self.Width, Self.Height);'
          ''
          '  Self.Canvas.Font := Self.Font;'
          '  Self.Canvas.Brush.Style := bsClear;'
          '  SetBkMode(Self.Canvas.Handle, Windows.TRANSPARENT);'
          '  _caption := Self.Caption;'
          '  '
          
            '  Self.Canvas.TextRect(r, _caption, [tfVerticalCenter, tfSingleL' +
            'ine]);'
          'end;'
          ''
          'procedure TFsCustomCheckBox.SetChecked(const Value: Boolean);'
          'begin'
          '  if FChecked <> Value then'
          '  begin'
          '    FChecked := Value;'
          '    AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomCheckBox.SetSpace(const Value: Integer);'
          'begin'
          '  if (FSpace <> Value) and (Value >= 0) then'
          '  begin'
          '    FSpace := Value;'
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsCheckBox }'
          ''
          'constructor TFsCheckBox.Create(Owner: TComponent);'
          'begin'
          '  inherited;'
          '  FCheckedPicture := TFsPictureDrawable.Create(Self);'
          '  FUnCheckedPicture := TFsPictureDrawable.Create(Self);'
          '  FCheckedPicture.AddOnChangeListener(Self.PictureChanged);'
          '  FUnCheckedPicture.AddOnChangeListener(Self.PictureChanged);'
          'end;'
          ''
          'destructor TFsCheckBox.Destroy;'
          'begin'
          '  FCheckedPicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  FUnCheckedPicture.RemoveOnChangeListener(Self.PictureChanged);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsCheckBox.DrawMark(const Rect: TRect);'
          'begin'
          '  if Self.Checked then'
          '    FCheckedPicture.Draw(Self.Canvas, Rect)'
          '  else'
          '    FUnCheckedPicture.Draw(Self.Canvas, Rect)'
          'end;'
          ''
          'function TFsCheckBox.GetCheckedPicture: TPicture;'
          'begin'
          '  Result := FCheckedPicture.Picture;'
          'end;'
          ''
          'procedure TFsCheckBox.GetImageSize(out w, h: Integer);'
          'begin'
          '  if Self.Checked then'
          '  begin'
          '    w := FCheckedPicture.Width;'
          '    h := FCheckedPicture.Height;'
          '  end'
          '  else begin'
          '    w := FUnCheckedPicture.Width;'
          '    h := FUnCheckedPicture.Height;'
          '  end;'
          'end;'
          ''
          'function TFsCheckBox.GetUnCheckedPicture: TPicture;'
          'begin'
          '  Result := FUnCheckedPicture.Picture;'
          'end;'
          ''
          
            'procedure TFsCheckBox.PictureChanged(Sender: TObject; ID: TNotif' +
            'yID);'
          'begin'
          '  if ID = niChange then'
          '  begin'
          
            '    if ((Sender = FCheckedPicture) and FChecked) or ((Sender = F' +
            'UnCheckedPicture) and not FChecked) then'
          '      Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCheckBox.SetCheckedPicture(const Value: TPicture);'
          'begin'
          '  FCheckedPicture.Picture.Assign(Value);'
          'end;'
          ''
          
            'procedure TFsCheckBox.SetUnCheckedPicture(const Value: TPicture)' +
            ';'
          'begin'
          '  FUnCheckedPicture.Picture.Assign(Value);'
          'end;'
          ''
          '{ TFsButtonEdit }'
          ''
          'constructor TFsButtonEdit.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FButtonPicture := TPicture.Create;'
          '  FNCCanvas := TCanvas.Create;'
          'end;'
          ''
          'destructor TFsButtonEdit.Destroy;'
          'begin'
          '  FButtonPicture.Free;'
          '  FNCCanvas.Free;'
          '  inherited;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCCalcSize(var msgr: TWMNCCalcSize);'
          'begin'
          '  with msgr.CalcSize_Params^ do'
          '  begin'
          '    rgrc[0].Left := rgrc[0].Left + 2;'
          '    rgrc[0].Top := rgrc[0].Top + 2;'
          '    rgrc[0].Right := rgrc[0].Right - 2 - FButtonPicture.Width;'
          '    rgrc[0].Bottom := rgrc[0].Bottom - 2;'
          '  end;'
          ''
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCHitTest(var msgr: TWMNCHitTest);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  pt := Self.ScreenToClient(Point(msgr.XPos, msgr.YPos));'
          ''
          
            '  if PtInRect(Rect(Self.Width - 18, 2, Self.Width - 2, Self.Heig' +
            'ht - 2), pt) then msgr.Result := HTBORDER'
          '  else inherited;'
          'end;'
          ''
          
            'procedure TFsButtonEdit.WMNCLButtonDown(var msgr: TWMNCLButtonDo' +
            'wn);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  pt := Self.ScreenToClient(Point(msgr.XCursor, msgr.YCursor));'
          ''
          
            '  if PtInRect(Rect(Self.Width - 18, 2, Self.Width - 2, Self.Heig' +
            'ht - 2), pt) then'
          '  begin'
          '    if Assigned(FOnClickButton) then'
          '      FOnClickButton(Self);'
          ''
          '    msgr.Result := 0;'
          '  end'
          '  else inherited;'
          'end;'
          ''
          'procedure TFsButtonEdit.WMNCPAINT(var msgr: TWMNCPaint);'
          'var'
          '  dc: HDC;'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  r.Left := Self.Width - 2 - FButtonPicture.Width;'
          '  r.Right := Self.Width - 2;'
          ''
          '  r.Top := (Self.Height - FButtonPicture.Height) div 2;'
          
            '  r.Bottom := Self.Height - (Self.Height - FButtonPicture.Height' +
            ') div 2;'
          ''
          '  dc := GetWindowDC(Self.Handle);'
          '  '
          '  FNCCanvas.Handle := dc;'
          ''
          '  try'
          '    FNCCanvas.Brush.Color := Self.Color;'
          
            '    FNCCanvas.FillRect(Rect(r.Left, 2, r.Right, Self.Height - 2)' +
            ');'
          '    '
          '    if Assigned(FButtonPicture.Graphic) then'
          '      FNCCanvas.StretchDraw(r, FButtonPicture.Graphic);'
          '  finally'
          '    FNCCanvas.Handle := 0;'
          '    ReleaseDC(Self.Handle, dc);'
          '  end;  '
          'end;'
          ''
          
            'procedure TFsButtonEdit.WriteButtonPicture(const Value: TPicture' +
            ');'
          'begin'
          '  FButtonPicture.Assign(Value);'
          'end;'
          ''
          '{ TFsNCScrollMemo }'
          ''
          'procedure TFsNCScrollMemo.CMMouseEnter(var msg: TMessage);'
          'begin'
          '  inherited;'
          '  FMouseIn := True;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.CMMouseLeave(var msg: TMessage);'
          'begin'
          '  inherited;'
          '  FMouseIn := False;'
          'end;'
          ''
          'constructor TFsNCScrollMemo.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FMouseInBorderColor := RGB(123, 228, 255);'
          'end;'
          ''
          'function TFsNCScrollMemo.GetHScrollRect(var rc: TRect): Boolean;'
          'var'
          '  style: Integer;'
          'begin'
          '  style := GetWindowLong(Handle, GWL_STYLE);'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    rc.Bottom := Self.Height - 2;'
          '    rc.Top := rc.Bottom - GetRealScrollBar.HScrollHeight;'
          '    rc.Left := 2;'
          ''
          '    if style and WS_VSCROLL = 0 then rc.Right := Self.Width - 2'
          
            '    else rc.Right := Self.Width - 2 - GetRealScrollBar.VScrollWi' +
            'dth;'
          ''
          '    Result := True;'
          '  end'
          '  else Result := False;'
          'end;'
          ''
          'function TFsNCScrollMemo.GetRealScrollBar: TFsCustomScrollBar;'
          'begin'
          '  if Assigned(FScrollBar) then Result := FScrollBar'
          '  else Result := GetDefaultScrollBar;'
          'end;'
          ''
          
            'procedure TFsNCScrollMemo.GetScrollRect(var rcVScroll, rcHScroll' +
            ', rcIntersect: TRect);'
          'var'
          '  style: Integer;'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  sb := GetRealScrollBar;'
          '  style := GetWindowLong(Handle, GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    rcVScroll.Right := Self.Width - 2;'
          '    rcVScroll.Left := rcVScroll.Right - sb.VScrollWidth;'
          '    rcVScroll.Top := 2;'
          ''
          
            '    if style and WS_HSCROLL = 0 then rcVScroll.Bottom := Self.He' +
            'ight - 2'
          '    else rcVScroll.Bottom := Self.Height - 2 - sb.HScrollHeight;'
          '  end'
          '  else begin'
          '    rcVScroll.Left := 0;'
          '    rcVScroll.Right := -1;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    rcHScroll.Bottom := Self.Height - 2;'
          '    rcHScroll.Top := rcHScroll.Bottom - sb.HScrollHeight;'
          '    rcHScroll.Left := 2;'
          ''
          
            '    if style and WS_VSCROLL = 0 then rcHScroll.Right := Self.Wid' +
            'th - 2'
          '    else rcHScroll.Right := Self.Width - 2 - sb.VScrollWidth;'
          '  end'
          '  else begin'
          '    rcHScroll.Left := 0;'
          '    rcHScroll.Right := -1;'
          '  end;'
          ''
          
            '  if (style and WS_HSCROLL <> 0) and (style and WS_VSCROLL <> 0)' +
            ' then'
          '  begin'
          '    rcIntersect.Left := Self.Width - 2 - sb.VScrollWidth;'
          '    rcIntersect.Right := Self.Width - 2;'
          '    rcIntersect.Top := Self.Height - 2 - sb.HScrollHeight;'
          '    rcIntersect.Bottom := Self.Height - 2;'
          '  end'
          '  else begin'
          '    rcIntersect.Left := 0;'
          '    rcIntersect.Right := -1;'
          '  end;'
          '  '
          'end;'
          ''
          'function TFsNCScrollMemo.GetVScrollRect(var rc: TRect): Boolean;'
          'var'
          '  style: Integer;'
          'begin'
          '  style := GetWindowLong(Handle, GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    rc.Right := Self.Width - 2;'
          '    rc.Left := rc.Right - GetRealScrollBar.VScrollWidth;'
          '    rc.Top := 2;'
          ''
          
            '    if style and WS_HSCROLL = 0 then rc.Bottom := Self.Height - ' +
            '2'
          
            '    else rc.Bottom := Self.Height - 2 - GetRealScrollBar.HScroll' +
            'Height;'
          ''
          '    Result := True;'
          '  end'
          '  else Result := False;'
          'end;'
          ''
          
            'procedure TFsNCScrollMemo.Notification(AComponent: TComponent; O' +
            'peration: TOperation);'
          'begin'
          '  inherited;'
          ''
          '  if (Operation = opRemove) and (AComponent = FScrollBar) then'
          '    SetScrollBar(nil);'
          'end;'
          ''
          'procedure TFsNCScrollMemo.PaintNC;'
          'var'
          '  dc: HDC;'
          '  hb: HBRUSH;'
          '  r, rcIntersect, rcVScroll, rcHScroll: TRect;'
          '  bgc: DWORD;'
          '  si: TScrollInfo;'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  dc := GetWindowDC(Handle);'
          ''
          '  try'
          '    if FMouseIn then bgc := ColorToRGB(FMouseInBorderColor)'
          '    else bgc := RGB(78, 160, 209);'
          ''
          '    r.Left := 0;'
          '    r.Top := 0;'
          '    r.Right := Self.Width;'
          '    r.Bottom := Self.Height;'
          ''
          '    hb := CreateSolidBrush(bgc);'
          '    Windows.FrameRect(dc, r, hb);'
          '    DeleteObject(hb);'
          ''
          '    if FMouseIn then bgc := RGB(78, 160, 209)  '
          '    else bgc := ColorToRGB(Self.Color);'
          ''
          '    r.Left := 1;'
          '    r.Top := 1;'
          '    r.Right := Self.Width - 1;'
          '    r.Bottom := Self.Height - 1;'
          ''
          '    hb := CreateSolidBrush(bgc);'
          '    FrameRect(dc, r, hb);'
          '    DeleteObject(hb);'
          ''
          '    sb := GetRealScrollBar;'
          '    '
          '    Self.GetScrollRect(rcVScroll, rcHScroll, rcIntersect);'
          ''
          '    if rcVScroll.Left < rcVScroll.Right then'
          '    begin'
          '      si.cbSize := SizeOf(si);'
          '      si.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '      Windows.GetScrollInfo(Handle, SB_VERT, si);'
          '      //sb.DrawVScroll(dc, si, rcVScroll);'
          '    end;'
          ''
          '    if rcHScroll.Left < rcHScroll.Right then'
          '    begin'
          '      si.cbSize := SizeOf(si);'
          '      si.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '      Windows.GetScrollInfo(Handle, SB_HORZ, si);'
          '      //sb.DrawHScroll(dc, si, rcHScroll);'
          '    end;'
          ''
          '    if rcIntersect.Left < rcIntersect.Right then'
          '      sb.DrawIntersect(dc, rcIntersect);'
          ''
          '  finally'
          '    ReleaseDC(Handle, dc);'
          '  end;'
          'end;'
          ''
          
            'procedure TFsNCScrollMemo.SetMouseInBorderColor(const Value: TCo' +
            'lor);'
          'begin'
          '  if FMouseInBorderColor <> Value then'
          '  begin'
          '    FMouseInBorderColor := Value;'
          '    Self.Invalidate;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsNCScrollMemo.SetScrollBar(const Value: TFsCustomScr' +
            'ollBar);'
          'begin'
          '  if Value <> FScrollBar then'
          '  begin'
          '    if Assigned(FScrollBar) then'
          '      FScrollBar.RemoveFreeNotification(Self);'
          ''
          '    FScrollBar := Value;'
          ''
          '    if Assigned(FScrollBar) then'
          '      FScrollBar.FreeNotification(Self);'
          ''
          '    Self.RecreateWnd;'
          '  end;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCCalcSize(var msgr: TWMNCCalcSize);'
          'var'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  with msgr.CalcSize_Params^ do'
          '  begin'
          '    rgrc[0].Left := rgrc[0].Left + 2;'
          '    rgrc[0].Top := rgrc[0].Top + 2;'
          '    rgrc[0].Right := rgrc[0].Right - 2;'
          '    rgrc[0].Bottom := rgrc[0].Bottom - 2;'
          ''
          '    sb := Self.GetRealScrollBar;'
          '    '
          
            '    if (GetWindowLong(Self.Handle, GWL_STYLE) and WS_VSCROLL) <>' +
            ' 0 then'
          '      Dec(rgrc[0].Right, sb.VScrollWidth);'
          ''
          
            '    if (GetWindowLong(Self.Handle, GWL_STYLE) and WS_HSCROLL) <>' +
            ' 0 then'
          '      Dec(rgrc[0].Bottom, sb.HScrollHeight);'
          '  end;'
          ''
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCHitTest(var msgr: TWMNCHitTest);'
          'var'
          '  pt: TPoint;'
          '  rcClient: TRect;'
          'begin'
          '  inherited;'
          ''
          '  pt.X := msgr.XPos;'
          '  pt.Y := msgr.YPos;'
          '  Windows.ScreenToClient(Self.Handle, pt);'
          ''
          '  Windows.GetClientRect(Self.Handle, rcClient);'
          ''
          '  if PtInRect(rcClient, pt) then msgr.Result := HTCLIENT'
          '  else begin'
          
            '    //PtInRect(Rect(rcClient.Right, 0, rcClient.Right + GetRealS' +
            'crollBar.))'
          '  end;'
          'end;'
          ''
          
            'procedure TFsNCScrollMemo.WMNCLButtonDown(var msgr: TWMNCLButton' +
            'Down);'
          'begin'
          '  inherited;'
          '  //Self.Perform(WM_VSCROLL, SB_LINEDOWN, 0);'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WMNCPAINT(var msgr: TWMNCPaint);'
          'begin'
          '  //inherited;'
          '  Self.PaintNC;'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsNCScrollMemo.WndProc(var msgr: TMessage);'
          'var'
          '  vsi1, hsi1, vsi2, hsi2: TScrollInfo;'
          '  style: Integer;'
          '  changed: Boolean;'
          'begin'
          
            '  if not HandleAllocated or (msgr.Msg = WM_CREATE) or (msgr.Msg ' +
            '= WM_NCCREATE)'
          '    or (msgr.Msg = WM_DESTROY) or (msgr.Msg = WM_NCDESTROY) then'
          '  begin'
          '    inherited;'
          '    Exit;'
          '  end;'
          ''
          '  changed := False;'
          ''
          '  style := GetWindowLong(Self.Handle, GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi1.cbSize := SizeOf(vsi1);'
          '    vsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi1);'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi1.cbSize := SizeOf(hsi1);'
          '    hsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi1);'
          '  end;'
          '    '
          '  inherited;'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi2.cbSize := SizeOf(vsi2);'
          '    vsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi2);'
          ''
          '    if (vsi1.nMin <> vsi2.nMin) or (vsi1.nMax <> vsi2.nMax)'
          
            '      or (vsi1.nPage <> vsi2.nPage) or (vsi1.nPos <> vsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi2.cbSize := SizeOf(hsi2);'
          '    hsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi2);'
          ''
          '    if (hsi1.nMin <> hsi2.nMin) or (hsi1.nMax <> hsi2.nMax)'
          
            '      or (hsi1.nPage <> hsi2.nPage) or (hsi1.nPos <> hsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if changed then Self.PaintNC;'
          'end;'
          ''
          '{ TFsGraphicControl }'
          ''
          'procedure TFsGraphicControl.AutoSizeAndInvalidate;'
          'begin'
          '  if not CheckAutoSize then Self.Invalidate;'
          'end;'
          ''
          
            'function TFsGraphicControl.CanAutoSize(var NewWidth, NewHeight: ' +
            'Integer): Boolean;'
          'var'
          '  dim: TSize;'
          'begin'
          '  Result := True;'
          ''
          '  if not (csDestroying in ComponentState) then'
          '  begin'
          '    Self.GetContentDimension(dim);'
          ''
          
            '    if (csDesigning in ComponentState) or (dim.cx > 0) and (dim.' +
            'cy > 0) then'
          '    begin'
          
            '      if Align in [alNone, alLeft, alRight] then NewWidth := dim' +
            '.cx;'
          
            '      if Align in [alNone, alTop, alBottom] then NewHeight := di' +
            'm.cy;'
          '    end;'
          '  end;'
          'end;'
          ''
          'function TFsGraphicControl.CheckAutoSize: Boolean;'
          'var'
          '  OldBounds: TRect;'
          'begin'
          '  if Self.AutoSize then'
          '  begin'
          '    OldBounds := Self.BoundsRect;'
          '    '
          '    Self.AutoSize := False;'
          '    Self.AutoSize := True;'
          ''
          
            '    Result := (OldBounds.Left <> Self.Left) or (OldBounds.Top <>' +
            ' Self.Top)'
          '      or (OldBounds.Right <> Self.Left + Self.Width)'
          '      or (OldBounds.Bottom <> Self.Top + Self.Height);'
          '    '
          '  end'
          '  else Result := False;'
          'end;'
          ''
          'procedure TFsGraphicControl.GetContentDimension(out dim: TSize);'
          'begin'
          '  dim.cx := Self.Width;'
          '  dim.cy := Self.Height;'
          'end;'
          ''
          '{ TFsCoverButton }'
          ''
          'constructor TFsCoverButton.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FPicture := TPicture.Create;'
          '  FPicture.OnChange := Self.PictureChanged;'
          'end;'
          ''
          'destructor TFsCoverButton.Destroy;'
          'begin'
          '  FPicture.Free;'
          '  SetDownCover(nil);'
          '  SetHoverCover(nil);'
          '  inherited;'
          'end;'
          ''
          'procedure TFsCoverButton.DrawPicture(const Rect: TRect);'
          'begin'
          
            '  if Assigned(FPicture.Graphic) and not FPicture.Graphic.Empty t' +
            'hen'
          '    Self.Canvas.StretchDraw(Rect, FPicture.Graphic);'
          'end;'
          ''
          'function TFsCoverButton.GetCover: TFsDrawable;'
          'begin'
          '  inherited;'
          ''
          '  if mfLButtonDown in FMouseFlag then Result := fDownCover'
          '  else if mfMouseOver in FMouseFlag then Result := FHoverCover'
          '  else Result := nil;'
          'end;'
          ''
          
            'function TFsCoverButton.GetPictureSize(out width: Integer): Inte' +
            'ger;'
          'begin'
          
            '  if Assigned(FPicture.Graphic) and not FPicture.Graphic.Empty t' +
            'hen'
          '  begin'
          '    width := FPicture.Graphic.Width;'
          '    Result := FPicture.Graphic.Height;'
          '  end'
          '  else begin'
          '    width := 0;'
          '    Result := 0;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCoverButton.LinkedPictureChanged(Sender: TObject; I' +
            'D: TNotifyID);'
          'var'
          '  changed: Boolean;'
          'begin'
          '  changed := (Sender = fDownCover) or (Sender = FHoverCover);'
          ''
          '  if ID = niDestroy then'
          '  begin'
          '    if Sender = fDownCover then fDownCover := nil;'
          ''
          '    if Sender = FHoverCover then FHoverCover := nil;'
          '  end;'
          ''
          '  if changed then Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCoverButton.Paint;'
          'var'
          '  cover: TFsDrawable;'
          '  dim: TSize;'
          '  w, h: Integer;'
          '  r: TRect;'
          'begin'
          '  inherited;'
          ''
          '  Self.GetContentDimension(dim);'
          '  cover := Self.GetCover;'
          ''
          '  if Assigned(cover) then'
          '  begin'
          '    w := cover.Width;'
          ''
          '    if (w < dim.cx) and cover.HorzSafeStretch then w := dim.cx;'
          ''
          '    h := cover.Height;'
          ''
          '    if (h < dim.cy) and cover.VertSafeStretch then h := dim.cy;'
          ''
          '    r.Left := (Self.Width - w) div 2;'
          '    r.Right := r.Left + w;'
          '    r.Top := (Self.Height - h) div 2;'
          '    r.Bottom := r.Top + h;'
          ''
          '    if cover is TFsSingleDrawable then'
          '      TFsSingleDrawable(cover).Draw(Self.Canvas, r)'
          '    else if cover is TFsMultiFrameDrawable then'
          
            '      TFsMultiFrameDrawable(cover).DrawFrame(Self.Canvas.Handle,' +
            ' r, 0);'
          '  end;'
          'end;'
          ''
          'procedure TFsCoverButton.PictureChanged(Sender: TObject);'
          'begin'
          '  Self.AutoSizeAndInvalidate;'
          'end;'
          ''
          'procedure TFsCoverButton.SetDownCover(const Value: TFsDrawable);'
          'begin'
          '  if fDownCover <> Value then'
          '  begin'
          '    if Assigned(fDownCover) then'
          
            '      fDownCover.RemoveOnChangeListener(Self.LinkedPictureChange' +
            'd);'
          ''
          '    fDownCover := Value;'
          ''
          '    if Assigned(fDownCover) then'
          '      fDownCover.AddOnChangeListener(Self.LinkedPictureChanged);'
          ''
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCoverButton.SetHoverCover(const Value: TFsDrawable)' +
            ';'
          'begin'
          '  if FHoverCover <> Value then'
          '  begin'
          '    if Assigned(FHoverCover) then'
          
            '      FHoverCover.RemoveOnChangeListener(Self.LinkedPictureChang' +
            'ed);'
          ''
          '    FHoverCover := Value;'
          ''
          '    if Assigned(FHoverCover) then'
          
            '      FHoverCover.AddOnChangeListener(Self.LinkedPictureChanged)' +
            ';'
          ''
          '    Self.AutoSizeAndInvalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsCoverButton.SetPicture(const Value: TPicture);'
          'begin'
          '  FPicture.Assign(Value);'
          'end;'
          ''
          '{ TFsCustomScrollBar }'
          ''
          'const'
          '  SCROLL_MIN_THUMB_LENGTH = 20;'
          ''
          
            'function TFsCustomScrollBar.CalcHPos(const rc: TRect; const si: ' +
            'TScrollInfo; Y: Integer): Integer;'
          'var'
          '  ThumbWidth, ScrollWidth: Integer;'
          'begin'
          
            '  if (si.nMax >= si.nMin) and (si.nPage <= si.nMax - si.nMin) th' +
            'en'
          '  begin'
          '    ScrollWidth := rc.Right - rc.Left - FHArrowWidth shl 1;'
          ''
          
            '    ThumbWidth := si.nPage * ScrollWidth div (si.nMax - si.nMin ' +
            '+ 1);'
          ''
          
            '    if ThumbWidth < Self.MinThumbLength then ThumbWidth := Self.' +
            'MinThumbLength;'
          ''
          '    if Y <= rc.Left + FHArrowWidth then Result := si.nMin'
          
            '    else if Y > rc.Right - FHArrowWidth - ThumbWidth then Result' +
            ' := si.nMax'
          '    else begin'
          '      Y := Y - rc.Left - FHArrowWidth;'
          
            '      Result := (si.nMax - si.nMin + 1 - si.nPage) * Y div (Scro' +
            'llWidth - ThumbWidth);'
          '    end;'
          '  end'
          '  else Result := si.nMin - 1;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.CalcHScroll(const rc: TRect; const ' +
            'si: TScrollInfo; var rcLeftArrow, rcRightArrow,'
          '  rcThumb: TRect);'
          'var'
          '  ThumbWidth, ThumbPos, ScrollWidth: Integer;'
          'begin'
          '  rcLeftArrow.Left := rc.Left;'
          '  rcLeftArrow.Right := rc.Left + FHArrowWidth;'
          '  rcLeftArrow.Top := rc.Top;'
          '  rcLeftArrow.Bottom := rc.Bottom;'
          ''
          '  rcRightArrow.Left := rc.Right - FHArrowWidth;'
          '  rcRightArrow.Right := rc.Right;'
          '  rcRightArrow.Top := rc.Top;'
          '  rcRightArrow.Bottom := rc.Bottom;'
          ''
          
            '  if (si.nMax >= si.nMin) and (si.nPage <= si.nMax - si.nMin) th' +
            'en'
          '  begin'
          '    ScrollWidth := rc.Right - rc.Left - FHArrowWidth shl 1;'
          ''
          '    rcThumb.Top := rc.Top;'
          '    rcThumb.Bottom := rc.Bottom;'
          ''
          
            '    ThumbWidth := si.nPage * ScrollWidth div (si.nMax - si.nMin ' +
            '+ 1);'
          ''
          
            '    if ThumbWidth < Self.MinThumbLength then ThumbWidth := Self.' +
            'MinThumbLength;'
          ''
          
            '    ThumbPos := si.nPos * (ScrollWidth - ThumbWidth) div (si.nMa' +
            'x - si.nMin + 1 - si.nPage);'
          ''
          '    rcThumb.Left := rc.Left + FHArrowWidth + ThumbPos;'
          '    rcThumb.Right := rcThumb.Left + ThumbWidth;'
          '  end'
          '  else begin'
          '    rcThumb.Left := 0;'
          '    rcThumb.Right := -1;'
          '    rcThumb.Top := 0;'
          '    rcThumb.Bottom := -1;'
          '  end;'
          'end;'
          ''
          
            'function TFsCustomScrollBar.CalcVPos(const rc: TRect; const si: ' +
            'TScrollInfo; Y: Integer): Integer;'
          'var'
          '  ThumbHeight, ScrollHeight: Integer;'
          'begin'
          
            '  if (si.nMax >= si.nMin) and (si.nPage <= si.nMax - si.nMin) th' +
            'en'
          '  begin'
          '    ScrollHeight := rc.Bottom - rc.Top - FVArrowHeight shl 1;'
          ''
          
            '    ThumbHeight := si.nPage * ScrollHeight div (si.nMax - si.nMi' +
            'n + 1);'
          ''
          
            '    if ThumbHeight < Self.MinThumbLength then ThumbHeight := Sel' +
            'f.MinThumbLength;'
          ''
          '    if Y <= rc.Top + FVArrowHeight then Result := si.nMin'
          
            '    else if Y > rc.Bottom - FVArrowHeight - ThumbHeight then Res' +
            'ult := si.nMax'
          '    else begin'
          '      Y := Y - rc.Top - FVArrowHeight;'
          
            '      Result := (si.nMax - si.nMin + 1 - si.nPage) * Y div (Scro' +
            'llHeight - ThumbHeight);'
          '    end;'
          '  end'
          '  else Result := si.nMin - 1;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.CalcVScroll(const rc: TRect; const ' +
            'si: TScrollInfo;'
          '  var rcTopArrow, rcBottomArrow, rcThumb: TRect);'
          'var'
          '  ThumbHeight, ThumbPos, ScrollHeight: Integer;'
          'begin'
          '  rcTopArrow.Left := rc.Left;'
          '  rcTopArrow.Right := rc.Right;'
          '  rcTopArrow.Top := rc.Top;'
          '  rcTopArrow.Bottom := rcTopArrow.Top + FVArrowHeight;'
          ''
          '  rcBottomArrow.Left := rc.Left;'
          '  rcBottomArrow.Right := rc.Right;'
          '  rcBottomArrow.Top := rc.Bottom - FVArrowHeight;'
          '  rcBottomArrow.Bottom := rc.Bottom;'
          ''
          
            '  if (si.nMax >= si.nMin) and (si.nPage <= si.nMax - si.nMin) th' +
            'en'
          '  begin'
          '    ScrollHeight := rc.Bottom - rc.Top - FVArrowHeight shl 1;'
          '    '
          '    rcThumb.Left := rc.Left;'
          '    rcThumb.Right := rc.Right;'
          ''
          
            '    ThumbHeight := si.nPage * ScrollHeight div (si.nMax - si.nMi' +
            'n + 1);'
          ''
          
            '    if ThumbHeight < Self.MinThumbLength then ThumbHeight := Sel' +
            'f.MinThumbLength;'
          '    '
          
            '    ThumbPos := si.nPos * (ScrollHeight - ThumbHeight) div (si.n' +
            'Max - si.nMin + 1 - si.nPage);'
          ''
          '    rcThumb.Top := rc.Top + FVArrowHeight + ThumbPos;'
          '    rcThumb.Bottom := rcThumb.Top + ThumbHeight;'
          '  end'
          '  else begin'
          '    rcThumb.Left := 0;'
          '    rcThumb.Right := -1;'
          '    rcThumb.Top := 0;'
          '    rcThumb.Bottom := -1;'
          '  end;'
          'end;'
          ''
          'procedure TFsCustomScrollBar.Changed;'
          'begin'
          '  '
          'end;'
          ''
          'constructor TFsCustomScrollBar.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          '  FVScrollWidth := GetSystemMetrics(SM_CXVSCROLL);'
          '  FHScrollHeight := GetSystemMetrics(SM_CYHSCROLL);'
          '  FVArrowHeight := GetSystemMetrics(SM_CYVSCROLL);'
          '  FHArrowWidth := GetSystemMetrics(SM_CXHSCROLL);'
          '  FMinThumbLength := SCROLL_MIN_THUMB_LENGTH;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.SetHArrowWidth(const Value: Integer' +
            ');'
          'begin'
          '  if (FHArrowWidth <> Value) and (Value > 0) then'
          '  begin'
          '    FHArrowWidth := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.SetHScrollHeight(const Value: Integ' +
            'er);'
          'begin'
          '  if (FHScrollHeight <> Value) and (Value > 0) then'
          '  begin'
          '    FHScrollHeight := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.SetMinThumbLength(const Value: Inte' +
            'ger);'
          'begin'
          
            '  if (FMinThumbLength <> Value) and (Value >= SCROLL_MIN_THUMB_L' +
            'ENGTH) then'
          '  begin'
          '    FMinThumbLength := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.SetVArrowHeight(const Value: Intege' +
            'r);'
          'begin'
          '  if (FVArrowHeight <> Value) and (Value > 0) then'
          '  begin'
          '    FVArrowHeight := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsCustomScrollBar.SetVScrollWidth(const Value: Intege' +
            'r);'
          'begin'
          '  if (FVScrollWidth <> Value) and (Value > 0) then'
          '  begin'
          '    FVScrollWidth := Value;'
          '    Changed;'
          '  end;'
          'end;'
          ''
          '{ TFsFlatScrollBar }'
          ''
          
            'procedure TFsFlatScrollBar.DrawHScroll(dc: HDC; const rc, rcLeft' +
            'Arrow, rcRightArrow, rcThumb: TRect);'
          'var'
          '  brush: HBRUSH;'
          'begin'
          '  Windows.FillRect(dc, rc, GetStockObject(LTGRAY_BRUSH));'
          ''
          
            '  GradientFillRect(dc, Rect(rcLeftArrow.Left + 1, rcLeftArrow.To' +
            'p + 1,'
          '    rcLeftArrow.Right - 1, rcLeftArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, 229), False);'
          ''
          '  Self.DrawLeftArrow(dc, rcLeftArrow,'
          '    (rcLeftArrow.Right - rcLeftArrow.Left) div 2,'
          '    (rcLeftArrow.Bottom - rcLeftArrow.Top) div 2);'
          ''
          
            '  GradientFillRect(dc, Rect(rcRightArrow.Left + 1, rcRightArrow.' +
            'Top + 1,'
          '    rcRightArrow.Right - 1, rcRightArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, 229), False);'
          ''
          '  Self.DrawRightArrow(dc, rcRightArrow,'
          '    (rcRightArrow.Right - rcRightArrow.Left) div 2,'
          '    (rcRightArrow.Bottom - rcRightArrow.Top) div 2);'
          ''
          '  if rcThumb.Left < rcThumb.Right then'
          '  begin'
          '    brush := CreateSolidBrush(RGB(136, 136, 136));'
          ''
          
            '    FillRect(dc, Rect(rcThumb.Left, rcThumb.Top + 1, rcThumb.Rig' +
            'ht - 1, rcThumb.Top + 2), GetStockObject(WHITE_BRUSH));'
          
            '    FillRect(dc, Rect(rcThumb.Left, rcThumb.Top + 2, rcThumb.Lef' +
            't + 1, rcThumb.Bottom - 1), GetStockObject(WHITE_BRUSH));'
          
            '    FillRect(dc, Rect(rcThumb.Right - 1, rcThumb.Top + 1, rcThum' +
            'b.Right, rcThumb.Bottom - 1), brush);'
          
            '    FillRect(dc, Rect(rcThumb.Left + 1, rcThumb.Bottom - 2, rcTh' +
            'umb.Right - 1, rcThumb.Bottom - 1), brush);'
          ''
          '    DeleteObject(brush);'
          ''
          
            '    GradientFillRect(dc, Rect(rcThumb.Left + 1, rcThumb.Top + 2,' +
            ' rcThumb.Right - 1, rcThumb.Bottom - 2),'
          '      RGB(254, 254, 254), RGB(229, 229, 229), True);'
          '  end;'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawVScroll(dc: HDC; const rc, rcTopA' +
            'rrow, rcBottomArrow, rcThumb: TRect);'
          'var'
          '  brush: HBRUSH;'
          'begin'
          '  Windows.FillRect(dc, rc, GetStockObject(LTGRAY_BRUSH));'
          ''
          
            '  GradientFillRect(dc, Rect(rcTopArrow.Left + 1, rcTopArrow.Top ' +
            '+ 1,'
          '    rcTopArrow.Right - 1, rcTopArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, 229), False);'
          ''
          
            '  Self.DrawUpArrow(dc, rcTopArrow, (rcTopArrow.Bottom - rcTopArr' +
            'ow.Top) div 2, (rcTopArrow.Right - rcTopArrow.Left) div 2);'
          ''
          
            '  GradientFillRect(dc, Rect(rcBottomArrow.Left + 1, rcBottomArro' +
            'w.Top + 1,'
          '    rcBottomArrow.Right - 1, rcBottomArrow.Bottom - 1),'
          '    RGB(255, 255, 255), RGB(229, 229, 229), False);'
          ''
          
            '  Self.DrawDownArrow(dc, rcBottomArrow, (rcBottomArrow.Bottom - ' +
            'rcBottomArrow.Top) div 2, (rcBottomArrow.Right - rcBottomArrow.L' +
            'eft) div 2);'
          ''
          '  if rcThumb.Left < rcThumb.Right then'
          '  begin'
          '    brush := CreateSolidBrush(RGB(136, 136, 136));'
          ''
          
            '    FillRect(dc, Rect(rcThumb.Left + 1, rcThumb.Top, rcThumb.Rig' +
            'ht - 2, rcThumb.Top + 1), GetStockObject(WHITE_BRUSH));'
          
            '    FillRect(dc, Rect(rcThumb.Left + 1, rcThumb.Top + 1, rcThumb' +
            '.Left + 2, rcThumb.Bottom), GetStockObject(WHITE_BRUSH));'
          
            '    FillRect(dc, Rect(rcThumb.Right - 2, rcThumb.Top, rcThumb.Ri' +
            'ght - 1, rcThumb.Bottom), brush);'
          
            '    FillRect(dc, Rect(rcThumb.Left + 2, rcThumb.Bottom - 1, rcTh' +
            'umb.Right - 1, rcThumb.Bottom), brush);'
          ''
          '    DeleteObject(brush);'
          ''
          
            '    GradientFillRect(dc, Rect(rcThumb.Left + 2, rcThumb.Top + 1,' +
            ' rcThumb.Right - 2, rcThumb.Bottom - 1),'
          '      RGB(254, 254, 254), RGB(229, 229, 229), False);'
          '  end;'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawDownArrow(dc: HDC; const rc: TRec' +
            't; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left - bw) div 2 ;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top - h) div 2;'
          ''
          '  pts[1].X := pts[0].X + bw;'
          '  pts[1].Y := pts[0].Y;'
          ''
          '  pts[2].X := rc.Left + (rc.Right - rc.Left) div 2;'
          '  pts[2].Y := pts[0].Y + h;'
          ''
          
            '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, pts[1].X, pts[1].' +
            'Y, pts[2].X, pts[2].Y,'
          '    RGB(180, 180, 180), RGB(180, 180, 180), RGB(192, 192, 192));'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawIntersect(dc: HDC; const rc: TRec' +
            't);'
          'begin'
          '  FillRect(dc, rc, GetStockObject(LTGRAY_BRUSH));'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawLeftArrow(dc: HDC; const rc: TRec' +
            't; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left - h) div 2;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top) div 2;'
          ''
          '  pts[1].X := pts[0].X + h;'
          '  pts[1].Y := rc.Top + (rc.Bottom - rc.Top - bw) div 2;'
          ''
          '  pts[2].X := pts[1].X;'
          '  pts[2].Y := pts[1].Y + bw;'
          ''
          
            '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, pts[1].X, pts[1].' +
            'Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, 180), RGB(180, 180, 180));'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawRightArrow(dc: HDC; const rc: TRe' +
            'ct; h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[1].X := rc.Left + (rc.Right - rc.Left - h) div 2;'
          '  pts[1].Y := rc.Top + (rc.Bottom - rc.Top - bw) div 2;'
          ''
          '  pts[2].X := pts[1].X;'
          '  pts[2].Y := pts[1].Y + bw;'
          ''
          '  pts[0].X := pts[1].X + h;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top) div 2;'
          ''
          
            '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, pts[1].X, pts[1].' +
            'Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, 180), RGB(180, 180, 180));'
          'end;'
          ''
          
            'procedure TFsFlatScrollBar.DrawUpArrow(dc: HDC; const rc: TRect;' +
            ' h, bw: Integer);'
          'var'
          '  pts: array [0..2] of TPoint;'
          'begin'
          '  pts[0].X := rc.Left + (rc.Right - rc.Left) div 2;'
          '  pts[0].Y := rc.Top + (rc.Bottom - rc.Top - h) div 2;'
          ''
          '  pts[1].X := rc.Left + (rc.Right - rc.Left - bw) div 2;'
          '  pts[1].Y := pts[0].Y + h;'
          ''
          '  pts[2].X := pts[1].X + bw;'
          '  pts[2].Y := pts[1].Y;'
          ''
          
            '  GradientFillTriangle(dc, pts[0].X, pts[0].Y, pts[1].X, pts[1].' +
            'Y, pts[2].X, pts[2].Y,'
          '    RGB(192, 192, 192), RGB(180, 180, 180), RGB(180, 180, 180));'
          'end;'
          ''
          '{ TFsScrollContainer }'
          ''
          'procedure TFsScrollContainer.AdjustInnerControlBounds;'
          'var'
          '  L, R, T, B: Integer;'
          '  sb: TFsCustomScrollBar;'
          '  VScroll, HScroll: Boolean;'
          'begin'
          '  if Assigned(FRealControl) then'
          '  begin'
          '  L := 2;'
          '    R := Self.ClientWidth - 2;'
          '    T := 2;'
          '    B := Self.ClientHeight - 2;'
          ''
          '    VScroll := Self.NeedScrollBar(HScroll);'
          ''
          '    sb := Self.GetRealScrollBar;'
          ''
          '    if VScroll then Dec(R, sb.VScrollWidth);'
          ''
          '    if HScroll then Dec(B, sb.HScrollHeight);'
          ''
          '    FRealControl.SetBounds(L, T, R - L, B - T);'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.CMMouseEnter(var msgr: TMessage);'
          'begin'
          '  inherited;'
          '  FMouseInControl := True;'
          '  Self.Invalidate;'
          'end;'
          ''
          'procedure TFsScrollContainer.CMMouseLeave(var msgr: TMessage);'
          'begin'
          '  inherited;'
          '  FMouseInControl := False;'
          '  Self.Invalidate;'
          'end;'
          ''
          
            'function TFsScrollContainer.ControlMessage(msg: DWORD; wparam, l' +
            'param: Integer): Integer;'
          'begin'
          
            '  if Assigned(FRealControl) then Result := FRealControl.Perform(' +
            'msg, wparam, lparam)'
          '  else Result := -1;'
          'end;'
          ''
          'constructor TFsScrollContainer.Create(AOwner: TComponent);'
          'begin'
          '  inherited;'
          ''
          
            '  ControlStyle := [csAcceptsControls, csCaptureMouse, csClickEve' +
            'nts,'
          
            '    csSetCaption, csOpaque, csDoubleClicks, csReplicatable, csPa' +
            'nnable];'
          ''
          '  Width := 185;'
          '  Height := 41;'
          ''
          '  FRealControl := Self.CreateRealControl;'
          '  FRealControl.Parent := Self;'
          ''
          '  FTimer := TTimer.Create(Self);'
          '  FTimer.Enabled := False;'
          '  FTimer.Interval := 200;'
          '  FTimer.OnTimer := Self.OnTimer;'
          'end;'
          ''
          
            'procedure TFsScrollContainer.CreateParams(var Params: TCreatePar' +
            'ams);'
          'begin'
          '  inherited;'
          ''
          '  Params.Style := Params.Style and not WS_BORDER;'
          
            '  Params.WindowClass.style := Params.WindowClass.style or CS_HRE' +
            'DRAW or CS_VREDRAW;'
          'end;'
          ''
          'destructor TFsScrollContainer.Destroy;'
          'begin'
          ''
          '  inherited;'
          'end;'
          ''
          
            'function TFsScrollContainer.GetControlScrollInfo(var si: TScroll' +
            'Info; isVert: Boolean): Boolean;'
          'const'
          '  BARS: array [Boolean] of DWORD = (SB_HORZ, SB_VERT);'
          'begin'
          
            '  if Assigned(FRealControl) and (FRealControl is TWinControl) an' +
            'd (TWinControl(FRealControl).HandleAllocated) then'
          
            '    Result := Windows.GetScrollInfo(TWinControl(FRealControl).Ha' +
            'ndle, BARS[isVert], si) and (si.nPage <> 0)'
          '  else Result := False;'
          'end;'
          ''
          
            'function TFsScrollContainer.GetRealScrollBar: TFsCustomScrollBar' +
            ';'
          'begin'
          '  if Assigned(FScrollBarDrawer) then Result := FScrollBarDrawer'
          '  else Result := GetDefaultScrollBar;'
          'end;'
          ''
          
            'procedure TFsScrollContainer.GetScrollInfo(var fsi: TFsScrollInf' +
            'o; var vsi, hsi: TScrollInfo);'
          'var'
          '  sb: TFsCustomScrollBar;'
          'begin'
          '  sb := GetRealScrollBar;'
          ''
          '  fsi.ShowVScroll := False;'
          '  fsi.ShowHScroll := False;'
          ''
          '  vsi.cbSize := SizeOf(vsi);'
          '  vsi.fMask := SIF_RANGE or SIF_POS or SIF_PAGE;'
          ''
          
            '  if GetControlScrollInfo(vsi, True) and (vsi.nMax - vsi.nMin + ' +
            '1 > vsi.nPage) then'
          '    fsi.ShowVScroll := True;'
          ''
          '  hsi.cbSize := SizeOf(hsi);'
          '  hsi.fMask := SIF_RANGE or SIF_POS or SIF_PAGE;'
          ''
          
            '  if GetControlScrollInfo(hsi, False) and (hsi.nMax - hsi.nMin +' +
            ' 1 > hsi.nPage) then'
          '    fsi.ShowHScroll := True;'
          ''
          '  if fsi.ShowVScroll then'
          '  begin'
          '    fsi.VScroll.Right := Self.Width - 2;'
          '    fsi.VScroll.Left := fsi.VScroll.Right - sb.VScrollWidth;'
          '    fsi.VScroll.Top := 2;'
          ''
          
            '    if fsi.ShowHScroll then fsi.VScroll.Bottom := Self.Height - ' +
            '2 - sb.HScrollHeight'
          '    else fsi.VScroll.Bottom := Self.Height - 2;'
          ''
          
            '    sb.CalcVScroll(fsi.VScroll, vsi, fsi.TopArrow, fsi.BottomArr' +
            'ow, fsi.VThumb);'
          '  end;'
          ''
          '  if fsi.ShowHScroll then'
          '  begin'
          '    fsi.HScroll.Bottom := Self.Height - 2;'
          '    fsi.HScroll.Top := fsi.HScroll.Bottom - sb.HScrollHeight;'
          '    fsi.HScroll.Left := 2;'
          ''
          
            '    if fsi.ShowHScroll then fsi.HScroll.Right := Self.Width - 2 ' +
            '- sb.VScrollWidth'
          '    else fsi.HScroll.Right := Self.Width - 2;'
          ''
          
            '    sb.CalcHScroll(fsi.HScroll, hsi, fsi.LeftArrow, fsi.RightArr' +
            'ow, fsi.HThumb);'
          '  end;'
          ''
          '  if fsi.ShowVScroll and fsi.ShowHScroll then'
          '  begin'
          '    fsi.Intersect.Left := Self.Width - 2 - sb.VScrollWidth;'
          '    fsi.Intersect.Right := Self.Width - 2;'
          '    fsi.Intersect.Top := Self.Height - 2 - sb.HScrollHeight;'
          '    fsi.Intersect.Bottom := Self.Height - 2;'
          '  end;'
          'end;'
          ''
          
            'function TFsScrollContainer.HitTest(X, Y: Integer): TScrollHitTe' +
            'st;'
          'var'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  pt: TPoint;'
          'begin'
          '  pt.X := X;'
          '  pt.Y := Y;'
          ''
          '  Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '  Result := shtNoWhere;'
          ''
          '  if fsi.ShowVScroll then'
          '  begin'
          '    if PtInRect(fsi.TopArrow, pt) then Result := shtTopArrow'
          
            '    else if PtInRect(fsi.BottomArrow, pt) then Result := shtBott' +
            'omArrow'
          '    else if PtInRect(fsi.VThumb, pt) then Result := shtVertThumb'
          '    else if PtInRect(fsi.VScroll, pt) then'
          '    begin'
          '      if pt.Y < fsi.VThumb.Top then Result := shtPageUp'
          '      else Result := shtPageDown;'
          '    end;'
          '  end;'
          ''
          '  if fsi.ShowHScroll and (Result = shtNoWhere) then'
          '  begin'
          '    if PtInRect(fsi.LeftArrow, pt) then Result := shtLeftArrow'
          
            '    else if PtInRect(fsi.RightArrow, pt) then Result := shtRight' +
            'Arrow'
          '    else if PtInRect(fsi.HThumb, pt) then Result := shtHorzThumb'
          '    else if PtInRect(fsi.HScroll, pt) then'
          '    begin'
          '      if pt.X < fsi.HThumb.Left then Result := shtPageLeft'
          '      else Result := shtPageRight;'
          '    end;'
          '  end;'
          'end;'
          ''
          
            'procedure TFsScrollContainer.MouseDown(Button: TMouseButton; Shi' +
            'ft: TShiftState; X, Y: Integer);'
          'var'
          '  sht: TScrollHitTest;'
          '  DoCapture: Boolean;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          'begin'
          '  DoCapture := True;'
          '  sht := Self.HitTest(X, Y);'
          ''
          '  case sht of'
          '    shtNoWhere, shtBorder: DoCapture := False;'
          
            '    shtLeftArrow: Self.ControlMessage(WM_HSCROLL, SB_LINELEFT, 0' +
            ');'
          
            '    shtRightArrow: Self.ControlMessage(WM_HSCROLL, SB_LINERIGHT,' +
            ' 0);'
          '    shtHorzThumb: ;'
          
            '    shtPageLeft: Self.ControlMessage(WM_HSCROLL, SB_PAGELEFT, 0)' +
            ';'
          
            '    shtPageRight: Self.ControlMessage(WM_HSCROLL, SB_PAGERIGHT, ' +
            '0);'
          '    shtTopArrow: Self.ControlMessage(WM_VSCROLL, SB_LINEUP, 0);'
          
            '    shtBottomArrow: Self.ControlMessage(WM_VSCROLL, SB_LINEDOWN,' +
            ' 0);'
          '    shtVertThumb: ;'
          '    shtPageUp: Self.ControlMessage(WM_VSCROLL, SB_PAGEUP, 0);'
          
            '    shtPageDown: Self.ControlMessage(WM_VSCROLL, SB_PAGEDOWN, 0)' +
            ';'
          '  end;'
          ''
          '  if DoCapture then'
          '  begin'
          '    FCaptureRegion := sht;'
          '    SetCapture(Self.Handle);'
          ''
          '    if FCaptureRegion in [shtVertThumb, shtHorzThumb] then'
          '    begin'
          '      Self.GetScrollInfo(fsi, vsi, hsi);'
          '      FCapturePoint.X := X - fsi.HThumb.Left;'
          '      FCapturePoint.Y := Y - fsi.VThumb.Top;'
          '    end'
          '    else FTimer.Enabled := True;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          
            'procedure TFsScrollContainer.MouseMove(Shift: TShiftState; X, Y:' +
            ' Integer);'
          'var'
          '  pt: TPoint;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  nPos: Integer;'
          'begin'
          '  case FCaptureRegion of'
          '    shtLeftArrow, shtRightArrow, shtPageLeft, shtPageRight,'
          '    shtTopArrow, shtBottomArrow, shtPageUp, shtPageDown:'
          '      begin'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          '        FTimer.Enabled := HitTest(pt.X, pt.Y) = FCaptureRegion;'
          '      end;'
          ''
          '    shtVertThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowVScroll then'
          '        begin'
          
            '          nPos := GetRealScrollBar.CalcVPos(fsi.VScroll, vsi, Y ' +
            '- FCapturePoint.Y);'
          ''
          '          if nPos >= hsi.nMin then'
          
            '            Self.ControlMessage(WM_VSCROLL, MakeLong(SB_THUMBTRA' +
            'CK, nPos),0);'
          '        end;'
          '      end;'
          ''
          '    shtHorzThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          
            '          nPos := GetRealScrollBar.CalcHPos(fsi.HScroll, hsi, X ' +
            '- FCapturePoint.X);'
          ''
          '          if nPos >= hsi.nMin then'
          
            '            Self.ControlMessage(WM_HSCROLL, MakeLong(SB_THUMBTRA' +
            'CK, nPos),0);'
          '        end;'
          '      end;'
          '  end;'
          ''
          '  inherited;'
          'end;'
          ''
          
            'procedure TFsScrollContainer.MouseUp(Button: TMouseButton; Shift' +
            ': TShiftState; X, Y: Integer);'
          'var'
          '  pt: TPoint;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          '  nPos: Integer;'
          'begin'
          '  ReleaseCapture;'
          '  FCaptureRegion := shtNoWhere;'
          '  FTimer.Enabled := False;'
          ''
          '  case FCaptureRegion of'
          '    shtVertThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          
            '          nPos := GetRealScrollBar.CalcVPos(fsi.VScroll, vsi, Y ' +
            '- FCapturePoint.Y);'
          ''
          '          if nPos >= hsi.nMin then'
          
            '            Self.ControlMessage(WM_VSCROLL, MakeLong(SB_THUMBPOS' +
            'ITION, nPos),0);'
          '        end;'
          '      end;'
          ''
          '    shtHorzThumb:'
          '      begin'
          '        Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '        if fsi.ShowHScroll then'
          '        begin'
          
            '          nPos := GetRealScrollBar.CalcHPos(fsi.HScroll, hsi, X ' +
            '- FCapturePoint.X);'
          ''
          '          if nPos >= hsi.nMin then'
          
            '            Self.ControlMessage(WM_HSCROLL, MakeLong(SB_THUMBPOS' +
            'ITION, nPos),0);'
          '        end;'
          '      end;'
          '  end;'
          '  '
          '  inherited;'
          'end;'
          ''
          
            'function TFsScrollContainer.NeedScrollBar(out HScroll: Boolean):' +
            ' Boolean;'
          'var'
          '  style: Integer;'
          '  si: TScrollInfo;'
          'begin'
          '  HScroll := False;'
          '  Result := False;'
          ''
          '  si.cbSize := SizeOf(si);'
          '  si.fMask := SIF_RANGE or SIF_PAGE;'
          ''
          
            '  HScroll := GetControlScrollInfo(si, False) and (si.nMax - si.n' +
            'Min + 1 > si.nPage);'
          ''
          '  si.cbSize := SizeOf(si);'
          '  si.fMask := SIF_RANGE or SIF_PAGE;'
          ''
          
            '  Result := GetControlScrollInfo(si, True) and (si.nMax - si.nMi' +
            'n + 1 > si.nPage);'
          'end;'
          ''
          'procedure TFsScrollContainer.OnTimer(Sender: TObject);'
          'var'
          '  pt: TPoint;'
          'begin'
          '  case FCaptureRegion of'
          
            '    shtLeftArrow: Self.ControlMessage(WM_HSCROLL, SB_LINELEFT, 0' +
            ');'
          
            '    shtRightArrow: Self.ControlMessage(WM_HSCROLL, SB_LINERIGHT,' +
            ' 0);'
          '    shtPageLeft:'
          '      begin'
          '        Self.ControlMessage(WM_HSCROLL, SB_PAGELEFT, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          
            '        if HitTest(pt.X, pt.Y) <> shtPageLeft then FTimer.Enable' +
            'd := False;'
          '      end;'
          '    shtPageRight:'
          '      begin'
          '        Self.ControlMessage(WM_HSCROLL, SB_PAGERIGHT, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          
            '        if HitTest(pt.X, pt.Y) <> shtPageLeft then FTimer.Enable' +
            'd := False;'
          '      end;'
          '    shtTopArrow: Self.ControlMessage(WM_VSCROLL, SB_LINEUP, 0);'
          
            '    shtBottomArrow: Self.ControlMessage(WM_VSCROLL, SB_LINEDOWN,' +
            ' 0);'
          '    shtPageUp:'
          '      begin'
          '        Self.ControlMessage(WM_VSCROLL, SB_PAGEUP, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          
            '        if HitTest(pt.X, pt.Y) <> shtPageUp then FTimer.Enabled ' +
            ':= False;'
          '      end;'
          '    shtPageDown:'
          '      begin'
          '        Self.ControlMessage(WM_VSCROLL, SB_PAGEDOWN, 0);'
          '        GetCursorPos(pt);'
          '        Windows.ScreenToClient(Handle, pt);'
          
            '        if HitTest(pt.X, pt.Y) <> shtPageDown then FTimer.Enable' +
            'd := False;'
          '      end;'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.Paint;'
          'var'
          '  sb: TFsCustomScrollBar;'
          '  r: TRect;'
          '  fsi: TFsScrollInfo;'
          '  vsi, hsi: TScrollInfo;'
          'begin'
          '  inherited;'
          ''
          
            '  if FMouseInControl then Canvas.Brush.Color := RGB(123, 228, 25' +
            '5)'
          '  else Canvas.Brush.Color := RGB(78, 160, 209);'
          ''
          '  r.Left := 0;'
          '  r.Top := 0;'
          '  r.Right := Self.Width;'
          '  r.Bottom := Self.Height;'
          ''
          '  Canvas.FrameRect(r);'
          ''
          
            '  if FMouseInControl then Canvas.Brush.Color := RGB(78, 160, 209' +
            ')'
          '  else Canvas.Brush.Color := TControlHack(FRealControl).Color;'
          ''
          '  r.Left := 1;'
          '  r.Top := 1;'
          '  r.Right := Self.Width - 1;'
          '  r.Bottom := Self.Height - 1;'
          ''
          '  Canvas.FrameRect(r);'
          ''
          '  sb := GetRealScrollBar;'
          ''
          '  Self.GetScrollInfo(fsi, vsi, hsi);'
          ''
          '  if fsi.ShowVScroll then'
          
            '    sb.DrawVScroll(Canvas.Handle, fsi.VScroll, fsi.TopArrow, fsi' +
            '.BottomArrow, fsi.VThumb);'
          ''
          '  if fsi.ShowHScroll then'
          
            '    sb.DrawHScroll(Canvas.Handle, fsi.HScroll, fsi.LeftArrow, fs' +
            'i.RightArrow, fsi.HThumb);'
          ''
          '  if fsi.ShowVScroll and fsi.ShowHScroll then'
          '    sb.DrawIntersect(Canvas.Handle, fsi.Intersect);'
          'end;'
          ''
          
            'procedure TFsScrollContainer.SetScrollBarDrawer(const Value: TFs' +
            'CustomScrollBar);'
          'begin'
          '  if Value <> FScrollBarDrawer then'
          '  begin'
          '    if Assigned(FScrollBarDrawer) then'
          '      FScrollBarDrawer.RemoveFreeNotification(Self);'
          ''
          '    FScrollBarDrawer := Value;'
          ''
          '    if Assigned(FScrollBarDrawer) then'
          '      FScrollBarDrawer.FreeNotification(Self);'
          ''
          '    Self.AdjustInnerControlBounds;'
          ''
          '    //Self.Invalidate;'
          '  end;'
          'end;'
          ''
          'procedure TFsScrollContainer.WMSize(var msgr: TWMSize);'
          'begin'
          '  inherited;'
          '  AdjustInnerControlBounds;'
          'end;'
          ''
          '{ TFsMemo }'
          ''
          'function TFsMemo.CreateRealControl: TControl;'
          'begin'
          '  Result := TFsBorderlessMemo.Create(Self);'
          '  TFsBorderlessMemo(Result).ScrollBars := ssVertical;'
          'end;'
          ''
          'function TFsMemo.GetLines: TStrings;'
          'begin'
          '  Result := TFsBorderlessMemo(RealControl).Lines;'
          'end;'
          ''
          'function TFsMemo.GetScrollBars: TScrollStyle;'
          'begin'
          '  Result := TFsBorderlessMemo(RealControl).ScrollBars;'
          'end;'
          ''
          'procedure TFsMemo.SetLines(const Value: TStrings);'
          'begin'
          '  TFsBorderlessMemo(RealControl).Lines := Value;'
          'end;'
          ''
          'procedure TFsMemo.SetScrollBars(const Value: TScrollStyle);'
          'begin'
          '  TFsBorderlessMemo(RealControl).ScrollBars := Value;'
          'end;'
          ''
          '{ TFsBorderlessMemo }'
          ''
          
            'procedure TFsBorderlessMemo.WMNCCalcSize(var msgr: TWMNCCalcSize' +
            ');'
          'begin'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsBorderlessMemo.WMNCPaint(var msgr: TWMNCPaint);'
          'begin'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsBorderlessMemo.WndProc(var msgr: TMessage);'
          'var'
          '  vsi1, hsi1, vsi2, hsi2: TScrollInfo;'
          '  style: Integer;'
          '  changed: Boolean;'
          'begin'
          
            '  if not HandleAllocated or (msgr.Msg = WM_CREATE) or (msgr.Msg ' +
            '= WM_NCCREATE)'
          '    or (msgr.Msg = WM_DESTROY) or (msgr.Msg = WM_NCDESTROY) then'
          '  begin'
          '    inherited;'
          '    Exit;'
          '  end;'
          ''
          '  changed := False;'
          ''
          '  style := GetWindowLong(Self.Handle, GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi1.cbSize := SizeOf(vsi1);'
          '    vsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi1);'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi1.cbSize := SizeOf(hsi1);'
          '    hsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi1);'
          '  end;'
          ''
          '  inherited;'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi2.cbSize := SizeOf(vsi2);'
          '    vsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi2);'
          ''
          '    if (vsi1.nMin <> vsi2.nMin) or (vsi1.nMax <> vsi2.nMax)'
          
            '      or (vsi1.nPage <> vsi2.nPage) or (vsi1.nPos <> vsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi2.cbSize := SizeOf(hsi2);'
          '    hsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi2);'
          ''
          '    if (hsi1.nMin <> hsi2.nMin) or (hsi1.nMax <> hsi2.nMax)'
          
            '      or (hsi1.nPage <> hsi2.nPage) or (hsi1.nPos <> hsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if changed and (Self.Parent is TFsScrollContainer) then'
          '  begin'
          '    TFsScrollContainer(Self.Parent).AdjustInnerControlBounds;'
          '    Self.Parent.Invalidate;'
          '  end;'
          'end;'
          ''
          '{ TFsListBox }'
          ''
          'function TFsListBox.CreateRealControl: TControl;'
          'begin'
          '  Result := TFsBorderlessListBox.Create(Self);'
          'end;'
          ''
          'function TFsListBox.GetItems: TStrings;'
          'begin'
          '  Result := TFsBorderlessListBox(RealControl).Items;'
          'end;'
          ''
          'procedure TFsListBox.SetItems(const Value: TStrings);'
          'begin'
          '  TFsBorderlessListBox(RealControl).Items := Value;'
          'end;'
          ''
          '{ TFsBorderlessListBox }'
          ''
          
            'procedure TFsBorderlessListBox.WMNCCalcSize(var msgr: TWMNCCalcS' +
            'ize);'
          'begin'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsBorderlessListBox.WMNCPaint(var msgr: TWMNCPaint);'
          'begin'
          '  msgr.Result := 0;'
          'end;'
          ''
          'procedure TFsBorderlessListBox.WndProc(var msgr: TMessage);'
          'var'
          '  vsi1, hsi1, vsi2, hsi2: TScrollInfo;'
          '  style: Integer;'
          '  changed: Boolean;'
          'begin'
          
            '  if not HandleAllocated or (msgr.Msg = WM_CREATE) or (msgr.Msg ' +
            '= WM_NCCREATE)'
          '    or (msgr.Msg = WM_DESTROY) or (msgr.Msg = WM_NCDESTROY) then'
          '  begin'
          '    inherited;'
          '    Exit;'
          '  end;'
          ''
          '  changed := False;'
          ''
          '  style := GetWindowLong(Self.Handle, GWL_STYLE);'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi1.cbSize := SizeOf(vsi1);'
          '    vsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi1);'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi1.cbSize := SizeOf(hsi1);'
          '    hsi1.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi1);'
          '  end;'
          ''
          '  inherited;'
          ''
          '  if style and WS_VSCROLL <> 0 then'
          '  begin'
          '    vsi2.cbSize := SizeOf(vsi2);'
          '    vsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_VERT, vsi2);'
          ''
          '    if (vsi1.nMin <> vsi2.nMin) or (vsi1.nMax <> vsi2.nMax)'
          
            '      or (vsi1.nPage <> vsi2.nPage) or (vsi1.nPos <> vsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if style and WS_HSCROLL <> 0 then'
          '  begin'
          '    hsi2.cbSize := SizeOf(hsi2);'
          '    hsi2.fMask := SIF_RANGE or SIF_PAGE or SIF_POS;'
          '    GetScrollInfo(Self.Handle, SB_HORZ, hsi2);'
          ''
          '    if (hsi1.nMin <> hsi2.nMin) or (hsi1.nMax <> hsi2.nMax)'
          
            '      or (hsi1.nPage <> hsi2.nPage) or (hsi1.nPos <> hsi2.nPos) ' +
            'then'
          '      changed := True;'
          '  end;'
          ''
          '  if changed and (Self.Parent is TFsScrollContainer) then'
          '  begin'
          '    TFsScrollContainer(Self.Parent).AdjustInnerControlBounds;'
          '    Self.Parent.Invalidate;'
          '  end;'
          'end;'
          ''
          'initialization'
          ''
          'finalization'
          '  DefaultScrollBar.Free;'
          '  '
          'end.')
      end
    end
    object TabSheet3: TTabSheet
      Caption = 'ListView'
      ImageIndex = 2
      object FsListView1: TFsListView
        Left = 0
        Top = 0
        Width = 850
        Height = 509
        Align = alClient
        BevelInner = bvNone
        BevelOuter = bvRaised
        BevelKind = bkFlat
        ParentBackground = False
        ScrollBarDrawer = FsFlatScrollBar1
        Columns = <>
        ViewStyle = vsReport
      end
    end
    object TabSheet4: TTabSheet
      Caption = 'TreeView'
      ImageIndex = 3
      object FsTreeView1: TFsTreeView
        Left = 0
        Top = 0
        Width = 850
        Height = 509
        Align = alClient
        BevelInner = bvNone
        BevelOuter = bvRaised
        BevelKind = bkFlat
        ParentBackground = False
        ScrollBarDrawer = FsFlatScrollBar1
      end
    end
  end
  object npdMinButton: TFsNinePitchDrawable
    Graphic.Data = {
      621F0000424D621F00000000000036000000280000007E000000150000000100
      1800000000002C1F000000000000000000000000000000000000874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A207D451E7D451E7D
      451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E
      7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E8F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57307D451E7D451E7D451E7D
      451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E
      7D451E7D451E7D451E7D451E7D451E7D451E7D451E8F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57300000874A20C99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6E874A207D451EBB8F66BB8F66BB8F
      66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB
      8F66BB8F66BB8F66BB8F66BB8F66BB8F667D451E8F5730CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA1788F57308F5730CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA1788F57307D451EBB8F66BB8F66BB8F66BB8F
      66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB
      8F66BB8F66BB8F66BB8F66BB8F667D451E8F5730CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA1788F57300000874A20C99A6E9F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40CDA1788F57300000874A20C99A6E9F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E94
      5B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB
      8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1
      788F57300000874A20C99A6E9F62329F62329F6232FFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFFFFF9F62329F62329F62329F62329F62329F62329F6232C9
      9A6E874A207D451EBB8F66945B2E945B2E945B2ED8A278D8A278D8A278D8A278
      D8A278D8A278D8A278945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F
      667D451E8F5730CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA178
      8F57308F5730CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F
      57307D451EBB8F66945B2E945B2E945B2EE2B097E2B097E2B097E2B097E2B097
      E2B097E2B097945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D45
      1E8F5730CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F5730
      0000874A20C99A6E9F62329F62329F6232FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFF9F62329F62329F62329F62329F62329F62329F6232C99A6E874A
      207D451EBB8F66945B2E945B2E945B2ED8A278D8A278D8A278D8A278D8A278D8
      A278D8A278945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D451E
      8F5730CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57308F
      5730CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57307D45
      1EBB8F66945B2E945B2E945B2EE2B097E2B097E2B097E2B097E2B097E2B097E2
      B097945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730
      CDA178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFA66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57300000874A
      20C99A6E9F62329F62329F6232FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFF9F62329F62329F62329F62329F62329F62329F6232C99A6E874A207D451E
      BB8F66945B2E945B2E945B2ED8A278D8A278D8A278D8A278D8A278D8A278D8A2
      78945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730CD
      A178A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57308F5730CDA1
      78A66D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57307D451EBB8F66
      945B2E945B2E945B2EE2B097E2B097E2B097E2B097E2B097E2B097E2B097945B
      2E945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A6
      6D40A66D40A66D40FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA66D40
      A66D40A66D40A66D40A66D40A66D40A66D40CDA1788F57300000874A20C99A6E
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F6232C99A6E874A207D451EBB8F6694
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40CDA1788F57300000874A20CF9F72A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534CF9F72874A207D451EC0946A985E30985E30985E30985E30985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42D2A67C8F57308F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      D2A67C8F57307D451EC0946A985E30985E30985E30985E30985E30985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30C0
      946A7D451E8F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A6
      7C8F57300000874A20CF9F72A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534CF
      9F72874A207D451EC0946A985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30C094
      6A7D451E8F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C
      8F57308F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F
      57307D451EC0946A985E30985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30C0946A7D45
      1E8F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F5730
      0000874A20CF9F72A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534CF9F72874A
      207D451EC0946A985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30985E30985E30985E30985E30985E30C0946A7D451E
      8F5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57308F
      5730D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57307D45
      1EC0946A985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30985E30985E30985E30985E30C0946A7D451E8F5730
      D2A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57300000874A
      20CF9F72A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534CF9F72874A207D451E
      C0946A985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30985E30985E30985E30985E30985E30C0946A7D451E8F5730D2
      A67CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57308F5730D2A6
      7CAA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57307D451EC0946A
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57300000874A20CF9F72
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534CF9F72874A207D451EC0946A98
      5E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042D2A67C8F57307D451EC0946A985E3098
      5E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042D2A67C8F57300000874A20CF9F72A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534CF9F72874A207D451EC0946A985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042D2A67C8F57307D451EC0946A985E30985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042D2A67C8F57300000874A20CF9F72A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534CF9F72874A207D451EC0946A985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042D2A67C8F57307D451EC0946A985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042D2A67C8F57300000874A20CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72874A207D451EC0946AC0946AC0946AC0946AC0946AC0
      946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946A
      C0946AC0946AC0946A7D451E8F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67C8F57308F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67C8F57307D451EC0946AC0946AC0946AC0946AC0946AC0946AC0
      946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946A
      C0946AC0946A7D451E8F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67C8F57300000874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A207D451E7D451E7D451E7D451E7D451E7D451E7D451E7D45
      1E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D
      451E7D451E7D451E8F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57307D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D45
      1E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D
      451E7D451E8F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57300000}
    MarginLeft = 0
    MarginRight = 0
    MarginTop = 0
    MarginBottom = 0
    Transparent = False
    TransparentColor = 50266367
    RowCount = 1
    ColCount = 6
    Left = 32
    Top = 24
  end
  object npdTopBorder: TFsNinePitchDrawable
    Graphic.Data = {
      2E610000424D2E6100000000000036000000280000008E0000003A0000000100
      180000000000F8600000000000000000000000000000000000008F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57300000CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA1780000A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D400000A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D400000A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D400000A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      0000A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D400000A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D400000A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D400000A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D400000A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D400000A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D400000A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D400000A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      0000A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D400000AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70420000AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA70420000AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA70420000AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70420000AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA70420000AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA70420000AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      0000AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA70420000AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70420000AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA70420000AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA70420000AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70420000D2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67C00008F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57300000874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      0000C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6E00009F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F623200009F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F623200009F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F623200009F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F623200009F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F623200009F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F623200009F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      00009F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F623200009F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F623200009F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F623200009F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F623200009F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F623200009F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62320000A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A465340000A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      0000A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A465340000A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A465340000A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A465340000A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A465340000A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A465340000A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A465340000A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A465340000A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      0000A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A465340000A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534A46534A46534A465340000CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF
      9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF
      9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF
      9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF
      9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F720000874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A200000}
    MarginLeft = 7
    MarginRight = 7
    MarginTop = 0
    MarginBottom = 0
    Transparent = False
    TransparentColor = 50266367
    RowCount = 2
    ColCount = 1
    Left = 176
    Top = 24
  end
  object npdClose: TFsNinePitchDrawable
    Graphic.Data = {
      621F0000424D621F00000000000036000000280000007E000000150000000100
      1800000000002C1F0000000000000000000000000000000000000000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A400000000A42929EF2929EF29
      29EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF
      2929EF2929EF2929EF2929EF2929EF2929EF0000A40000A42626DE2626DE2626
      DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE26
      26DE2626DE2626DE2626DE2626DE2626DE0000A40000A43838F03838F03838F0
      3838F03838F03838F03838F03838F03838F03838F03838F03838F03838F03838
      F03838F03838F03838F03838F03838F00000A40000A43838F03838F03838F038
      38F03838F03838F03838F03838F03838F03838F03838F03838F03838F03838F0
      3838F03838F03838F03838F03838F00000A40000A42626DE2626DE2626DE2626
      DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE2626DE26
      26DE2626DE2626DE2626DE2626DE0000A40000A43838F03838F03838F03838F0
      3838F03838F03838F03838F03838F03838F03838F03838F03838F03838F03838
      F03838F03838F03838F03838F00000A400000000A42929EF0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC2929EF0000A40000A42626DE0000BE0000BE0000BE
      0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000
      BE0000BE0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D012
      12D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D0
      1212D01212D01212D03838F00000A40000A43838F01212D01212D01212D01212
      D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D012
      12D01212D01212D03838F00000A40000A42626DE0000BE0000BE0000BE0000BE
      0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000
      BE0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D01212D012
      12D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D0
      1212D01212D03838F00000A400000000A42929EF0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC2929EF0000A40000A42626DE0000BE0000BE0000BE0000BE00
      00BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE
      0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D01212D01212
      D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D012
      12D01212D03838F00000A40000A43838F01212D01212D01212D01212D01212D0
      1212D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212
      D01212D03838F00000A40000A42626DE0000BE0000BE0000BE0000BE0000BE00
      00BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE
      0000BE2626DE0000A40000A43838F01212D01212D01212D01212D01212D01212
      D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D012
      12D03838F00000A400000000A42929EF0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC2929EF0000A40000A42626DE0000BE0000BE0000BE0000BE0000BE0000
      BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE00
      00BE2626DE0000A40000A43838F01212D01212D01212D01212D01212D01212D0
      1212D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212
      D03838F00000A40000A43838F01212D01212D01212D01212D01212D01212D012
      12D01212D01212D01212D01212D01212D01212D01212D01212D01212D01212D0
      3838F00000A40000A42626DE0000BE0000BE0000BE0000BE0000BE0000BE0000
      BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE0000BE26
      26DE0000A40000A43838F01212D01212D01212D01212D01212D01212D01212D0
      1212D01212D01212D01212D01212D01212D01212D01212D01212D01212D03838
      F00000A400000000A42929EF0000CC0000CC0000CC9898EAFEFEFE0000CC0000
      CC0000CC0000CC0000CC0000CC0000CCFEFEFE9898EA0000CC0000CC0000CC29
      29EF0000A40000A42626DE0000BE0000BE0000BE3645C88698DC0000BE0000BE
      0000BE0000BE0000BE0000BE0000BE8AA0E53A4BD00000BE0000BE0000BE2626
      DE0000A40000A43838F01212D01212D01212D09F9FECFEFEFE1212D01212D012
      12D01212D01212D01212D01212D0FEFEFE9F9FEC1212D01212D01212D03838F0
      0000A40000A43838F01212D01212D01212D09F9FECFEFEFE1212D01212D01212
      D01212D01212D01212D01212D0FEFEFE9F9FEC1212D01212D01212D03838F000
      00A40000A42626DE0000BE0000BE0000BE6158BBBBAFCB0000BE0000BE0000BE
      0000BE0000BE0000BE0000BEBCB2CF635ABE0000BE0000BE0000BE2626DE0000
      A40000A43838F01212D01212D01212D09F9FECFEFEFE1212D01212D01212D012
      12D01212D01212D01212D0FEFEFE9F9FEC1212D01212D01212D03838F00000A4
      00000000A42929EF0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC
      0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC2929EF0000
      A40000A42626DE0000BE0000BE0000BE8697DC8697DC8698DD0000BE0000BE00
      00BE0000BE0000BE8A9FE48A9FE58AA0E50000BE0000BE0000BE2626DE0000A4
      0000A43838F01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212
      D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D03838F00000A400
      00A43838F01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D0
      1212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D03838F00000A40000
      A42626DE0000BE0000BE0000BEBAAECABAAECABAAECB0000BE0000BE0000BE00
      00BE0000BEBCB0CEBCB1CEBCB1CE0000BE0000BE0000BE2626DE0000A40000A4
      3838F01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D01212
      D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D03838F00000A400000000
      A42929EF0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC00
      00CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC2929EF0000A40000A4
      2626DE0000BE0000BE0000BE0000BE8697DC8698DC8699DE0000BE0000BE0000
      BE899EE28A9EE48A9FE40000BE0000BE0000BE0000BE2626DE0000A40000A438
      38F01212D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D0
      FEFEFEFEFEFEFEFEFE1212D01212D01212D01212D03838F00000A40000A43838
      F01212D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D0FE
      FEFEFEFEFEFEFEFE1212D01212D01212D01212D03838F00000A40000A42626DE
      0000BE0000BE0000BE0000BEBAAECABAAECABAAECB0000BE0000BE0000BEBBAF
      CDBBAFCEBBAFCE0000BE0000BE0000BE0000BE2626DE0000A40000A43838F012
      12D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D0FEFEFE
      FEFEFEFEFEFE1212D01212D01212D01212D03838F00000A400000000A42929EF
      0000CC0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CCFEFEFEFEFE
      FEEEEEFB0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42626DE00
      00BE0000BE0000BE0000BE0000BE8697DC8698DD8799DE0000BE889CE0889DE2
      7A8EDF0000BE0000BE0000BE0000BE0000BE2626DE0000A40000A43838F01212
      D01212D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D0FEFEFEFEFEFEEF
      EFFB1212D01212D01212D01212D01212D03838F00000A40000A43838F01212D0
      1212D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D0FEFEFEFEFEFEEFEF
      FB1212D01212D01212D01212D01212D03838F00000A40000A42626DE0000BE00
      00BE0000BE0000BE0000BEB9ACCAB9ACCABAADCB0000BEBAAECCBAAECDAB9FCA
      0000BE0000BE0000BE0000BE0000BE2626DE0000A40000A43838F01212D01212
      D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D0FEFEFEFEFEFEEFEFFB12
      12D01212D01212D01212D01212D03838F00000A400000000A42929EF0000CC00
      00CC0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE0000CC
      0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42626DE0000BE0000
      BE0000BE0000BE0000BE0000BE8697DC8699DE8799DE879ADF889CE10000BE00
      00BE0000BE0000BE0000BE0000BE2626DE0000A40000A43838F01212D01212D0
      1212D01212D01212D01212D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212
      D01212D01212D01212D01212D03838F00000A40000A43838F01212D01212D012
      12D01212D01212D01212D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212D0
      1212D01212D01212D01212D03838F00000A40000A42626DE0000BE0000BE0000
      BE0000BE0000BE0000BEB9ACCAB9ACCAB9ACCBBAADCBBAAECC0000BE0000BE00
      00BE0000BE0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D0
      1212D01212D01212D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212D01212
      D01212D01212D01212D03838F00000A400000000A42929EF0000CC0000CC0000
      CC0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC2929EF0000A40000A42626DE0000BE0000BE0000BE
      0000BE0000BE0000BE0000BE8698DD8699DE8799DE0000BE0000BE0000BE0000
      BE0000BE0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D012
      12D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D01212D0
      1212D01212D01212D03838F00000A40000A43838F01212D01212D01212D01212
      D01212D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D01212D012
      12D01212D01212D03838F00000A40000A42626DE0000BE0000BE0000BE0000BE
      0000BE0000BE0000BEB9ABCAB9ACCAB9ACCB0000BE0000BE0000BE0000BE0000
      BE0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D01212D012
      12D01212D01212D0FEFEFEFEFEFEFEFEFE1212D01212D01212D01212D01212D0
      1212D01212D03838F00000A400000000A42929EF0000CC0000CC0000CC0000CC
      0000CC0000CCFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000
      CC0000CC0000CC2929EF0000A40000A42626DE0000BE0000BE0000BE0000BE00
      00BE0000BE8596DB8697DC8698DD8698DD8799DE0000BE0000BE0000BE0000BE
      0000BE0000BE2626DE0000A40000A43838F01212D01212D01212D01212D01212
      D01212D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212D01212D01212D012
      12D01212D03838F00000A40000A43838F01212D01212D01212D01212D01212D0
      1212D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212D01212D01212D01212
      D01212D03838F00000A40000A42626DE0000BE0000BE0000BE0000BE0000BE00
      00BEB8AAC9B9ABC9B9ABCAB9ABCAB9ABCA0000BE0000BE0000BE0000BE0000BE
      0000BE2626DE0000A40000A43838F01212D01212D01212D01212D01212D01212
      D0FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE1212D01212D01212D01212D01212D012
      12D03838F00000A400000000A42929EF0000CC0000CC0000CC0000CC0000CCFE
      FEFEFEFEFEFEFEFE0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC
      0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC0000CC8595
      DA8596DB8596DB0000CC8697DC8698DD8698DD0000CC0000CC0000CC0000CC00
      00CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC0000CCFEFEFE
      FEFEFEFEFEFE0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC0000
      CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC0000CCFEFEFEFE
      FEFEFEFEFE0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC0000CC
      2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC0000CCB8AAC9B8AA
      CAB8AACA0000CCB8AACAB9ABCBB9AACB0000CC0000CC0000CC0000CC0000CC29
      29EF0000A40000A42929EF0000CC0000CC0000CC0000CC0000CCFEFEFEFEFEFE
      FEFEFE0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC0000CC2929
      EF0000A400000000A42929EF0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFE
      FE0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC29
      29EF0000A40000A42929EF0000CC0000CC0000CC0000CC8494D88595D98595DA
      0000CC0000CC0000CC8697DC8698DD8698DD0000CC0000CC0000CC0000CC2929
      EF0000A40000A42929EF0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE00
      00CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC2929EF
      0000A40000A42929EF0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000
      CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC2929EF00
      00A40000A42929EF0000CC0000CC0000CC0000CCB8AAC8B8AAC9B8AAC90000CC
      0000CC0000CCB8AACAB9AACBB9AACB0000CC0000CC0000CC0000CC2929EF0000
      A40000A42929EF0000CC0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC00
      00CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000CC2929EF0000A4
      00000000A42929EF0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC
      0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC2929EF0000
      A40000A42929EF0000CC0000CC0000CC8493D48494D68494D70000CC0000CC00
      00CC0000CC0000CC8697DC8697DC8697DC0000CC0000CC0000CC2929EF0000A4
      0000A42929EF0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000
      CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC2929EF0000A400
      00A42929EF0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC
      0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC2929EF0000A40000
      A42929EF0000CC0000CC0000CCB7A9C6B8AAC7B8AAC80000CC0000CC0000CC00
      00CC0000CCB8AACAB8AACAB8AACA0000CC0000CC0000CC2929EF0000A40000A4
      2929EF0000CC0000CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC0000
      CC0000CCFEFEFEFEFEFEFEFEFE0000CC0000CC0000CC2929EF0000A400000000
      A42929EF0000CC0000CC0000CC9898EAFEFEFE0000CC0000CC0000CC0000CC00
      00CC0000CC0000CCFEFEFE9898EA0000CC0000CC0000CC2929EF0000A40000A4
      2929EF0000CC0000CC0000CC3541C68493D40000CC0000CC0000CC0000CC0000
      CC0000CC0000CC8697DB3645CE0000CC0000CC0000CC2929EF0000A40000A429
      29EF0000CC0000CC0000CC9898EAFEFEFE0000CC0000CC0000CC0000CC0000CC
      0000CC0000CCFEFEFE9898EA0000CC0000CC0000CC2929EF0000A40000A42929
      EF0000CC0000CC0000CC9898EAFEFEFE0000CC0000CC0000CC0000CC0000CC00
      00CC0000CCFEFEFE9898EA0000CC0000CC0000CC2929EF0000A40000A42929EF
      0000CC0000CC0000CC5E53BBB7A9C60000CC0000CC0000CC0000CC0000CC0000
      CC0000CCB8AACA5F54BF0000CC0000CC0000CC2929EF0000A40000A42929EF00
      00CC0000CC0000CC9898EAFEFEFE0000CC0000CC0000CC0000CC0000CC0000CC
      0000CCFEFEFE9898EA0000CC0000CC0000CC2929EF0000A400000000A42929EF
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC2929EF0000A400000000A42929EF0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC2929EF0000A400000000A42929EF0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000
      CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC
      0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000
      CC0000CC0000CC2929EF0000A40000A42929EF0000CC0000CC0000CC0000CC00
      00CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC0000CC
      0000CC0000CC2929EF0000A400000000A42929EF2929EF2929EF2929EF2929EF
      2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929
      EF2929EF2929EF2929EF0000A40000A42929EF2929EF2929EF2929EF2929EF29
      29EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF
      2929EF2929EF2929EF0000A40000A42929EF2929EF2929EF2929EF2929EF2929
      EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF29
      29EF2929EF2929EF0000A40000A42929EF2929EF2929EF2929EF2929EF2929EF
      2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929
      EF2929EF2929EF0000A40000A42929EF2929EF2929EF2929EF2929EF2929EF29
      29EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF
      2929EF2929EF0000A40000A42929EF2929EF2929EF2929EF2929EF2929EF2929
      EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF2929EF29
      29EF2929EF0000A400000000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A400
      00A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000A4
      0000A40000A40000A40000A40000A40000A40000A40000A40000A40000A40000
      A40000A40000}
    MarginLeft = 0
    MarginRight = 0
    MarginTop = 0
    MarginBottom = 0
    Transparent = False
    TransparentColor = 50266367
    RowCount = 1
    ColCount = 6
    Left = 88
    Top = 24
  end
  object npdBottomBorder: TFsNinePitchDrawable
    Graphic.Data = {
      960D0000424D960D00000000000036000000280000008E000000080000000100
      180000000000600D0000000000000000000000000000000000008F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57300000CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA1780000CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA17800008F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57300000874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A200000C99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      0000C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A
      6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6E0000874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A200000}
    MarginLeft = 7
    MarginRight = 7
    MarginTop = 0
    MarginBottom = 0
    Transparent = False
    TransparentColor = 50266367
    RowCount = 2
    ColCount = 1
    Left = 32
    Top = 104
  end
  object npdLeftBorder: TFsNinePitchDrawable
    Graphic.Data = {
      96090000424D9609000000000000360000002800000008000000640000000100
      1800000000006009000000000000000000000000000000000000874A20874A20
      874A20874A208F57308F57308F57308F5730874A20C99A6EC99A6EC99A6E8F57
      30CDA178CDA178CDA178874A20C99A6EC99A6EC99A6E8F5730CDA178CDA178CD
      A178874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6EC99A6E8F5730CDA178CDA178CDA178874A20C99A6E9F62329F62328F57
      30CDA178A66D40A66D40874A20C99A6E9F62329F62328F5730CDA178A66D40A6
      6D40874A20C99A6E9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E
      9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E9F62329F62328F57
      30CDA178A66D40A66D40874A20C99A6E9F62329F62328F5730CDA178A66D40A6
      6D40874A20C99A6E9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E
      9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E9F62329F62328F57
      30CDA178A66D40A66D40874A20C99A6E9F62329F62328F5730CDA178A66D40A6
      6D40874A20C99A6E9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E
      9F62329F62328F5730CDA178A66D40A66D40874A20C99A6E9F62329F62328F57
      30CDA178A66D40A66D40874A20CF9F72A46534A465348F5730D2A67CAA7042AA
      7042874A20CF9F72A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72
      A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72A46534A465348F57
      30D2A67CAA7042AA7042874A20CF9F72A46534A465348F5730D2A67CAA7042AA
      7042874A20CF9F72A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72
      A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72A46534A465348F57
      30D2A67CAA7042AA7042874A20CF9F72A46534A465348F5730D2A67CAA7042AA
      7042874A20CF9F72A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72
      A46534A465348F5730D2A67CAA7042AA7042874A20CF9F72A46534A465348F57
      30D2A67CAA7042AA7042874A20CF9F72CF9F72CF9F728F5730D2A67CD2A67CD2
      A67C874A20874A20874A20874A208F57308F57308F57308F5730}
    MarginLeft = 0
    MarginRight = 0
    MarginTop = 29
    MarginBottom = 4
    Transparent = False
    TransparentColor = 50266367
    RowCount = 1
    ColCount = 2
    Left = 104
    Top = 104
  end
  object npdMaxButton: TFsNinePitchDrawable
    Graphic.Data = {
      621F0000424D621F00000000000036000000280000007E000000150000000100
      1800000000002C1F000000000000000000000000000000000000874A20874A20
      874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A
      20874A20874A20874A20874A20874A20874A20874A20874A207D451E7D451E7D
      451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E
      7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E8F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57307D451E7D451E7D451E7D
      451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E
      7D451E7D451E7D451E7D451E7D451E7D451E7D451E8F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57300000874A20C99A6EC99A6EC9
      9A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6EC99A6E
      C99A6EC99A6EC99A6EC99A6EC99A6EC99A6E874A207D451EBB8F66BB8F66BB8F
      66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB
      8F66BB8F66BB8F66BB8F66BB8F66BB8F667D451E8F5730CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA178CDA1788F57308F5730CDA178CDA178CDA178CD
      A178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA1788F57307D451EBB8F66BB8F66BB8F66BB8F
      66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB8F66BB
      8F66BB8F66BB8F66BB8F66BB8F667D451E8F5730CDA178CDA178CDA178CDA178
      CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA178CDA1
      78CDA178CDA178CDA178CDA1788F57300000874A20C99A6E9F62329F62329F62
      329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F
      62329F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F62329F6232
      9F62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F62
      329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40CDA1788F57300000874A20C99A6E9F62329F62329F62329F62329F62329F
      62329F62329F62329F62329F62329F62329F62329F62329F62329F62329F6232
      9F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E94
      5B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40CDA1788F57308F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      CDA1788F57307D451EBB8F66945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2EBB
      8F667D451E8F5730CDA178A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40CDA1
      788F57300000874A20C99A6E9F62329F62329F6232FEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE9F62329F62329F6232C9
      9A6E874A207D451EBB8F66945B2E945B2E945B2ED7A177D7A177D7A177D7A177
      D7A177D7A177D7A177D7A177D7A177D7A177D7A177945B2E945B2E945B2EBB8F
      667D451E8F5730CDA178A66D40A66D40A66D40FEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEA66D40A66D40A66D40CDA178
      8F57308F5730CDA178A66D40A66D40A66D40FEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEA66D40A66D40A66D40CDA1788F
      57307D451EBB8F66945B2E945B2E945B2ED7A177D7A177D7A177D7A177D7A177
      D7A177D7A177D7A177D7A177D7A177D7A177945B2E945B2E945B2EBB8F667D45
      1E8F5730CDA178A66D40A66D40A66D40FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEA66D40A66D40A66D40CDA1788F5730
      0000874A20C99A6E9F62329F62329F6232FEFEFE9F62329F62329F62329F6232
      9F62329F62329F62329F62329F6232FEFEFE9F62329F62329F6232C99A6E874A
      207D451EBB8F66945B2E945B2E945B2ED7A177945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2E945B2ED7A177945B2E945B2E945B2EBB8F667D451E
      8F5730CDA178A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57308F
      5730CDA178A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57307D45
      1EBB8F66945B2E945B2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E94
      5B2E945B2E945B2E945B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730
      CDA178A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D
      40A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57300000874A
      20C99A6E9F62329F62329F6232FEFEFE9F62329F62329F62329F62329F62329F
      62329F62329F62329F6232FEFEFE9F62329F62329F6232C99A6E874A207D451E
      BB8F66945B2E945B2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2E945B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730CD
      A178A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57308F5730CDA1
      78A66D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57307D451EBB8F66
      945B2E945B2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E945B2E945B
      2E945B2E945B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730CDA178A6
      6D40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40
      A66D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57300000874A20C99A6E
      9F62329F62329F6232FEFEFE9F62329F62329F62329F62329F62329F62329F62
      329F62329F6232FEFEFE9F62329F62329F6232C99A6E874A207D451EBB8F6694
      5B2E945B2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2E945B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D
      40A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40
      A66D40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40A66D40FEFEFEA66D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E94
      5B2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E
      945B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D
      40A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A6
      6D40FEFEFEA66D40A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F
      62329F6232FEFEFE9F62329F62329F62329F62329F62329F62329F62329F6232
      9F6232FEFEFE9F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B
      2E945B2ED7A177945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E94
      5B2ED7A177945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40
      A66D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D
      40FEFEFEA66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A6
      6D40FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40
      FEFEFEA66D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B
      2ED7A177945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2ED7
      A177945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40
      FEFEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFE
      FEA66D40A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F62
      32FEFEFE9F62329F62329F62329F62329F62329F62329F62329F62329F6232FE
      FEFE9F62329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2E
      D7A177945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2ED7A1
      77945B2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40FE
      FEFEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFE
      A66D40A66D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40FEFE
      FEA66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFEA6
      6D40A66D40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2ED7A177
      945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2ED7A177945B
      2E945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40FEFEFEA6
      6D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFEA66D40
      A66D40A66D40CDA1788F57300000874A20C99A6E9F62329F62329F6232FEFEFE
      9F62329F62329F62329F62329F62329F62329F62329F62329F6232FEFEFE9F62
      329F62329F6232C99A6E874A207D451EBB8F66945B2E945B2E945B2ED7A17794
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2ED7A177945B2E
      945B2E945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40FEFEFEA66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFEA66D40A6
      6D40A66D40CDA1788F57308F5730CDA178A66D40A66D40A66D40FEFEFEA66D40
      A66D40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFEA66D40A66D
      40A66D40CDA1788F57307D451EBB8F66945B2E945B2E945B2ED7A177945B2E94
      5B2E945B2E945B2E945B2E945B2E945B2E945B2E945B2ED7A177945B2E945B2E
      945B2EBB8F667D451E8F5730CDA178A66D40A66D40A66D40FEFEFEA66D40A66D
      40A66D40A66D40A66D40A66D40A66D40A66D40A66D40FEFEFEA66D40A66D40A6
      6D40CDA1788F57300000874A20CF9F72A46534A46534A46534FEFEFEA46534A4
      6534A46534A46534A46534A46534A46534A46534A46534FEFEFEA46534A46534
      A46534CF9F72874A207D451EC0946A985E30985E30985E30D7A177985E30985E
      30985E30985E30985E30985E30985E30985E30985E30D7A177985E30985E3098
      5E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042FEFEFEAA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042FEFEFEAA7042AA7042AA70
      42D2A67C8F57308F5730D2A67CAA7042AA7042AA7042FEFEFEAA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042FEFEFEAA7042AA7042AA7042
      D2A67C8F57307D451EC0946A985E30985E30985E30D7A177985E30985E30985E
      30985E30985E30985E30985E30985E30985E30D7A177985E30985E30985E30C0
      946A7D451E8F5730D2A67CAA7042AA7042AA7042FEFEFEAA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042FEFEFEAA7042AA7042AA7042D2A6
      7C8F57300000874A20CF9F72A46534A46534A46534FEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEA46534A46534A46534CF
      9F72874A207D451EC0946A985E30985E30985E30D7A177D7A177D7A177D7A177
      D7A177D7A177D7A177D7A177D7A177D7A177D7A177985E30985E30985E30C094
      6A7D451E8F5730D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C
      8F57308F5730D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F
      57307D451EC0946A985E30985E30985E30D7A177D7A177D7A177D7A177D7A177
      D7A177D7A177D7A177D7A177D7A177D7A177985E30985E30985E30C0946A7D45
      1E8F5730D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F5730
      0000874A20CF9F72A46534A46534A46534FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEA46534A46534A46534CF9F72874A
      207D451EC0946A985E30985E30985E30D7A177D7A177D7A177D7A177D7A177D7
      A177D7A177D7A177D7A177D7A177D7A177985E30985E30985E30C0946A7D451E
      8F5730D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57308F
      5730D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57307D45
      1EC0946A985E30985E30985E30D7A177D7A177D7A177D7A177D7A177D7A177D7
      A177D7A177D7A177D7A177D7A177985E30985E30985E30C0946A7D451E8F5730
      D2A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57300000874A
      20CF9F72A46534A46534A46534FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEFEFEA46534A46534A46534CF9F72874A207D451E
      C0946A985E30985E30985E30D7A177D7A177D7A177D7A177D7A177D7A177D7A1
      77D7A177D7A177D7A177D7A177985E30985E30985E30C0946A7D451E8F5730D2
      A67CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57308F5730D2A6
      7CAA7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57307D451EC0946A
      985E30985E30985E30D7A177D7A177D7A177D7A177D7A177D7A177D7A177D7A1
      77D7A177D7A177D7A177985E30985E30985E30C0946A7D451E8F5730D2A67CAA
      7042AA7042AA7042FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
      FEFEFEFEFEFEFEFEFEAA7042AA7042AA7042D2A67C8F57300000874A20CF9F72
      A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A465
      34A46534A46534A46534A46534A46534A46534CF9F72874A207D451EC0946A98
      5E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042D2A67C8F57307D451EC0946A985E3098
      5E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30
      985E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042D2A67C8F57300000874A20CF9F72A46534A4
      6534A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534
      A46534A46534A46534A46534A46534CF9F72874A207D451EC0946A985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042AA7042D2A67C8F57307D451EC0946A985E30985E30985E
      30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E3098
      5E30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042
      AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA70
      42AA7042AA7042AA7042D2A67C8F57300000874A20CF9F72A46534A46534A465
      34A46534A46534A46534A46534A46534A46534A46534A46534A46534A46534A4
      6534A46534A46534A46534CF9F72874A207D451EC0946A985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042AA7042D2A67C8F57308F5730D2A67CAA7042AA7042AA7042AA70
      42AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA
      7042AA7042AA7042D2A67C8F57307D451EC0946A985E30985E30985E30985E30
      985E30985E30985E30985E30985E30985E30985E30985E30985E30985E30985E
      30985E30985E30C0946A7D451E8F5730D2A67CAA7042AA7042AA7042AA7042AA
      7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042AA7042
      AA7042AA7042D2A67C8F57300000874A20CF9F72CF9F72CF9F72CF9F72CF9F72
      CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F72CF9F
      72CF9F72CF9F72CF9F72874A207D451EC0946AC0946AC0946AC0946AC0946AC0
      946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946A
      C0946AC0946AC0946A7D451E8F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67CD2A67C8F57308F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A67C
      D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67C8F57307D451EC0946AC0946AC0946AC0946AC0946AC0946AC0
      946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946AC0946A
      C0946AC0946A7D451E8F5730D2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A6
      7CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2A67CD2
      A67CD2A67C8F57300000874A20874A20874A20874A20874A20874A20874A2087
      4A20874A20874A20874A20874A20874A20874A20874A20874A20874A20874A20
      874A20874A20874A207D451E7D451E7D451E7D451E7D451E7D451E7D451E7D45
      1E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D
      451E7D451E7D451E8F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F
      57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57307D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D45
      1E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D451E7D
      451E7D451E8F57308F57308F57308F57308F57308F57308F57308F57308F5730
      8F57308F57308F57308F57308F57308F57308F57308F57308F57308F57308F57
      308F57300000}
    MarginLeft = 0
    MarginRight = 0
    MarginTop = 0
    MarginBottom = 0
    Transparent = False
    TransparentColor = 50266367
    RowCount = 1
    ColCount = 6
    Left = 120
    Top = 24
  end
  object npdRightBorder: TFsNinePitchDrawable
    Graphic.Data = {
      96090000424D9609000000000000360000002800000008000000640000000100
      1800000000006009000000000000000000000000000000000000874A20874A20
      874A20874A208F57308F57308F57308F5730C99A6EC99A6EC99A6E874A20CDA1
      78CDA178CDA1788F5730C99A6EC99A6EC99A6E874A20CDA178CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730874A20C99A6E
      C99A6E874A208F5730CDA178CDA1788F5730874A20C99A6EC99A6E874A208F57
      30CDA178CDA1788F5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F
      5730874A20C99A6EC99A6E874A208F5730CDA178CDA1788F5730C99A6EC99A6E
      C99A6E874A20CDA178CDA178CDA1788F57309F62329F6232C99A6E874A20A66D
      40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F
      57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232
      C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D
      40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F
      57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232
      C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D
      40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F
      57309F62329F6232C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232
      C99A6E874A20A66D40A66D40CDA1788F57309F62329F6232C99A6E874A20A66D
      40A66D40CDA1788F5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F
      5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534
      CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534CF9F72874A20AA70
      42AA7042D2A67C8F5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F
      5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534
      CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534CF9F72874A20AA70
      42AA7042D2A67C8F5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F
      5730A46534A46534CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534
      CF9F72874A20AA7042AA7042D2A67C8F5730A46534A46534CF9F72874A20AA70
      42AA7042D2A67C8F5730CF9F72CF9F72CF9F72874A20D2A67CD2A67CD2A67C8F
      5730874A20874A20874A20874A208F57308F57308F57308F5730}
    MarginLeft = 0
    MarginRight = 0
    MarginTop = 29
    MarginBottom = 4
    Transparent = False
    TransparentColor = 50266367
    RowCount = 1
    ColCount = 2
    Left = 168
    Top = 88
  end
  object FsFlatScrollBar1: TFsFlatScrollBar
    HScrollHeight = 17
    VScrollWidth = 17
    VArrowHeight = 17
    HArrowWidth = 17
    MinThumbLength = 20
    Left = 64
    Top = 176
  end
  object ndpCover: TFsPictureDrawable
    Picture.Data = {
      0B54504E474772617068696376600000424D7660000000000000360000002800
      00004D0000005000000001002000000000004060000000000000000000000000
      000000000000000000010000000A0000001C000000290000002C0000002D0000
      002E0000002F0000003000000031000000320000003200000033000000360000
      00380000003900000039000000390000003C0000003C0000003D0000003C0000
      003E000000400000003F00000041000000410000004100000042000000420000
      0042000000410000004400000044000000450000004400000044000000440000
      0043000000420000003F000000390000003A0000003A0000003B0000003B0000
      003B0000003B0000003A000000390000003A0000003500000034000000330000
      00330000003300000031000000310000002F0000002E0000002C0000002B0000
      002A000000290000002700000028000000280000002700000026000000280000
      002700000026000000230000001E000000170000000F00000004000000080E0E
      0A2CCBC5A13FE0DDD537D9D9D938E0E0E038DFDFDF38E1E1E139E4E4E439E6E6
      E63CEAEAEA3CEBEBEB3DF0F0F03FF4F4F441F7F7F745F9F9F948FEFEFE4DFFFF
      FF50FFFFFF56FFFFFF59FFFFFF60FFFFFF67FFFFFF70FFFFFF78FFFFFF7FFFFF
      FF89FFFFFF92FFFFFF99FFFFFFA3FFFFFFABFFFFFFB3FFFFFFBEFFFFFFC3FFFF
      FFC9FFFFFFCFFFFFFFD5FFFFFFD7FFFFFFDBFFFFFFE0FFFFFFDDFFFFFFDFFFFF
      FFDCFFFFFFD8FFFFFFD5FFFFFFCEFFFFFFC6FFFFFFC0FFFFFFBAFFFFFFAEFFFF
      FFA3FFFFFF99FFFFFF8FFFFFFF85FFFFFF7AFFFFFF70FFFFFF67FFFFFF5DFFFF
      FF51FFFFFF4CFFFFFF43FFFFFF3AFFFFFF34FFFFFF2FFFFFFF29FFFFFF26FFFF
      FF24FFFFFF1FFFFFFF1DFFFFFF1BFFFFFF1FFFFFFF1DFFFFFF1CFFFFF51BC8BF
      8E2D0908042A000000160000000000000010C9C3A03EBBBBBE289C9C9C1E8D8D
      8D1B8D8D8D1B8E8E8E198989891A898989198989891786868616878787157F7F
      7F147F7F7F13838383107F7F7F117F7F7F107F7F7F0E7B7B7B0C7B7B7B0B7B7B
      7B0B7B7B7B097B7B7B0876767606767676057676760476767603737373027373
      7301737373006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F
      6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F
      6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F006F6F6F00707070007070
      7000707070007070700070707000707070007070700070707000707070007070
      7000707070017070700170707001707070017070700271717102717171027171
      710271717102717171026F6F6F028E8E8F03E2E2E70ACBC3902D000000250000
      000000000011E5E4DE3F989899209797971F9595951D9595951D9292921D8D8D
      8D1C9292921B8D8D8D1C8E8E8E1A8B8B8B198F8F8F198C8C8C17878787178989
      8915868686148686861486868614868686128383831183838310838383108383
      830F8383830F8383830E7E7E7E0D7F7F7F0C7F7F7F0C7F7F7F0B7C7C7C0A7C7C
      7C0A7C7C7C097979790979797909797979087979790879797908797979077979
      7907797979077979790779797907797979067979790679797906797979067979
      7906797979067979790579797905797979057979790579797905797979057979
      7905797979057979790479797904797979047979790479797904797979047979
      7904797979047979790479797904797979047979790479797904797979047878
      7804757575048E8E8F03FFFFFD1D0000002B0000000000000011E6E6E7439A9A
      9A1F9B9B9B20989898209898981E9494941E9292921D9292921D9292921C9292
      921B8D8D8D1B8E8E8E1A8E8E8E1A8E8E8E198C8C8C1787878716898989158585
      851486868614868686138282821186868611838383108383830F8383830F8383
      830E8383830D8383830D7E7E7E0C7F7F7F0C7F7F7F0B7C7C7C0A7C7C7C097C7C
      7C09797979097979790979797908797979087979790879797907797979077979
      7907797979077979790679797906797979067979790679797906797979067979
      7906797979057979790579797905797979057979790579797905797979057979
      7905797979047979790479797904797979047979790479797904797979047979
      79047979790479797904797979047979790479797904787878046F6F6F02FFFF
      FF1D332F1A350000000000000011E8E8E846A1A1A1209D9D9D229E9E9E219E9E
      9E219797971F9898981E9393931E9191911D9292921C9292921B8D8D8D1B8E8E
      8E1B8E8E8E1A8E8E8E198E8E8E188E8E8E178C8C8C1587878715898989148686
      8613868686128686861186868611838383108383830F8383830F8383830E8383
      830D8383830C7E7E7E0C7F7F7F0B7F7F7F0B7F7F7F0A7C7C7C097C7C7C097878
      7809797979087979790879797908797979087979790779797907797979067979
      7906797979067979790679797906797979067979790679797906797979057979
      7905797979057979790579797905797979057979790579797905797979047979
      7904797979047979790479797904797979047979790479797904797979047979
      790479797904797979047979790471717102FFFFFF21302D1834000000000000
      0011EBEBEB48A7A7A721A3A3A322A4A4A422A2A2A221999999219A9A9A209A9A
      9A209898981E9797971E9191911C9292921C9292921B8D8D8D1B8D8D8D1A8E8E
      8E198E8E8E188E8E8E178E8E8E16878787158888881586868614868686138686
      86128686861186868610868686108383830F8383830E8383830D8383830D8383
      830C7E7E7E0C7F7F7F0B7F7F7F0B7F7F7F0A7F7F7F0A7C7C7C09787878097979
      7908797979087979790879797907797979077979790779797906797979067979
      7906797979067979790679797906797979067979790679797905797979057979
      7905797979057979790579797905797979057979790479797904797979047979
      7904797979047979790479797904797979047979790479797904797979047979
      790470707001FFFFFF25302C18340000000000000011EEEEEE4BAEAEAE20AAAA
      AA23A5A5A523A4A4A4229F9F9F23A0A0A021A0A0A021999999209A9A9A1F9B9B
      9B1E9393931D9494941D9494941C9292921B8D8D8D1B8D8D8D198E8E8E198E8E
      8E188E8E8E178F8F8F1687878715888888158888881488888813868686128686
      8611868686108686860F8383830F8383830E8383830D8383830C8383830C7E7E
      7E0C7E7E7E0B7F7F7F0A7F7F7F0A7F7F7F0A7C7C7C097C7C7C09787878087979
      7908797979077979790779797907797979077979790779797906797979067979
      7906797979067979790679797906797979057979790579797905797979057979
      7905797979057979790579797905797979047979790479797904797979047979
      7904797979047979790479797904797979047979790470707001FFFFFF29302C
      18340000000000000010F3F3F34FACACAC21AEAEAE23ACACAC24AAAAAA23A3A3
      A322A6A6A6239F9F9F23A0A0A021999999219C9C9C209A9A9A1F9A9A9A1E9B9B
      9B1D9393931D9494941B9292921A8D8D8D1B8D8D8D198E8E8E198E8E8E178A8A
      8A178F8F8F158B8B8B1687878714888888148888881386868611868686108686
      86108686860F8686860E8383830E8383830D8383830C8383830C8383830B7E7E
      7E0B7F7F7F0A7F7F7F0A7F7F7F097F7F7F097C7C7C097C7C7C09797979087979
      7907797979077979790779797907797979077979790679797906797979067979
      7906797979067979790679797905797979057979790579797905797979057979
      7905797979057979790479797904797979047979790479797904797979047979
      7904797979047979790470707001FFFFFF2E34311C330000000000000010F5F5
      F550B3B3B323AFAFAF24B0B0B024ABABAB24ACACAC24ADADAD24A5A5A523A4A4
      A4229F9F9F21A0A0A021999999219A9A9A1F9696961F9797971E9797971E9797
      971C9797971C9494941B9191911A8E8E8E198E8E8E198E8E8E178A8A8A168F8F
      8F158B8B8B158B8B8B14888888138888881288888811868686108686860F8686
      860F8686860E8686860D8686860D8383830C8383830C8383830B7E7E7E0B7F7F
      7F0A7F7F7F0A7F7F7F097F7F7F097C7C7C087C7C7C087C7C7C08797979077979
      7907797979077979790779797907797979067979790679797906797979067979
      7906797979057979790579797905797979057979790579797905797979057979
      7905797979047979790479797905797979047979790479797904797979047070
      7001FFFFFF3334311C330000000000000010F9F9F954B9B9B923BDBDBD26B6B6
      B625B1B1B125B2B2B225A9A9A924ACACAC24A5A5A523A6A6A623A6A6A622A0A0
      A0219B9B9B21A1A1A1209C9C9C1F9696961E9696961E9797971D9797971C9090
      901C9191911A9191911A8E8E8E198E8E8E178E8E8E178B8B8B168B8B8B168B8B
      8B148B8B8B14888888138888881288888811858585108686860F8686860E8686
      860E8686860D8383830C8383830C8383830B8383830B7E7E7E0B7E7E7E0A7E7E
      7E0A7F7F7F097F7F7F097C7C7C087C7C7C087C7C7C0878787807797979077979
      7907797979077979790679797906797979067979790679797906797979067979
      7905797979057979790579797905797979057979790579797905797979047979
      79057979790579797904797979047979790470707000FFFFFF3B34301C320000
      000000000010F8F8F856BFBFBF24C2C2C226BEBEBE26B5B5B526B1B1B125B2B2
      B225B0B0B024ABABAB24ACACAC24A7A7A724A8A8A823A9A9A922A2A2A222A0A0
      A0219B9B9B209C9C9C1F9696961E9696961D9797971C9494941B9090901B9191
      911A9191911A919191198E8E8E178E8E8E168E8E8E158B8B8B158B8B8B148B8B
      8B138B8B8B128B8B8B12888888118585850F8585850F8686860E8686860E8686
      860D8686860D8686860C8383830B8383830B8383830A8383830A7E7E7E0A7F7F
      7F097F7F7F097F7F7F087F7F7F087C7C7C087C7C7C0779797907797979077979
      7906797979067979790679797906797979067979790679797905797979057979
      7905797979057979790579797905797979057979790579797905797979057979
      79057979790470707000FFFFFF40383522330000000000000010FBFBFB58C7C7
      C725CACACA28C5C5C528BDBDBD26BFBFBF26B5B5B525B1B1B125B2B2B225AEAE
      AE25ACACAC24A7A7A724A8A8A823A1A1A123A1A1A122A2A2A2229F9F9F219C9C
      9C1F9C9C9C1F9999991F9797971D9797971C9797971C9090901A9191911A9191
      911991919118919191178E8E8E158B8B8B168B8B8B158B8B8B148B8B8B138B8B
      8B128B8B8B118B8B8B10888888108585850F8585850E8686860D8686860D8282
      820C8686860C8686860B8686860B8383830A8383830A8383830A7E7E7E097E7E
      7E097F7F7F087F7F7F087C7C7C087C7C7C077C7C7C0779797906797979067979
      7906797979067979790679797906797979067979790679797905797979057979
      790579797905797979057979790579797905797979057979790570707000FFFF
      FF47383522330000000000000010FEFEFE57C8C8C826C8C8C828C9C9C928C5C5
      C528C3C3C328C0C0C027BFBFBF26B5B5B524B1B1B125B2B2B225B3B3B324A7A7
      A725A8A8A823A8A8A823A6A6A622A4A4A4229E9E9E219F9F9F209F9F9F209898
      981F9999991E9999991D9797971C9292921C9393931B9393931A919191189191
      91178E8E8E178E8E8E158A8A8A158F8F8F148B8B8B148B8B8B138B8B8B128B8B
      8B118B8B8B108B8B8B108888880F8686860E8686860D8686860D8686860D8282
      820B8383830B8383830A8383830A8383830A8383830A838383097E7E7E087F7F
      7F087B7B7B077C7C7C077C7C7C077C7C7C077C7C7C0679797906797979067979
      7906797979067979790679797906797979057979790579797905797979057979
      790579797905797979057979790570707000FFFFFF4E38352232000000000000
      0010FFFFFF59D3D3D325CFCFCF29CBCBCB29C9C9C928C9C9C928C5C5C528BEBE
      BE27BEBEBE26B8B8B826B3B3B326B1B1B125B3B3B325AEAEAE25A7A7A724A8A8
      A823A8A8A823A3A3A323A4A4A423A4A4A4219F9F9F219898981F9898981F9999
      991D9999991D9A9A9A1C9292921B9393931A9191911991919118919191178A8A
      8A168A8A8A168A8A8A158B8B8B148B8B8B138B8B8B138B8B8B118B8B8B118888
      88108888880F8888880F8888880E8686860D8686860D8686860D8686860B8383
      830B8383830B8383830A8383830A83838309838383097E7E7E087F7F7F087F7F
      7F087F7F7F077C7C7C077C7C7C077C7C7C067C7C7C0679797907797979067979
      7906797979067979790679797906797979067979790679797906797979057979
      790570707000FFFFFF573D3A26330000000000000010FFFFFF59D4D4D427D6D6
      D62ACFCFCF2ACECECE28D0D0D029CBCBCB29C4C4C428C5C5C528C1C1C128B8B8
      B827B9B9B926B3B3B326B4B4B426ADADAD25AEAEAE25AAAAAA24A8A8A823A8A8
      A823A3A3A323A4A4A422A1A1A1219F9F9F209F9F9F1F9B9B9B1F9999991D9999
      991D9696961C9292921B9393931A939393199393931891919117919191168E8E
      8E158B8B8B148B8B8B138B8B8B138B8B8B128B8B8B118B8B8B108B8B8B108888
      880F8888880E8585850D8686860D8686860D8686860C8282820B8686860B8383
      830B8383830A8383830A83838309838383097E7E7E087F7F7F087F7F7F087F7F
      7F077C7C7C077C7C7C077C7C7C077C7C7C067979790679797906797979067979
      7906797979067979790679797906797979067979790670707000FFFFFF5C403E
      2B340000000000000010FFFFFF5BDBDBDB28DEDEDE2AD7D7D72BD6D6D62ACFCF
      CF2ACBCBCB2ACCCCCC2AC9C9C928C4C4C428C7C7C727C1C1C128BABABA28B8B8
      B824B4B4B426B2B2B225B0B0B026AEAEAE24A9A9A924AAAAAA24A3A3A323A4A4
      A422A4A4A421A1A1A1219F9F9F209A9A9A209B9B9B1E9999991D9999991C9A9A
      9A1B9292921B9393931A9393931993939318919191168E8E8E168A8A8A158E8E
      8E158B8B8B138B8B8B138B8B8B118B8B8B118B8B8B108B8B8B108B8B8B0F8888
      880E8888880E8686860D8686860C8282820C8686860B8383830B8383830B8383
      830A8383830983838309838383097E7E7E087F7F7F087F7F7F077F7F7F077C7C
      7C077C7C7C077C7C7C077C7C7C077C7C7C06787878067C7C7C077C7C7C067979
      7906797979067979790670707000FFFFFF6545412F34000000000000000FFFFF
      FF5CE1E1E128DCDCDC2BD5D5D52BDDDDDD28D5D5D52AD7D7D72AD2D2D22BCBCB
      CB2ACBCBCB29C5C5C529C5C5C528C7C7C727BFBFBF27B8B8B826BABABA26B3B3
      B326B4B4B425AEAEAE25A9A9A924AAAAAA23AAAAAA22A3A3A322A4A4A422A1A1
      A121A1A1A120A2A2A2209A9A9A1F9B9B9B1E9999991D9999991C9696961B9696
      961B939393199090901891919117919191168E8E8E158E8E8E158E8E8E138B8B
      8B138B8B8B128B8B8B118B8B8B118B8B8B108B8B8B108B8B8B0F8888880E8888
      880E8686860D8686860C8686860B8383830B8383830B8383830A838383098383
      830983838309838383097E7E7E087F7F7F087F7F7F087C7C7C077C7C7C077C7C
      7C077C7C7C067C7C7C067C7C7C077C7C7C067C7C7C067C7C7C06797979067070
      7000FFFFFF6D45412F34000000000000000FFFFFFF5CE6E6E627E2E2E22BE4E4
      E42BDCDCDC2CDDDDDD2AD6D6D62BD6D6D62AD7D7D72AD2D2D22ACBCBCB2ACBCB
      CB29C5C5C529C5C5C528BFBFBF27B8B8B827B8B8B826B9B9B926B4B4B426AFAF
      AF26B0B0B025A9A9A924AAAAAA24A6A6A623A4A4A422A4A4A421A1A1A121A1A1
      A120A2A2A2209A9A9A1E9B9B9B1E9B9B9B1D9999991B9696961B9696961B9696
      961A93939318939393178D8D8D16919191158E8E8E158B8B8B148B8B8B138B8B
      8B128B8B8B118B8B8B118B8B8B108B8B8B108888880F8888880E8888880E8686
      860D8686860C8686860C8686860B8383830B8383830A83838309838383098383
      8309838383087E7E7E087F7F7F087F7F7F087F7F7F077C7C7C077C7C7C077F7F
      7F077C7C7C077C7C7C077C7C7C067C7C7C0673737300FFFFFF7645412F330000
      00000000000FFFFFFF5CE8E8E829E8E8E82BE4E4E42CE3E3E32BE4E4E42BDDDD
      DD2BD6D6D62BD6D6D62BD7D7D72BD2D2D22BCCCCCC2BCCCCCC2ACBCBCB28C6C6
      C629C7C7C728C1C1C128B8B8B826B9B9B926B5B5B526B4B4B425B0B0B026ABAB
      AB25AAAAAA24AAAAAA24A6A6A624A3A3A322A4A4A421A0A0A021A1A1A1209F9F
      9F1F9A9A9A1E9B9B9B1D9B9B9B1D9595951B9595951B9696961A939393199393
      9318909090178D8D8D168E8E8E158E8E8E148B8B8B148B8B8B128B8B8B128B8B
      8B118B8B8B118B8B8B108B8B8B0F8888880E8888880E8888880E8888880C8686
      860C8686860C8282820B8686860B8383830A8383830A83838309838383098383
      83097E7E7E087F7F7F087F7F7F077B7B7B077F7F7F087F7F7F077C7C7C077C7C
      7C077C7C7C0773737300FFFFFF7D45412F33000000000000000FFFFFFF60EEEE
      EE2AEEEEEE2CE7E7E72BE8E8E82BE2E2E22BE3E3E32BE2E2E22BDEDEDE2BD6D6
      D62BD6D6D62AD1D1D12BD2D2D22ACBCBCB2ACCCCCC29C6C6C62AC6C6C628BEBE
      BE27BFBFBF27B8B8B826B4B4B427B5B5B526B4B4B425B0B0B025ABABAB25A9A9
      A924ADADAD24A5A5A523A6A6A621A3A3A322A1A1A120A1A1A1209D9D9D1F9B9B
      9B1E9B9B9B1D9B9B9B1C9595951B9696961B9696961A93939318939393179393
      9316909090168E8E8E158A8A8A148E8E8E138B8B8B128B8B8B128B8B8B118B8B
      8B118B8B8B0F8888880E8888880E8888880E8686860D8686860C8686860C8686
      860C8686860B8686860B8383830A8383830A838383097E7E7E087E7E7E087F7F
      7F087F7F7F087F7F7F087F7F7F087F7F7F087C7C7C077C7C7C0773737300FFFF
      FF8348453334000000000000000FFFFFFF60F4F4F42BEEEEEE2DEFEFEF2DF0F0
      F02DE8E8E82CE8E8E82BE2E2E22BE3E3E32BDDDDDD2CDEDEDE2BD6D6D62BD7D7
      D72BD1D1D12BD1D1D129CBCBCB29CCCCCC29C7C7C729C6C6C628C6C6C627BABA
      BA27BBBBBB27B4B4B426B5B5B526B6B6B626ADADAD27ABABAB25ACACAC24ADAD
      AD24A5A5A522A6A6A621A0A0A020A1A1A1209F9F9F1F9D9D9D1F9B9B9B1E9797
      971D9898981C9898981C9696961B929292198F8F8F1893939317909090179090
      90168E8E8E148B8B8B148B8B8B138B8B8B128B8B8B118B8B8B118B8B8B108B8B
      8B0F8B8B8B0F8888880E8888880E8888880D8686860C8686860C8686860B8282
      820B8686860B8383830A8383830983838309838383097E7E7E08838383098383
      83097E7E7E087F7F7F087F7F7F0873737300FFFFFF8E48453333000000000000
      000FFFFFFF5EF3F3F32CF4F4F42EEEEEEE2EEFEFEF2EEFEFEF2DE8E8E82DE9E9
      E92CE3E3E32DE4E4E42CE5E5E52CDDDDDD2CD7D7D72CD8D8D82CD8D8D82BD2D2
      D22BCCCCCC2ACCCCCC29C6C6C62AC6C6C628C0C0C028C1C1C127BABABA27B9B9
      B926B4B4B426B5B5B526B1B1B125ABABAB25ABABAB24ACACAC24AAAAAA22A5A5
      A521A6A6A621A3A3A321A1A1A1209C9C9C1F9D9D9D1E9D9D9D1E9797971D9595
      951B9898981B9696961A939393189393931793939316909090168E8E8E158E8E
      8E148E8E8E148B8B8B138B8B8B128B8B8B118B8B8B118B8B8B108B8B8B108888
      880E8888880E8888880E8888880D8686860C8686860C8686860B8383830B8383
      830B8383830A83838309838383098383830A8383830983838309838383097E7E
      7E0876767600FFFFFF9148453333000000000000000FFFFFFF5FF9F9F92CFAFA
      FA2EF3F3F32FF4F4F42EEEEEEE2EEFEFEF2EEFEFEF2DEFEFEF2CE9E9E92CE2E2
      E22BE2E2E22BE3E3E32BDEDEDE2BD6D6D62BD7D7D72BD3D3D32BD2D2D22ACBCB
      CB29CCCCCC29CDCDCD28C7C7C729BEBEBE27BFBFBF26BABABA27BBBBBB27B4B4
      B426B6B6B626B1B1B125AEAEAE25ACACAC24ACACAC24A8A8A823A2A2A222A3A3
      A321A3A3A321A1A1A11FA1A1A11E9D9D9D1E9B9B9B1D9797971C9898981C9696
      961B969696199191911993939317919191168D8D8D168D8D8D158E8E8E148A8A
      8A138E8E8E138B8B8B128B8B8B118B8B8B108B8B8B108B8B8B108888880F8888
      880E8585850D8888880D8686860C8686860C8686860C8383830B8383830B8383
      830A8383830B8383830B8383830A8383830A838383097B7B7B00FFFFFF984845
      3232000000000000000FFFFFFF5FF8F8F82CF8F8F82FF9F9F92FF3F3F330F4F4
      F42FEEEEEE2FEEEEEE2EEFEFEF2DEFEFEF2DE9E9E92CE3E3E32CE4E4E42CE3E3
      E32BDDDDDD2CD7D7D72CDEDEDE2AD7D7D72BD3D3D32CD1D1D127CBCBCB29CCCC
      CC29C7C7C729C6C6C628C1C1C128BFBFBF25BBBBBB27B7B7B727B5B5B526B0B0
      B026B1B1B126AEAEAE25ACACAC24A8A8A824A6A6A622A6A6A621A3A3A321A0A0
      A0209C9C9C209C9C9C1E9D9D9D1E9B9B9B1D9898981D9898981B9696961A9696
      9619969696189393931793939316939393158D8D8D148E8E8E148A8A8A138F8F
      8F138B8B8B118B8B8B118B8B8B108B8B8B108B8B8B108888880F8888880E8888
      880E8888880D8686860C8686860C8686860C8282820B8686860C8686860C8383
      830B8383830A8383830A75757500FFFFFF9D4D493932000000000000000FFFFF
      FF61FFFFFF2CFFFFFF2FF8F8F82FF9F9F92FF3F3F330F4F4F430F4F4F42FF4F4
      F42DEEEEEE2EEFEFEF2DE8E8E82CE9E9E92CE3E3E32DE4E4E42CE5E5E52CDEDE
      DE2BD7D7D72CD8D8D82CD7D7D72BD2D2D22ACDCDCD2BCCCCCC29CCCCCC29C6C6
      C629C7C7C729BEBEBE25BBBBBB27B6B6B628B7B7B727B5B5B526B1B1B126AEAE
      AE25AEAEAE25ACACAC24A7A7A724A8A8A823A6A6A61FA3A3A321A3A3A320A1A1
      A11F9D9D9D1E9B9B9B1D9B9B9B1C9898981C9595951B9696961A9696961A9696
      96189191911893939316909090168E8E8E148A8A8A138B8B8B138B8B8B128B8B
      8B128B8B8B118B8B8B108B8B8B108B8B8B0F8888880E8888880E8888880D8686
      860D8686860C8686860C8686860D8686860C8686860C8686860B8383830A7A7A
      7A00FFFFFFA14D493832000000000000000FFFFFFF60FFFFFF2EFFFFFF31FFFF
      FF30FFFFFF2FF8F8F82FF9F9F92FF3F3F330F4F4F42FF4F4F42FEEEEEE2EEFEF
      EF2DEFEFEF2DEFEFEF2CE8E8E82BE3E3E32CE2E2E22BDCDCDC2CDDDDDD2CDEDE
      DE2AD7D7D72BD8D8D82BD2D2D229D2D2D229CCCCCC2ACCCCCC28C6C6C628C0C0
      C028C1C1C127BBBBBB27B6B6B627B7B7B727B0B0B026B1B1B125B1B1B124AEAE
      AE25ACACAC24A7A7A724A8A8A822A2A2A221A3A3A3219C9C9C209D9D9D1E9D9D
      9D1E9D9D9D1D9B9B9B1C9898981C9898981B9696961996969619939393188F8F
      8F178F8F8F178E8E8E158E8E8E148E8E8E148B8B8B128B8B8B128B8B8B118B8B
      8B118B8B8B108B8B8B108B8B8B0F8888880E8888880E8686860D8686860D8888
      880E8686860D8686860D8686860C8686860C7E7E7E01FFFFFFA5514E3C330000
      00000000000FFFFFFF60FFFFFF2FFFFFFF32FFFFFF31FFFFFF30FFFFFF2FF9F9
      F930F9F9F92FF9F9F92FF3F3F330F4F4F42FEEEEEE2EEEEEEE2EEFEFEF2DEEEE
      EE2CE8E8E82CE8E8E82BE3E3E32CE5E5E52CDDDDDD2BD6D6D62BD6D6D62BD7D7
      D72BD2D2D22BD3D3D32BCCCCCC2ACECECE29C6C6C629C7C7C729C1C1C128BBBB
      BB28BBBBBB27B6B6B627B7B7B727B3B3B327B1B1B125AEAEAE25AEAEAE25ACAC
      AC23A8A8A823A5A5A523A3A3A321A3A3A3209E9E9E209C9C9C1F9D9D9D1E9D9D
      9D1D9797971C9898981B9595951A969696199696961896969618939393169090
      90178E8E8E158E8E8E148B8B8B138B8B8B138B8B8B118B8B8B118B8B8B118B8B
      8B108B8B8B0F8888880F8888880F8888880C8888880F8888880F8888880D8686
      860D8686860D7E7E7E02FFFFFFA54D493832000000000000000FFFFFFF61FFFF
      FF30FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF30FFFFFF2FF8F8F82FF9F9
      F92FF3F3F330F4F4F42FF4F4F42EEEEEEE2EEFEFEF2DEFEFEF2DEEEEEE2CE9E9
      E92CE3E3E32DE4E4E42CE2E2E22BDCDCDC2BDEDEDE2CD7D7D72CD7D7D72BD3D3
      D32ACCCCCC2ACDCDCD2AC8C8C82AC7C7C729C8C8C829C1C1C127BBBBBB28BBBB
      BB26B6B6B627B7B7B726B3B3B327B1B1B125AEAEAE25ACACAC23A7A7A724A8A8
      A823A5A5A522A5A5A521A3A3A3209C9C9C1F9C9C9C1F9D9D9D1D9B9B9B1C9A9A
      9A1D9898981C9696961A96969619969696188F8F8F1790909017909090168E8E
      8E158E8E8E148B8B8B138B8B8B138B8B8B128B8B8B118B8B8B118B8B8B108B8B
      8B0F8787870F8B8B8B108B8B8B0F8888880F8888880E8686860D7E7E7E03FFFF
      FFAA4F4C3932000000000000000FFFFFFF60FFFFFF31FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF32FFFFFF31FFFFFF30FFFFFF30F9F9F930F9F9F92FF3F3
      F330F4F4F42EEEEEEE2FEEEEEE2EEFEFEF2DEEEEEE2CEFEFEF2CE8E8E82BE3E3
      E32CE4E4E42CDCDCDC2CDDDDDD2BD6D6D62BD2D2D22CD2D2D22BD2D2D22AD3D3
      D32ACDCDCD2AC6C6C629C8C8C829C0C0C027C1C1C127BABABA27BDBDBD27B6B6
      B627B7B7B726B3B3B326B1B1B124AEAEAE25ACACAC23A7A7A723A8A8A822A5A5
      A522A3A3A320A3A3A3209F9F9F209D9D9D1F9D9D9D1D9B9B9B1C9898981C9898
      981B9696961996969619979797188F8F8F18909090178E8E8E158E8E8E158E8E
      8E148B8B8B138B8B8B128B8B8B128B8B8B118B8B8B108B8B8B108B8B8B118B8B
      8B108B8B8B108888880F8888880F80808004FFFFFFA94F4C3932000000000000
      000FFFFFFF60FFFFFF32FFFFFF35FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFF
      FF32FFFFFF31FFFFFF31FFFFFF30F9F9F931F9F9F92FF9F9F92FF3F3F32FF4F4
      F42EEEEEEE2EEFEFEF2DEFEFEF2DE8E8E82CE9E9E92CE3E3E32DE4E4E42CE3E3
      E32CDDDDDD2CD8D8D82DDEDEDE2BD8D8D82BD2D2D22BD2D2D22ACCCCCC2BCDCD
      CD29C7C7C729C1C1C129C1C1C127BABABA27BABABA26BBBBBB26B7B7B726B8B8
      B826B3B3B326ADADAD26AEAEAE24ACACAC23AAAAAA23A8A8A822A2A2A221A3A3
      A3209F9F9F209D9D9D1F9D9D9D1E9797971E9B9B9B1C9898981C9898981B9696
      9619969696188F8F8F188F8F8F1791919116909090158E8E8E158E8E8E148B8B
      8B138B8B8B128B8B8B128B8B8B118B8B8B128B8B8B128B8B8B118B8B8B118B8B
      8B1080808005FFFFFFA752503D34000000000000000FFFFFFF61FFFFFF33FFFF
      FF36FFFFFF36FFFFFF35FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFF
      FF31FFFFFF31FFFFFF2FF8F8F82FF9F9F92FF9F9F92FF4F4F42FEEEEEE2EEFEF
      EF2EEFEFEF2DEEEEEE2CE8E8E82DE9E9E92CE8E8E82BE4E4E42CE5E5E52BDCDC
      DC2CD7D7D72CD7D7D72BD2D2D22CD3D3D32BCCCCCC2ACDCDCD29CECECE29C6C6
      C629C8C8C828C2C2C228BCBCBC28B6B6B627B8B8B828B2B2B227B3B3B326ADAD
      AD26AEAEAE26AEAEAE24A7A7A723A8A8A822A2A2A222A3A3A3219E9E9E20A4A4
      A41F9F9F9F1F9D9D9D1E9B9B9B1D9797971C9898981B9696961A969696199696
      961893939317939393178D8D8D168E8E8E158A8A8A148B8B8B138B8B8B138B8B
      8B128B8B8B138B8B8B138B8B8B128B8B8B128B8B8B1183838307FFFFFFA74F4C
      3A33000000000000000FFFFFFF62FFFFFF35FFFFFF38FFFFFF38FFFFFF37FFFF
      FF36FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF33FFFFFF31FFFF
      FF30F9F9F930FAFAFA30F9F9F92FF3F3F330F4F4F430EEEEEE2FEFEFEF2EEFEF
      EF2DEEEEEE2CE8E8E82CE9E9E92CE3E3E32CE3E3E32CDCDCDC2CDDDDDD2BD7D7
      D72CD8D8D82CD2D2D22BD2D2D22AD2D2D229CDCDCD29C8C8C82AC9C9C92AC1C1
      C126BBBBBB28BCBCBC27B8B8B828B7B7B726B2B2B227B3B3B326B1B1B125AEAE
      AE24AFAFAF24A8A8A823A5A5A523A5A5A522A3A3A321A3A3A31F9F9F9F209D9D
      9D1E9D9D9D1E9797971D9898981D9696961B9696961996969619939393189090
      901890909017929292158E8E8E158A8A8A148E8E8E148E8E8E158A8A8A148F8F
      8F148B8B8B138B8B8B1283838307FFFFFFA54F4C3A33000000000000000FFFFF
      FF63FFFFFF37FFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF37FFFFFF36FFFF
      FF35FFFFFF34FFFFFF34FFFFFF34FFFFFF32FFFFFF31FFFFFF30FFFFFF30F9F9
      F930F9F9F92FF9F9F92FF3F3F330F4F4F430F4F4F42EEEEEEE2DEFEFEF2DE8E8
      E82DE9E9E92CE8E8E82BE4E4E42CE3E3E32BDCDCDC2CDDDDDD2CD7D7D72CD8D8
      D82CD4D4D42BCCCCCC2ACDCDCD28CDCDCD28C9C9C92AC6C6C628C1C1C127BBBB
      BB28BCBCBC27B6B6B627B7B7B726B3B3B327AEAEAE26AFAFAF25AEAEAE25AAAA
      AA24A8A8A822A5A5A522A5A5A522A3A3A3209F9F9F209C9C9C209D9D9D1E9D9D
      9D1E9797971D9898981B9696961A969696199191911A939393188F8F8F178E8E
      8E168E8E8E158A8A8A148E8E8E168E8E8E158A8A8A148B8B8B138B8B8B138383
      830AFFFFFFA54F4C3A33000000000000000FFFFFFF63FFFFFF37FFFFFF3AFFFF
      FF3AFFFFFF3AFFFFFF3AFFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFF
      FF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF30F9F9F930F9F9
      F92FF9F9F92FF3F3F32FF4F4F42DEEEEEE2EEFEFEF2EF0F0F02DE8E8E82CE9E9
      E92CE8E8E82BE4E4E42BDDDDDD2CDDDDDD2CDDDDDD2BD8D8D82CD2D2D22BD4D4
      D42CCFCFCF2DCDCDCD2AC8C8C82AC9C9C92AC2C2C228BBBBBB28BCBCBC27B7B7
      B728B8B8B827B7B7B726B3B3B326ADADAD26AFAFAF25A9A9A925AAAAAA23A8A8
      A822A5A5A522A3A3A321A3A3A3209F9F9F209D9D9D1E9A9A9A1F9797971D9898
      981C9898981C9898981B96969619979797198F8F8F188E8E8E178E8E8E169090
      90188E8E8E178E8E8E168E8E8E168B8B8B158383830AFFFFFFA14B4735330000
      00000000000FFFFFFF64FFFFFF39FFFFFF3CFFFFFF3CFFFFFF3BFFFFFF3BFFFF
      FF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF35FFFFFF34FFFF
      FF34FFFFFF33FFFFFF32FFFFFF32FFFFFF30F9F9F930F8F8F82FF9F9F92FF3F3
      F330F4F4F42EEEEEEE2FEEEEEE2EEFEFEF2DEFEFEF2DE8E8E82CE8E8E82BE4E4
      E42CE3E3E32BE2E2E22ADDDDDD2BD7D7D72CD8D8D82BD4D4D42CD2D2D22ACCCC
      CC2ACDCDCD29C9C9C92AC9C9C929C1C1C127BBBBBB28BCBCBC27B7B7B728B8B8
      B827B9B9B927B3B3B326AFAFAF27AEAEAE25AAAAAA25A8A8A822A8A8A822A5A5
      A522A3A3A3219E9E9E219D9D9D1F9D9D9D1F9D9D9D1E9B9B9B1C9B9B9B1B9595
      951B9696961A9292921A8F8F8F198D8D8D169292921A8F8F8F198D8D8D178E8E
      8E168E8E8E168383830CFFFFFF9F4B473533000000000000000FFFFFFF65FFFF
      FF3AFFFFFF3DFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3BFFFFFF3AFFFFFF3AFFFF
      FF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF35FFFFFF34FFFFFF33FFFF
      FF32FFFFFF31FFFFFF30FFFFFF2FF9F9F930F9F9F92FF9F9F92EF3F3F32FF4F4
      F42EF4F4F42DF5F5F52DEFEFEF2DE8E8E82CE9E9E92CE8E8E82BE2E2E22BE3E3
      E32BDCDCDC2CDDDDDD2BD7D7D72CD8D8D82BD3D3D32BCCCCCC2BCECECE2AC8C8
      C82AC9C9C92AC9C9C928BDBDBD29BCBCBC28B7B7B728B8B8B828B7B7B726B3B3
      B326ADADAD26AEAEAE25AEAEAE25AAAAAA24A8A8A822A5A5A522A5A5A522A3A3
      A3209F9F9F209D9D9D1F9D9D9D1F9797971E9898981C9898981C9696961A9696
      961A929292199696961A9696961A9393931990909019909090188A8A8A0DFFFF
      FF98504C3A33000000000000000FFFFFFF66FFFFFF3CFFFFFF3FFFFFFF3FFFFF
      FF3EFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFF
      FF37FFFFFF36FFFFFF36FFFFFF34FFFFFF34FFFFFF33FFFFFF33FFFFFF32FFFF
      FF31FFFFFF30FFFFFF2FF9F9F930F9F9F92FF9F9F92EF3F3F32EF4F4F42EF4F4
      F42DEFEFEF2DF0F0F02DE8E8E82CE8E8E82BE3E3E32CE4E4E42CE4E4E42BDDDD
      DD2CD9D9D92DD8D8D82CD3D3D32CD4D4D42CCCCCCC2BCDCDCD2AC8C8C82BC7C7
      C729C2C2C228BBBBBB28BCBCBC27B7B7B728B7B7B726B2B2B227B3B3B326AEAE
      AE26AFAFAF26A9A9A925AAAAAA24A8A8A823A5A5A522A3A3A3219E9E9E219F9F
      9F209D9D9D1F9B9B9B1E9898981E9898981D9595951B969696199898981D9595
      951B9696961A8F8F8F1A8F8F8F1988888810FFFFFF944B473534000000000000
      000FFFFFFF69FFFFFF3DFFFFFF40FFFFFF40FFFFFF40FFFFFF40FFFFFF3EFFFF
      FF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFF
      FF36FFFFFF35FFFFFF34FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFF
      FF31F9F9F930F8F8F82FF9F9F92FF9F9F92EF4F4F42EEEEEEE2EEFEFEF2EEFEF
      EF2DEEEEEE2CE8E8E82DE8E8E82BE2E2E22CE3E3E32BDCDCDC2CDDDDDD2BD7D7
      D72CD8D8D82BD2D2D22BD3D3D32BCDCDCD2BCDCDCD2AC9C9C92BC9C9C929C1C1
      C128BBBBBB28BCBCBC27B8B8B828B2B2B227B3B3B327B3B3B326AFAFAF26AEAE
      AE24AAAAAA24A8A8A823A5A5A522A3A3A3219E9E9E219F9F9F219D9D9D1F9999
      99209B9B9B1E9C9C9C1C9595951C9B9B9B1E9C9C9C1C9595951C9696961B9696
      961B8C8C8C11FFFFFF8E4B483534000000000000000FFFFFFF67FFFFFF3FFFFF
      FF41FFFFFF41FFFFFF40FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFF
      FF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF32FFFFFF30FFFFFF2FF8F8
      F82FF8F8F82FF9F9F92FF3F3F32EF4F4F42EEEEEEE2EEFEFEF2DEFEFEF2DEEEE
      EE2CE7E7E72BE8E8E82BE4E4E42CDCDCDC2CDDDDDD2CDDDDDD2BD7D7D72CD8D8
      D82BD3D3D32BCCCCCC2BCDCDCD2AC8C8C82BC9C9C92ACACACA29C1C1C127BCBC
      BC28B8B8B828B7B7B726B7B7B726B3B3B326AEAEAE27AEAEAE23A9A9A926AAAA
      AA24A4A4A424A5A5A522A3A3A3229E9E9E21A1A1A11F9D9D9D1F9797971F9797
      971E9D9D9D1F9797971F9797971E9595951C9696961B8F8F8F14FFFFFF894947
      3434000000000000000FFFFFFF6AFFFFFF3FFFFFFF42FFFFFF42FFFFFF42FFFF
      FF41FFFFFF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3BFFFF
      FF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFF
      FF34FFFFFF33FFFFFF33FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8F82FF9F9
      F92FFAFAFA2EF3F3F32EF4F4F42DF4F4F42CEEEEEE2DEEEEEE2CE8E8E82CE9E9
      E92CE3E3E32CE4E4E42BDCDCDC2CDDDDDD2CD9D9D92DD8D8D82BD3D3D32CD4D4
      D42CCCCCCC2BC8C8C82BC8C8C82BCACACA2AC2C2C228BEBEBE29BCBCBC27B7B7
      B728B8B8B827B2B2B227B3B3B326ADADAD26AEAEAE24A9A9A924AAAAAA24A4A4
      A423A5A5A523A3A3A3219F9F9F219D9D9D209D9D9D1F9F9F9F219D9D9D209D9D
      9D1F9B9B9B1E9898981D8F8F8F15FFFFFF8649473435000000000000000EFFFF
      FF6CFFFFFF41FFFFFF44FFFFFF44FFFFFF44FFFFFF43FFFFFF43FFFFFF42FFFF
      FF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFF
      FF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF31FFFFFF30F9F9F930F8F8F82FF9F9F92FF3F3
      F32FF4F4F42DF4F4F42DEEEEEE2DEFEFEF2DEEEEEE2CE7E7E72BE8E8E82BE2E2
      E22CE3E3E32BDCDCDC2CDDDDDD2BD7D7D72CD8D8D82BD2D2D22BD4D4D42BCECE
      CE2BC8C8C82BC8C8C829C2C2C229BDBDBD29BBBBBB27BCBCBC27B8B8B828B2B2
      B227B3B3B326ADADAD26AFAFAF25AEAEAE25A7A7A723A8A8A823A6A6A621A3A3
      A322A1A1A120A1A1A120A3A3A322A1A1A120A1A1A1209D9D9D209B9B9B1F9595
      9517FFFFFF8146423034000000000000000EFFFFFF6EFFFFFF42FFFFFF45FFFF
      FF45FFFFFF45FFFFFF44FFFFFF44FFFFFF43FFFFFF43FFFFFF41FFFFFF40FFFF
      FF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFF
      FF39FFFFFF38FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF34FFFFFF33FFFF
      FF32FFFFFF31FFFFFF30FFFFFF2FF8F8F82FF9F9F92FF9F9F92FF3F3F32EF4F4
      F42DF4F4F42DEEEEEE2DEEEEEE2CE8E8E82CE8E8E82BE8E8E82BE4E4E42BE3E3
      E32BDCDCDC2BDDDDDD2BD8D8D82BD3D3D32CD4D4D42CCCCCCC2BC8C8C82BC9C9
      C92BCACACA2AC1C1C129C1C1C127BCBCBC27B7B7B728B8B8B827B2B2B227B3B3
      B326ADADAD26AEAEAE25AAAAAA25A8A8A823A5A5A524A3A3A322A3A3A322A5A5
      A524A3A3A322A3A3A322A1A1A1209C9C9C2094949419FFFFFF7D464230340000
      00000000000EFFFFFF70FFFFFF42FFFFFF46FFFFFF46FFFFFF45FFFFFF45FFFF
      FF45FFFFFF44FFFFFF43FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFFFF40FFFF
      FF3FFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFF
      FF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFF
      FF30FFFFFF2FFFFFFF2FF8F8F82FF9F9F92FF9F9F92DF3F3F32EF4F4F42DEEEE
      EE2DEFEFEF2DE8E8E82CE9E9E92CE9E9E92CE9E9E92BE3E3E32BDCDCDC2CDDDD
      DD2CD7D7D72CD8D8D82BD4D4D42CD4D4D42BCDCDCD2AC8C8C82BC9C9C92BC2C2
      C22AC1C1C128BBBBBB28BCBCBC27B8B8B827B7B7B726B2B2B227B3B3B326ADAD
      AD26AEAEAE24A7A7A724A8A8A823A5A5A522A8A8A824A8A8A823A6A6A622A6A6
      A621A3A3A3219C9C9C1AFDFEFF7A46423034000000000000000EFFFFFF72FFFF
      FF44FFFFFF48FFFFFF48FFFFFF47FFFFFF47FFFFFF47FFFFFF45FFFFFF45FFFF
      FF45FFFFFF44FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFFFF3FFFFFFF3EFFFF
      FF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFF
      FF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFF
      FF30FFFFFF2FF8F8F82FF9F9F92EF3F3F32EF4F4F42DEEEEEE2EEFEFEF2DE8E8
      E82CE8E8E82CE8E8E82BE8E8E82BE2E2E22BE3E3E32BDDDDDD2BDEDEDE2BD8D8
      D82BD2D2D22BD3D3D32BCDCDCD2CCECECE2BC8C8C82BC8C8C829C1C1C129C3C3
      C329BCBCBC28B7B7B729B7B7B727B2B2B228B3B3B326AFAFAF26AEAEAE24AAAA
      AA25A7A7A723AFAFAF24AAAAAA25A8A8A823A4A4A424A6A6A6219B9B9B1CFBFC
      FD72423F2D34000000000000000EFFFFFF76FFFFFF45FFFFFF49FFFFFF49FFFF
      FF49FFFFFF48FFFFFF48FFFFFF47FFFFFF47FFFFFF45FFFFFF45FFFFFF44FFFF
      FF43FFFFFF42FFFFFF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3CFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFF
      FF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF31FFFFFF30FFFFFF2FF8F8
      F82FF9F9F92FF9F9F92DF4F4F42EEEEEEE2EEFEFEF2DEFEFEF2DE8E8E82CE7E7
      E72BE8E8E82BE9E9E92BDBDBDB2CDCDCDC2CDDDDDD2CD7D7D72CD8D8D82BD4D4
      D42CCDCDCD2CCECECE2CC8C8C82BC9C9C92BC1C1C129C1C1C128C2C2C228B7B7
      B729B7B7B728B7B7B727B3B3B327AEAEAE27AEAEAE26ABABAB23AFAFAF27AEAE
      AE26ACACAC24A7A7A724A8A8A823A1A1A11DF9F9FA6E433F2D34000000000000
      000EFFFFFF78FFFFFF47FFFFFF4AFFFFFF4AFFFFFF4AFFFFFF49FFFFFF49FFFF
      FF48FFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFFFF43FFFF
      FF42FFFFFF41FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFF
      FF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8F82FF9F9
      F92FF3F3F32EF4F4F42DEEEEEE2EEFEFEF2DEEEEEE2CE8E8E82CE9E9E92CE8E8
      E82BE4E4E42CDCDCDC2CDDDDDD2CD9D9D92DD8D8D82BD3D3D32CD4D4D42CCDCD
      CD2CCDCDCD2AC9C9C92BC7C7C72AC1C1C129C1C1C128BBBBBB28BBBBBB27B8B8
      B828B2B2B228B3B3B327ADADAD26B3B3B328B3B3B327ADADAD26AEAEAE25ACAC
      AC23A3A3A31EF9F9FA683E3B2733000000000000000DFFFFFF7BFFFFFF48FFFF
      FF4BFFFFFF4BFFFFFF4BFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF49FFFF
      FF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFF
      FF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFF
      FF3AFFFFFF38FFFFFF37FFFFFF36FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8F82FF9F9F92FF3F3
      F32EF4F4F42DEEEEEE2DEFEFEF2DEEEEEE2CE7E7E72BE8E8E82BE2E2E22CE3E3
      E32BDCDCDC2CDDDDDD2BD7D7D72CD8D8D82BD2D2D22BD2D2D22ACCCCCC2ACDCD
      CD2AC8C8C82AC6C6C628C1C1C128BBBBBB29B7B7B729B8B8B829B7B7B727B2B2
      B227B8B8B829B7B7B727B3B3B327ADADAD26B1B1B125A7A7A720F5F5F7653E3B
      2733000000000000000DFFFFFF7DFFFFFF49FFFFFF4CFFFFFF4CFFFFFF4CFFFF
      FF4CFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF49FFFFFF47FFFF
      FF46FFFFFF45FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFF
      FF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFF
      FF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFF
      FF31FFFFFF30FFFFFF30FFFFFF2FF8F8F82FF9F9F92FF3F3F32EF4F4F42DEEEE
      EE2EEFEFEF2DEEEEEE2CE8E8E82CE8E8E82BE8E8E82BE4E4E42BE3E3E32BDCDC
      DC2BDDDDDD2BD8D8D82CD2D2D22BD3D3D32BD4D4D42BC8C8C82BC9C9C92BC8C8
      C82AC0C0C027C1C1C128BBBBBB28BBBBBB27B6B6B627BCBCBC28BBBBBB27B7B7
      B727B3B3B328B0B0B026ADADAD22F4F4F5603A362332000000000000000DFFFF
      FF81FFFFFF4AFFFFFF4EFFFFFF4EFFFFFF4EFFFFFF4DFFFFFF4DFFFFFF4CFFFF
      FF4BFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF46FFFF
      FF45FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFFFF40FFFFFF40FFFFFF3FFFFF
      FF3EFFFFFF3DFFFFFF3CFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFF
      FF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFF
      FF2FFFFFFF2FFFFFFF2FF8F8F82FF9F9F92EF3F3F32EF4F4F42DEEEEEE2DEFEF
      EF2DE8E8E82CE9E9E92CE9E9E92CE3E3E32CE3E3E32BDCDCDC2CDDDDDD2CDEDE
      DE2BD8D8D82CD2D2D22BD3D3D32ACCCCCC2BCDCDCD2AC9C9C92BC7C7C72AC0C0
      C028C1C1C128BBBBBB28C1C1C128C1C1C128BCBCBC28B6B6B628B7B7B727ACAC
      AC23F3F3F45D3A362333000000000000000DFFFFFF84FFFFFF4CFFFFFF50FFFF
      FF50FFFFFF50FFFFFF4FFFFFFF4FFFFFFF4EFFFFFF4DFFFFFF4DFFFFFF4CFFFF
      FF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFF
      FF45FFFFFF44FFFFFF42FFFFFF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFF
      FF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFF
      FF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF30FFFF
      FF2FF8F8F82FF9F9F92FF9F9F92EF4F4F42DEEEEEE2EEFEFEF2DEEEEEE2CE8E8
      E82CE8E8E82BE8E8E82BE3E3E32CDCDCDC2CDDDDDD2BD7D7D72CD8D8D82CD2D2
      D22BD2D2D22AD2D2D22ACDCDCD2AC9C9C92BC6C6C629C2C2C229C0C0C028C6C6
      C629C2C2C229C1C1C128BABABA28BBBBBB27B3B3B325F2F3F4573A3723330000
      00000000000DFFFFFF89FFFFFF4CFFFFFF51FFFFFF51FFFFFF51FFFFFF50FFFF
      FF50FFFFFF4FFFFFFF4EFFFFFF4EFFFFFF4DFFFFFF4DFFFFFF4BFFFFFF4BFFFF
      FF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFF
      FF43FFFFFF42FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3CFFFF
      FF3BFFFFFF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF35FFFFFF34FFFF
      FF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8
      F82FF9F9F92CF3F3F32FF4F4F42DEEEEEE2DEFEFEF2DEEEEEE2CE7E7E72BE8E8
      E82BE4E4E42CE3E3E32BE4E4E42BDDDDDD2BDEDEDE2BD8D8D82BD2D2D22BD2D2
      D22ACCCCCC2BCECECE2AC5C5C529C5C5C528CDCDCD29C5C5C529C6C6C628C1C1
      C128BABABA28B8B8B824F0F0F15535321E33000000000000000CFFFFFF8CFFFF
      FF4DFFFFFF52FFFFFF52FFFFFF51FFFFFF51FFFFFF51FFFFFF51FFFFFF50FFFF
      FF50FFFFFF4FFFFFFF4EFFFFFF4DFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFF
      FF49FFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFFFF42FFFF
      FF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFF
      FF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFFFF2EF8F8F82FF9F9
      F92EF3F3F32DF4F4F42CEEEEEE2DEEEEEE2CEEEEEE2CEFEFEF2CE8E8E82BE4E4
      E42CDCDCDC2CDDDDDD2BDDDDDD2BD7D7D72CD7D7D72AD2D2D22ACCCCCC2BCDCD
      CD2BCDCDCD2ACCCCCC2ACDCDCD2BCECECE2AC6C6C629C1C1C128BCBCBC24EEEF
      F04F3A372333000000000000000CFFFFFF91FFFFFF50FFFFFF54FFFFFF54FFFF
      FF54FFFFFF54FFFFFF53FFFFFF52FFFFFF51FFFFFF51FFFFFF51FFFFFF50FFFF
      FF4FFFFFFF4EFFFFFF4DFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFF
      FF48FFFFFF47FFFFFF46FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFFFF41FFFF
      FF40FFFFFF40FFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFF
      FF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFF
      FF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8F82FF9F9F92EFAFAFA2CF4F4
      F42DEEEEEE2DEFEFEF2DEEEEEE2CE7E7E72BE8E8E82BE2E2E22CE2E2E22BDCDC
      DC2BDDDDDD2BD6D6D62BD7D7D72AD1D1D12AD2D2D22ACCCCCC2BD1D1D129D2D2
      D22ACCCCCC2BCCCCCC29C5C5C529C4C4C427F1F2F34A3A372334000000000000
      000CFFFFFF96FFFFFF52FFFFFF57FFFFFF56FFFFFF56FFFFFF55FFFFFF55FFFF
      FF54FFFFFF53FFFFFF52FFFFFF51FFFFFF51FFFFFF50FFFFFF4FFFFFFF4EFFFF
      FF4DFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFF
      FF46FFFFFF45FFFFFF45FFFFFF44FFFFFF42FFFFFF41FFFFFF40FFFFFF40FFFF
      FF3FFFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF39FFFFFF38FFFF
      FF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFF
      FF30FFFFFF2FFFFFFF2FF8F8F82FF8F8F82FF9F9F92EF3F3F32DF4F4F42DEEEE
      EE2DEEEEEE2CEEEEEE2CE7E7E72BE9E9E92BE2E2E22CE3E3E32BDDDDDD2BD7D7
      D72CD8D8D82CD7D7D72AD1D1D12AD7D7D72BD7D7D72AD2D2D22ACCCCCC2BCCCC
      CC29C9C9C926F2F3F44935321E34000000000000000BFFFFFF9AFFFFFF53FFFF
      FF58FFFFFF58FFFFFF58FFFFFF57FFFFFF57FFFFFF56FFFFFF55FFFFFF55FFFF
      FF54FFFFFF52FFFFFF51FFFFFF51FFFFFF51FFFFFF4FFFFFFF4EFFFFFF4DFFFF
      FF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF46FFFF
      FF45FFFFFF44FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFFFF40FFFFFF3EFFFF
      FF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF38FFFFFF37FFFFFF36FFFF
      FF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF2FFFFFFF2FFFFF
      FF2FFFFFFF2FF8F8F82FF9F9F92EF3F3F32FF4F4F42DF4F4F42CEEEEEE2DEEEE
      EE2CE7E7E72BE8E8E82BE8E8E82BE3E3E32CDCDCDC2CDDDDDD2BD7D7D72CD6D6
      D62ADDDDDD2AD8D8D82CD7D7D72AD6D6D629D2D2D22AD1D1D128F0F0F1453532
      1F34000000000000000BFFFFFFA1FFFFFF56FFFFFF5AFFFFFF5AFFFFFF5AFFFF
      FF5AFFFFFF5AFFFFFF59FFFFFF59FFFFFF57FFFFFF56FFFFFF55FFFFFF54FFFF
      FF53FFFFFF52FFFFFF51FFFFFF50FFFFFF4FFFFFFF4EFFFFFF4DFFFFFF4CFFFF
      FF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF45FFFFFF45FFFF
      FF44FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3CFFFFFF3BFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFF
      FF34FFFFFF34FFFFFF33FFFFFF31FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FF8F8
      F82FF9F9F92FF9F9F92EF3F3F32DF4F4F42CEDEDED2CEEEEEE2BEEEEEE2BE7E7
      E72BE8E8E82BE2E2E22CDCDCDC2BDDDDDD2BDDDDDD2BDBDBDB2ADDDDDD2BDDDD
      DD2BD5D5D52AD6D6D629D0D0D028EDEDEE4335321E34000000000000000BFFFF
      FFA6FFFFFF57FFFFFF5DFFFFFF5CFFFFFF5CFFFFFF5BFFFFFF5BFFFFFF5BFFFF
      FF5BFFFFFF59FFFFFF57FFFFFF56FFFFFF56FFFFFF56FFFFFF54FFFFFF53FFFF
      FF52FFFFFF51FFFFFF50FFFFFF4FFFFFFF4EFFFFFF4DFFFFFF4CFFFFFF4BFFFF
      FF4AFFFFFF49FFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFF
      FF43FFFFFF41FFFFFF40FFFFFF40FFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFF
      FF3AFFFFFF3AFFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF2FFFFFFF2FFFFFFF2FF8F8F82FF8F8F82FF9F9
      F92EFAFAFA2CF3F3F32CF4F4F42BEDEDED2CEEEEEE2BE7E7E72BEFEFEF2BE2E2
      E22CE2E2E22BE2E2E22BE2E2E22BE2E2E22BE2E2E22BD6D6D62CDCDCDC2ADCDC
      DC27F3F3F43F3A372334000000000000000AFFFFFFACFFFFFF59FFFFFF5FFFFF
      FF5FFFFFFF5FFFFFFF5EFFFFFF5EFFFFFF5CFFFFFF5CFFFFFF5BFFFFFF5AFFFF
      FF59FFFFFF58FFFFFF56FFFFFF56FFFFFF56FFFFFF54FFFFFF53FFFFFF52FFFF
      FF51FFFFFF51FFFFFF4EFFFFFF4DFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFF
      FF49FFFFFF48FFFFFF47FFFFFF45FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFF
      FF41FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFF
      FF39FFFFFF38FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFF
      FF31FFFFFF30FFFFFF2FFFFFFF2FFFFFFF2FF8F8F82FF9F9F92EF9F9F92DF3F3
      F32DF4F4F42CEDEDED2CEEEEEE2CEEEEEE2CEFEFEF2BE8E8E82BE2E2E22CEEEE
      EE2AE8E8E82BE2E2E22CE2E2E22ADCDCDC2BDCDCDC2AF5F5F63D35321D330000
      00000000000AFFFFFFAFFFFFFF5CFFFFFF62FFFFFF61FFFFFF61FFFFFF61FFFF
      FF60FFFFFF5FFFFFFF5FFFFFFF5DFFFFFF5BFFFFFF5BFFFFFF5AFFFFFF59FFFF
      FF58FFFFFF58FFFFFF56FFFFFF56FFFFFF55FFFFFF53FFFFFF52FFFFFF51FFFF
      FF50FFFFFF4FFFFFFF4DFFFFFF4CFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFF
      FF47FFFFFF46FFFFFF45FFFFFF45FFFFFF44FFFFFF43FFFFFF41FFFFFF40FFFF
      FF40FFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF38FFFF
      FF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFF
      FF2FFFFFFF2FFFFFFF2FF8F8F82FF8F8F82EF9F9F92DF3F3F32FF4F4F42DF5F5
      F52BEDEDED2CEEEEEE2BEDEDED2BE7E7E72BEDEDED2AEDEDED2BE7E7E72BE7E7
      E72AE2E2E22CE3E3E32AF4F4F63A35321D33000000000000000AFFFFFFB6FFFF
      FF5FFFFFFF64FFFFFF64FFFFFF63FFFFFF63FFFFFF63FFFFFF62FFFFFF62FFFF
      FF5FFFFFFF5EFFFFFF5DFFFFFF5CFFFFFF5BFFFFFF5AFFFFFF59FFFFFF58FFFF
      FF57FFFFFF56FFFFFF55FFFFFF54FFFFFF53FFFFFF52FFFFFF51FFFFFF50FFFF
      FF4FFFFFFF4EFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF48FFFFFF47FFFF
      FF45FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFFFF3FFFFF
      FF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFF
      FF35FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFF
      FF2EFFFFFF2EF8F8F82EF9F9F92EF3F3F32EF4F4F42CF4F4F42CEDEDED2CEEEE
      EE2BEEEEEE2BECECEC2BEEEEEE2BEEEEEE2BEDEDED2BE8E8E82BE1E1E12BF5F5
      F73735321D340000000000000009FFFFFFBBFFFFFF61FFFFFF66FFFFFF66FFFF
      FF67FFFFFF67FFFFFF65FFFFFF64FFFFFF64FFFFFF63FFFFFF61FFFFFF60FFFF
      FF5FFFFFFF5DFFFFFF5CFFFFFF5BFFFFFF5AFFFFFF59FFFFFF58FFFFFF57FFFF
      FF56FFFFFF55FFFFFF54FFFFFF53FFFFFF52FFFFFF51FFFFFF50FFFFFF4EFFFF
      FF4DFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF49FFFFFF47FFFFFF46FFFFFF45FFFF
      FF44FFFFFF43FFFFFF42FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3CFFFFFF3AFFFFFF3AFFFFFF39FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFF
      FF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFFFF2EFFFF
      FF2DF8F8F82EF9F9F92DF3F3F32DF4F4F42CF4F4F42BEDEDED2CF3F3F32AF4F4
      F42BEDEDED2CEEEEEE2BEDEDED2BE7E7E72AFBFBFC3735311D34000000000000
      0009FFFFFFC0FFFFFF64FFFFFF69FFFFFF6AFFFFFF69FFFFFF69FFFFFF68FFFF
      FF67FFFFFF67FFFFFF66FFFFFF64FFFFFF63FFFFFF61FFFFFF5FFFFFFF5FFFFF
      FF5EFFFFFF5CFFFFFF5BFFFFFF5AFFFFFF59FFFFFF58FFFFFF57FFFFFF56FFFF
      FF55FFFFFF55FFFFFF53FFFFFF52FFFFFF50FFFFFF4FFFFFFF4EFFFFFF4DFFFF
      FF4CFFFFFF4BFFFFFF49FFFFFF48FFFFFF47FFFFFF45FFFFFF45FFFFFF44FFFF
      FF42FFFFFF41FFFFFF40FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFF
      FF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF2FFFFFFF2FFFFFFF2EFFFFFF2EF8F8F82EF9F9
      F92DF9F9F92CF3F3F32BF4F4F42CFAFAFA2AF3F3F32BF4F4F42CEDEDED2BECEC
      EC2BEDEDED2AFAFAFC3735311D340000000000000009FFFFFFC5FFFFFF66FFFF
      FF6BFFFFFF6CFFFFFF6BFFFFFF6AFFFFFF6AFFFFFF69FFFFFF68FFFFFF68FFFF
      FF67FFFFFF66FFFFFF64FFFFFF63FFFFFF62FFFFFF60FFFFFF5FFFFFFF5EFFFF
      FF5DFFFFFF5BFFFFFF5AFFFFFF5AFFFFFF58FFFFFF57FFFFFF55FFFFFF55FFFF
      FF54FFFFFF53FFFFFF51FFFFFF50FFFFFF4FFFFFFF4DFFFFFF4CFFFFFF4BFFFF
      FF4BFFFFFF49FFFFFF47FFFFFF46FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFF
      FF40FFFFFF40FFFFFF3FFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF39FFFF
      FF38FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF34FFFFFF33FFFFFF31FFFF
      FF30FFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2EF8F8F82DF8F8F82DF9F9F92CF3F3
      F32CF9F9F92BF9F9F92CF3F3F32CF4F4F42BF3F3F32AECECEC2AFDFDFE323431
      1C340000000000000008FFFFFFCCFFFFFF67FFFFFF6EFFFFFF6EFFFFFF6EFFFF
      FF6EFFFFFF6EFFFFFF6DFFFFFF6CFFFFFF6AFFFFFF69FFFFFF68FFFFFF67FFFF
      FF66FFFFFF65FFFFFF63FFFFFF62FFFFFF60FFFFFF5FFFFFFF5EFFFFFF5DFFFF
      FF5CFFFFFF5AFFFFFF5AFFFFFF57FFFFFF56FFFFFF55FFFFFF55FFFFFF54FFFF
      FF53FFFFFF51FFFFFF50FFFFFF4FFFFFFF4DFFFFFF4BFFFFFF4BFFFFFF4AFFFF
      FF49FFFFFF47FFFFFF45FFFFFF45FFFFFF44FFFFFF42FFFFFF41FFFFFF40FFFF
      FF3FFFFFFF3EFFFFFF3DFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF38FFFFFF37FFFF
      FF36FFFFFF35FFFFFF34FFFFFF34FFFFFF32FFFFFF31FFFFFF30FFFFFF30FFFF
      FF2FFFFFFF2FFFFFFF2EFFFFFF2DF8F8F82DF9F9F92CFFFFFF2BF8F8F82DF9F9
      F92CF9F9F92CF4F4F42BEDEDED2AFEFEFF3234311C340000000000000008FFFF
      FFD0FFFFFF6BFFFFFF71FFFFFF71FFFFFF71FFFFFF71FFFFFF70FFFFFF6FFFFF
      FF6FFFFFFF6DFFFFFF6BFFFFFF6AFFFFFF69FFFFFF68FFFFFF67FFFFFF66FFFF
      FF65FFFFFF64FFFFFF62FFFFFF61FFFFFF60FFFFFF5EFFFFFF5DFFFFFF5CFFFF
      FF5AFFFFFF59FFFFFF58FFFFFF56FFFFFF55FFFFFF55FFFFFF53FFFFFF52FFFF
      FF51FFFFFF50FFFFFF4EFFFFFF4DFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF48FFFF
      FF47FFFFFF45FFFFFF44FFFFFF43FFFFFF42FFFFFF40FFFFFF40FFFFFF3FFFFF
      FF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF39FFFFFF38FFFFFF36FFFFFF35FFFF
      FF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFF
      FF2FFFFFFF2EF8F8F82DFFFFFF2AFFFFFF2EF8F8F82DF8F8F82CF9F9F92BF3F3
      F32DFFFFFF3234311C340000000000000008FFFFFFD5FFFFFF6DFFFFFF73FFFF
      FF73FFFFFF74FFFFFF74FFFFFF73FFFFFF71FFFFFF71FFFFFF6FFFFFFF6EFFFF
      FF6DFFFFFF6CFFFFFF6AFFFFFF69FFFFFF68FFFFFF67FFFFFF66FFFFFF65FFFF
      FF63FFFFFF62FFFFFF60FFFFFF5FFFFFFF5EFFFFFF5DFFFFFF5BFFFFFF5AFFFF
      FF59FFFFFF57FFFFFF56FFFFFF55FFFFFF54FFFFFF53FFFFFF51FFFFFF50FFFF
      FF50FFFFFF4EFFFFFF4CFFFFFF4BFFFFFF49FFFFFF48FFFFFF47FFFFFF45FFFF
      FF44FFFFFF43FFFFFF41FFFFFF40FFFFFF40FFFFFF3EFFFFFF3DFFFFFF3CFFFF
      FF3AFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF36FFFFFF34FFFFFF34FFFF
      FF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFFFF2EFFFFFF2DFFFF
      FF2CFFFFFF2EFFFFFF2DFFFFFF2CF8F8F82CF9F9F92BFFFFFF322F2C17330000
      000000000007FFFFFFDAFFFFFF6EFFFFFF75FFFFFF76FFFFFF76FFFFFF75FFFF
      FF75FFFFFF74FFFFFF74FFFFFF72FFFFFF71FFFFFF70FFFFFF6EFFFFFF6DFFFF
      FF6CFFFFFF6BFFFFFF6AFFFFFF68FFFFFF66FFFFFF66FFFFFF65FFFFFF63FFFF
      FF62FFFFFF61FFFFFF5FFFFFFF5EFFFFFF5DFFFFFF5BFFFFFF5AFFFFFF59FFFF
      FF56FFFFFF55FFFFFF55FFFFFF53FFFFFF52FFFFFF51FFFFFF50FFFFFF4FFFFF
      FF4EFFFFFF4BFFFFFF4BFFFFFF4AFFFFFF47FFFFFF46FFFFFF45FFFFFF44FFFF
      FF42FFFFFF41FFFFFF40FFFFFF3FFFFFFF3DFFFFFF3BFFFFFF3AFFFFFF3AFFFF
      FF39FFFFFF38FFFFFF37FFFFFF35FFFFFF34FFFFFF34FFFFFF34FFFFFF33FFFF
      FF32FFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2CFFFFFF2FFFFFFF2FFFFF
      FF2DFFFFFF2CFFFFFF2AFFFFFF322F2C17330000000000000007FFFFFFDCFFFF
      FF71FFFFFF77FFFFFF78FFFFFF78FFFFFF78FFFFFF78FFFFFF76FFFFFF76FFFF
      FF74FFFFFF74FFFFFF72FFFFFF71FFFFFF71FFFFFF6FFFFFFF6DFFFFFF6CFFFF
      FF6BFFFFFF6AFFFFFF68FFFFFF67FFFFFF65FFFFFF64FFFFFF63FFFFFF62FFFF
      FF61FFFFFF60FFFFFF5EFFFFFF5DFFFFFF5BFFFFFF5AFFFFFF59FFFFFF57FFFF
      FF55FFFFFF55FFFFFF53FFFFFF51FFFFFF50FFFFFF50FFFFFF4EFFFFFF4DFFFF
      FF4CFFFFFF4AFFFFFF49FFFFFF48FFFFFF45FFFFFF45FFFFFF44FFFFFF42FFFF
      FF40FFFFFF3FFFFFFF3DFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF39FFFF
      FF37FFFFFF36FFFFFF35FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFF
      FF2FFFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2FFFFFFF2EFFFFFF2BFFFF
      FF2F2F2B17330000000000000007FFFFFFE3FFFFFF71FFFFFF79FFFFFF7AFFFF
      FF7BFFFFFF7BFFFFFF79FFFFFF78FFFFFF78FFFFFF77FFFFFF75FFFFFF74FFFF
      FF74FFFFFF73FFFFFF72FFFFFF71FFFFFF6FFFFFFF6EFFFFFF6CFFFFFF6AFFFF
      FF6AFFFFFF68FFFFFF66FFFFFF66FFFFFF63FFFFFF62FFFFFF62FFFFFF60FFFF
      FF5FFFFFFF5EFFFFFF5CFFFFFF5BFFFFFF5AFFFFFF58FFFFFF56FFFFFF55FFFF
      FF53FFFFFF52FFFFFF51FFFFFF4FFFFFFF4EFFFFFF4DFFFFFF4BFFFFFF4BFFFF
      FF49FFFFFF47FFFFFF46FFFFFF45FFFFFF43FFFFFF42FFFFFF41FFFFFF40FFFF
      FF3EFFFFFF3DFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF38FFFFFF37FFFFFF36FFFF
      FF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFF
      FF30FFFFFF2FFFFFFF2FFFFFFF2EFFFFFF2CFFFFFF302F2B1733000000000000
      0007FFFFFFE4FFFFFF74FFFFFF7BFFFFFF7CFFFFFF7CFFFFFF7CFFFFFF7BFFFF
      FF7BFFFFFF7BFFFFFF78FFFFFF78FFFFFF77FFFFFF76FFFFFF74FFFFFF74FFFF
      FF72FFFFFF71FFFFFF71FFFFFF6FFFFFFF6DFFFFFF6CFFFFFF6AFFFFFF69FFFF
      FF68FFFFFF66FFFFFF65FFFFFF64FFFFFF62FFFFFF61FFFFFF60FFFFFF5EFFFF
      FF5DFFFFFF5BFFFFFF5AFFFFFF59FFFFFF58FFFFFF56FFFFFF55FFFFFF54FFFF
      FF51FFFFFF50FFFFFF4FFFFFFF4DFFFFFF4CFFFFFF4BFFFFFF4AFFFFFF48FFFF
      FF47FFFFFF45FFFFFF44FFFFFF42FFFFFF40FFFFFF40FFFFFF3FFFFFFF3DFFFF
      FF3BFFFFFF3AFFFFFF39FFFFFF38FFFFFF37FFFFFF35FFFFFF34FFFFFF34FFFF
      FF34FFFFFF33FFFFFF32FFFFFF30FFFFFF2EFFFFFF32FFFFFF30FFFFFF2FFFFF
      FF2FFFFFFF2FFFFFFF322F2B17330000000000000007FFFFFFE6FFFFFF76FFFF
      FF7DFFFFFF7EFFFFFF7EFFFFFF7EFFFFFF7DFFFFFF7CFFFFFF7CFFFFFF7BFFFF
      FF7AFFFFFF79FFFFFF78FFFFFF77FFFFFF76FFFFFF74FFFFFF73FFFFFF72FFFF
      FF71FFFFFF70FFFFFF6EFFFFFF6DFFFFFF6CFFFFFF6BFFFFFF69FFFFFF68FFFF
      FF66FFFFFF64FFFFFF63FFFFFF62FFFFFF60FFFFFF5FFFFFFF5EFFFFFF5DFFFF
      FF5CFFFFFF5BFFFFFF59FFFFFF58FFFFFF56FFFFFF55FFFFFF53FFFFFF51FFFF
      FF50FFFFFF4FFFFFFF4DFFFFFF4BFFFFFF4AFFFFFF49FFFFFF47FFFFFF46FFFF
      FF45FFFFFF43FFFFFF41FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFFFF3AFFFF
      FF3AFFFFFF39FFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFFFF33FFFFFF32FFFF
      FF31FFFFFF30FFFFFF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF2FFFFFFF313330
      1B340000000000000006FFFFFFEBFFFFFF77FFFFFF7EFFFFFF7FFFFFFF80FFFF
      FF80FFFFFF7FFFFFFF7EFFFFFF7EFFFFFF7DFFFFFF7BFFFFFF7BFFFFFF79FFFF
      FF78FFFFFF77FFFFFF76FFFFFF74FFFFFF74FFFFFF72FFFFFF71FFFFFF70FFFF
      FF6EFFFFFF6DFFFFFF6DFFFFFF6AFFFFFF69FFFFFF68FFFFFF67FFFFFF66FFFF
      FF65FFFFFF62FFFFFF62FFFFFF60FFFFFF5EFFFFFF5DFFFFFF5DFFFFFF5AFFFF
      FF59FFFFFF59FFFFFF56FFFFFF55FFFFFF54FFFFFF51FFFFFF50FFFFFF4FFFFF
      FF4DFFFFFF4BFFFFFF4BFFFFFF49FFFFFF47FFFFFF46FFFFFF45FFFFFF44FFFF
      FF42FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF38FFFF
      FF37FFFFFF36FFFFFF34FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF33FFFF
      FF32FFFFFF31FFFFFF30FFFFFF2FFFFFFF3133301B340000000000000006FFFF
      FFEDFFFFFF78FFFFFF7FFFFFFF80FFFFFF82FFFFFF82FFFFFF81FFFFFF80FFFF
      FF7FFFFFFF7EFFFFFF7DFFFFFF7BFFFFFF7BFFFFFF7AFFFFFF79FFFFFF77FFFF
      FF77FFFFFF76FFFFFF74FFFFFF73FFFFFF72FFFFFF70FFFFFF6FFFFFFF6EFFFF
      FF6DFFFFFF6CFFFFFF6BFFFFFF69FFFFFF69FFFFFF67FFFFFF65FFFFFF64FFFF
      FF63FFFFFF61FFFFFF60FFFFFF5EFFFFFF5DFFFFFF5CFFFFFF5BFFFFFF59FFFF
      FF58FFFFFF56FFFFFF55FFFFFF53FFFFFF52FFFFFF50FFFFFF4EFFFFFF4DFFFF
      FF4BFFFFFF48FFFFFF47FFFFFF46FFFFFF45FFFFFF45FFFFFF43FFFFFF41FFFF
      FF40FFFFFF3EFFFFFF3DFFFFFF3CFFFFFF3AFFFFFF3AFFFFFF38FFFFFF36FFFF
      FF35FFFFFF34FFFFFF33FFFFFF32FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFF
      FF2EFFFFFF3133301B340000000000000006FFFFFFEFFFFFFF79FFFFFF81FFFF
      FF82FFFFFF82FFFFFF82FFFFFF82FFFFFF82FFFFFF81FFFFFF7FFFFFFF7EFFFF
      FF7EFFFFFF7DFFFFFF7CFFFFFF7BFFFFFF79FFFFFF78FFFFFF77FFFFFF76FFFF
      FF75FFFFFF74FFFFFF72FFFFFF71FFFFFF70FFFFFF6EFFFFFF6DFFFFFF6DFFFF
      FF6BFFFFFF6AFFFFFF69FFFFFF67FFFFFF66FFFFFF65FFFFFF63FFFFFF61FFFF
      FF60FFFFFF5EFFFFFF5DFFFFFF5CFFFFFF5AFFFFFF59FFFFFF58FFFFFF56FFFF
      FF55FFFFFF54FFFFFF52FFFFFF50FFFFFF4FFFFFFF4DFFFFFF4BFFFFFF4AFFFF
      FF47FFFFFF46FFFFFF45FFFFFF43FFFFFF42FFFFFF40FFFFFF3FFFFFFF3EFFFF
      FF3DFFFFFF3BFFFFFF3AFFFFFF3AFFFFFF37FFFFFF36FFFFFF35FFFFFF34FFFF
      FF33FFFFFF35FFFFFF34FFFFFF33FFFFFF32FFFFFF31FFFFFF3133301B340000
      000000000006FFFFFFF0FFFFFF79FFFFFF82FFFFFF82FFFFFF82FFFFFF82FFFF
      FF82FFFFFF82FFFFFF82FFFFFF80FFFFFF7FFFFFFF7EFFFFFF7DFFFFFF7CFFFF
      FF7BFFFFFF7AFFFFFF79FFFFFF77FFFFFF77FFFFFF75FFFFFF74FFFFFF73FFFF
      FF72FFFFFF71FFFFFF6FFFFFFF6EFFFFFF6DFFFFFF6BFFFFFF6AFFFFFF69FFFF
      FF68FFFFFF67FFFFFF65FFFFFF64FFFFFF63FFFFFF61FFFFFF5FFFFFFF5EFFFF
      FF5DFFFFFF5BFFFFFF59FFFFFF59FFFFFF57FFFFFF55FFFFFF55FFFFFF52FFFF
      FF51FFFFFF50FFFFFF4EFFFFFF4CFFFFFF4BFFFFFF49FFFFFF48FFFFFF46FFFF
      FF44FFFFFF43FFFFFF42FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3CFFFFFF3AFFFF
      FF3AFFFFFF38FFFFFF37FFFFFF35FFFFFF34FFFFFF35FFFFFF35FFFFFF34FFFF
      FF34FFFFFF33FFFFFF31FFFFFF32332F1B340000000000000003FFFFFFF2FFFF
      FF79FFFFFF82FFFFFF83FFFFFF83FFFFFF83FFFFFF82FFFFFF82FFFFFF82FFFF
      FF80FFFFFF7FFFFFFF7EFFFFFF7EFFFFFF7DFFFFFF7CFFFFFF7AFFFFFF7AFFFF
      FF79FFFFFF77FFFFFF76FFFFFF75FFFFFF73FFFFFF73FFFFFF72FFFFFF70FFFF
      FF70FFFFFF6FFFFFFF6CFFFFFF6CFFFFFF6BFFFFFF69FFFFFF68FFFFFF67FFFF
      FF65FFFFFF65FFFFFF63FFFFFF61FFFFFF60FFFFFF5FFFFFFF5DFFFFFF5CFFFF
      FF5AFFFFFF59FFFFFF57FFFFFF56FFFFFF54FFFFFF53FFFFFF52FFFFFF50FFFF
      FF4EFFFFFF4DFFFFFF4BFFFFFF4AFFFFFF48FFFFFF46FFFFFF45FFFFFF44FFFF
      FF42FFFFFF41FFFFFF40FFFFFF3DFFFFFF3CFFFFFF3BFFFFFF39FFFFFF38FFFF
      FF37FFFFFF36FFFFFF35FFFFFF37FFFFFF36FFFFFF34FFFFFF34FFFFFF32FFFF
      FF34443F262C0000000000000000FFFFFFE9FFFFFF80FFFFFF7FFFFFFF82FFFF
      FF82FFFFFF82FFFFFF82FFFFFF82FFFFFF82FFFFFF80FFFFFF7FFFFFFF7EFFFF
      FF7EFFFFFF7DFFFFFF7CFFFFFF7AFFFFFF7AFFFFFF79FFFFFF77FFFFFF77FFFF
      FF76FFFFFF74FFFFFF73FFFFFF72FFFFFF70FFFFFF70FFFFFF6FFFFFFF6DFFFF
      FF6CFFFFFF6BFFFFFF69FFFFFF68FFFFFF67FFFFFF65FFFFFF65FFFFFF64FFFF
      FF62FFFFFF61FFFFFF60FFFFFF5DFFFFFF5DFFFFFF5BFFFFFF59FFFFFF58FFFF
      FF57FFFFFF55FFFFFF54FFFFFF53FFFFFF50FFFFFF50FFFFFF4EFFFFFF4BFFFF
      FF4BFFFFFF49FFFFFF47FFFFFF46FFFFFF45FFFFFF42FFFFFF41FFFFFF40FFFF
      FF3FFFFFFF3EFFFFFF3CFFFFFF3BFFFFFF3AFFFFFF38FFFFFF36FFFFFF36FFFF
      FF38FFFFFF36FFFFFF35FFFFFF34FFFFFF33FFFFFF3600000010000000000000
      0000FFFFFF99FFFFFFC1FFFFFF8FFFFFFF7AFFFFFF7CFFFFFF7CFFFFFF7CFFFF
      FF7BFFFFFF7BFFFFFF79FFFFFF78FFFFFF78FFFFFF77FFFFFF76FFFFFF75FFFF
      FF75FFFFFF74FFFFFF73FFFFFF72FFFFFF71FFFFFF70FFFFFF6EFFFFFF6FFFFF
      FF6EFFFFFF6DFFFFFF6CFFFFFF6BFFFFFF6BFFFFFF69FFFFFF69FFFFFF67FFFF
      FF66FFFFFF65FFFFFF63FFFFFF63FFFFFF63FFFFFF60FFFFFF5FFFFFFF5FFFFF
      FF5CFFFFFF5BFFFFFF5AFFFFFF59FFFFFF58FFFFFF57FFFFFF54FFFFFF53FFFF
      FF52FFFFFF50FFFFFF4FFFFFFF4EFFFFFF4CFFFFFF4AFFFFFF4BFFFFFF47FFFF
      FF45FFFFFF44FFFFFF43FFFFFF41FFFFFF40FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3BFFFFFF3AFFFFFF39FFFFFF36FFFFFF36FFFFFF39FFFFFF36FFFFFF35FFFF
      FF35FFFFFF35FCF5C73500000001000000000000000000000000FFFFFE8CFFFE
      FCD6FFFFFFF2FFFFFFEFFFFFFFEFFFFFFFEEFFFFFFECFFFFFFEAFFFFFFE6FFFF
      FFE4FFFFFFE3FFFFFFE0FFFFFFDCFFFFFFDAFFFFFFD7FFFFFFD2FFFFFFCFFFFF
      FFCDFFFFFFCAFFFFFFC6FFFFFFC0FFFFFFBEFFFFFFBAFFFFFFB6FFFFFFB3FFFF
      FFAEFFFFFFAAFFFFFFA6FFFFFFA3FFFFFF9FFFFFFF9AFFFFFF96FFFFFF93FFFF
      FF8FFFFFFF8CFFFFFF86FFFFFF83FFFFFF81FFFFFF7CFFFFFF7AFFFFFF78FFFF
      FF72FFFFFF6FFFFFFF6DFFFFFF6BFFFFFF67FFFFFF65FFFFFF62FFFFFF5EFFFF
      FF5CFFFFFF5AFFFFFF58FFFFFF56FFFFFF54FFFFFF50FFFFFF4FFFFFFF4BFFFF
      FF49FFFFFF47FFFFFF45FFFFFF43FFFFFF42FFFFFF3FFFFFFF3EFFFFFF3DFFFF
      FF3CFFFFFF3CFFFFFF3DFFFFFF3CFFFFFF3BFAF6E13AF4EEC030443D1B000000
      000000000000}
    Left = 568
    Top = 64
  end
end
